{
	"id": "c5f2c6d3889f16dd0f3c69345f5a1db1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PYGGportfolioManagement.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./interface/IWETH.sol\";\nimport \"./interface/IPortfolioFactory.sol\";\nimport { TokenInfo, Version, SwapPath } from \"./Structs.sol\";\nimport \"./SwapOperationManager.sol\";\n\ncontract PYGGportfolioManagement is Ownable, ERC20, SwapOperationManager {\n    \n    TokenInfo[] private tokens;\n\n    uint256 private totalFeesWETH;\n    uint16 public withdrawalFee;\n    uint16 public depositFee;\n\n    bool public initialedTokens = false;\n\n    mapping(address => uint256) public ethDepositedFailed;\n\n    address private factory;\n\n    event AddToken(address[] _tokens, uint256[] _targetPercentage);\n\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        address _uniswapV2Router,\n        address _uniswapV3Router,\n        address _uniswapV3Quoter\n    )\n        Ownable(msg.sender)\n        ERC20(_name, _symbol)\n        SwapOperationManager(_uniswapV2Router, _uniswapV3Router, _uniswapV3Quoter)\n    {\n        factory = msg.sender;\n    }\n\n    function initializeTokens(\n        address[] calldata _tokens,\n        uint256[] calldata _targetPercentages,\n        uint16 _withdrawalFee,\n        uint16 _depositFee\n    ) external onlyOwner {\n        require(!initialedTokens, \"initialized\");\n        require(_tokens.length == _targetPercentages.length, \"Mismatched lengths\");\n        withdrawalFee = _withdrawalFee;\n        depositFee = _depositFee;\n        uint256 totalPercentage = 0;\n        for (uint256 i = 0; i < _tokens.length; i++) {\n            require(_targetPercentages[i] <= 10000, \"InvalidPercentage\");\n            totalPercentage += _targetPercentages[i];\n             tokens.push(TokenInfo({\n                token: IERC20(_tokens[i]),\n                targetPercentage: _targetPercentages[i]\n            }));\n        }\n        require(totalPercentage == 10000, \"t=10000\");\n        initialedTokens = true;\n        emit AddToken(_tokens, _targetPercentages);\n    }\n\n    function deposit(SwapPath calldata _swapath) external payable {\n        require(_swapath.amountIn > 0, \"!>0\");\n        \n        uint256 fee = (_swapath.amountIn * depositFee) / 10000;\n        uint256 amountAfterFee = _swapath.amountIn - fee;\n        totalFeesWETH += fee;\n\n        require(amountAfterFee > 0, \"!>0\");\n        TransferHelper.safeTransferFrom(address(uniswapV2Router.WETH()), msg.sender, address(this), _swapath.amountIn);\n        TransferHelper.safeApprove(address(uniswapV2Router.WETH()), address(uniswapV3Router), _swapath.amountIn);\n        \n        _mint(msg.sender, amountAfterFee);\n\n        for (uint256 i = 0; i < tokens.length; i++) {\n            TokenInfo storage tokenInfo = tokens[i];\n            uint256 ethAmount = (amountAfterFee * tokenInfo.targetPercentage) / 10000;\n            require(ethAmount <= amountAfterFee, \"!ethAmount<=amountfee\");\n            if (ethAmount > 0) {\n                try this.swapTokenForToken(tokenInfo.token, ethAmount, _swapath.version, address(this), _swapath.path[i]) {} catch {\n                    ethDepositedFailed[msg.sender] += ethAmount;\n                    failedSwaps.push(FailedSwap(msg.sender, tokenInfo.token, ethAmount));\n                    userFailedSwaps[msg.sender]++;\n                }\n            }\n        }\n    }\n\n    function withdrawToETH(uint256 tokenAmount, bytes memory _path) external {\n        require(tokenAmount > 0, \">0\");\n        require(this.balanceOf(msg.sender) >= tokenAmount, \"!Insufficient\");\n        (SwapPath memory _swapath) = abi.decode(_path, (SwapPath));\n\n        uint256 percentage = (tokenAmount * 10000) / totalSupply();\n\n        address WETH9 = uniswapV2Router.WETH();\n        uint256 totalWETH = 0;\n        for (uint256 i = 0; i < tokens.length; i++) {\n            TokenInfo storage tokenInfo = tokens[i];\n            uint256 tokenAmountToWithdraw = (tokenInfo.token.balanceOf(address(this)) * percentage) / 10000;\n                try this.swapTokenForToken(tokenInfo.token, tokenAmountToWithdraw, _swapath.version, msg.sender, _swapath.path[i]) returns (uint256 ethReceived ) {\n                    totalWETH += ethReceived;\n                } catch {}\n        }\n\n        _burn(msg.sender, tokenAmount);\n\n        if(totalWETH > 0){\n            uint256 feeWETH = (totalWETH * withdrawalFee) / 10000;\n            uint256 amountAfterFeeWETH = totalWETH - feeWETH;\n            totalFeesWETH += feeWETH;\n            IWETH(WETH9).transfer(msg.sender, amountAfterFeeWETH);\n        }\n        // emit Withdrawn(msg.sender, totalETH, percentage);\n    }\n\n    function withdrawInKind(uint256 tokenAmount) external {\n        require(tokenAmount > 0, \"W>0\");\n        require(balanceOf(msg.sender) >= tokenAmount, \"!balance\");\n\n        uint256 userShare = (tokenAmount * 10000) / totalSupply();\n        _burn(msg.sender, tokenAmount);\n\n        for (uint256 i = 0; i < tokens.length; i++) {\n            TokenInfo storage tokenInfo = tokens[i];\n            uint256 tokenAmountToWithdraw = (tokenInfo.token.balanceOf(address(this)) * userShare) / 10000;\n            if (tokenAmountToWithdraw > 0) {\n                tokenInfo.token.transfer(msg.sender, tokenAmountToWithdraw);\n            }\n        }\n    }\n\n    function withdrawFeesByOwner(address _receiverFeeAddress) external onlyOwner {\n        if (totalFeesWETH > 0) {\n            (bool success, ) = _receiverFeeAddress.call{value: totalFeesWETH}(\"\");\n            require(success, \"transferFailed\");\n            totalFeesWETH = 0;\n        }\n    }\n\n    function getAllTokens() external view returns (TokenInfo[] memory) {\n        return tokens;\n    }\n}\n"
			},
			"contracts/SwapOperationManager.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./interface/IUniswapV2Router02.sol\";\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"./interface/IUniswapV3Quoter.sol\";\nimport { FailedSwap, Version, SwapPath } from \"./Structs.sol\";\nimport \"./interface/IWETH.sol\";\nimport \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\";\n\nabstract contract SwapOperationManager {\n\n    FailedSwap[] public failedSwaps;\n\n    uint256 public slippageTolerance;\n    \n    mapping(address => uint256) public userFailedSwaps;\n\n    IUniswapV2Router02 public uniswapV2Router;\n    ISwapRouter public uniswapV3Router;\n    IUniswapV3Quoter public uniswapV3Quoter;\n\n    constructor(address _uniswapV2Router, address _uniswapV3Router, address _uniswapV3Quoter) {\n        uniswapV2Router = IUniswapV2Router02(_uniswapV2Router);\n        uniswapV3Router = ISwapRouter(_uniswapV3Router);\n        uniswapV3Quoter = IUniswapV3Quoter(_uniswapV3Quoter);\n        slippageTolerance = 1000;\n    }\n\n    // function retryFailedSwaps(address user) external {\n    //     for (uint256 i = 0; i < failedSwaps.length; i++) {\n    //         if (failedSwaps[i].user == user) {\n    //             FailedSwap memory failedSwap = failedSwaps[i];\n    //             if(failedSwap.version == Version.V3){\n    //                 IWETH(uniswapV2Router.WETH()).deposit{value: failedSwap.amount}();\n    //                 try this.swapETHForToken(failedSwap.token, failedSwap.amount, failedSwap.version, failedSwap.feeTier) {\n    //                     removeFailedSwap(i);\n    //                     userFailedSwaps[user]--;\n    //                 } catch {\n    //                     failedSwaps.push(FailedSwap(msg.sender, failedSwap.token, failedSwap.amount, failedSwap.version, failedSwap.feeTier));\n    //                     userFailedSwaps[msg.sender]++;\n    //                     // emit SwapFailed(msg.sender, failedSwap.token, failedSwap.amount, failedSwap.version);\n    //                 }\n    //             } else if (failedSwap.version == Version.V2) {\n    //                 try this.swapETHForToken{value: failedSwap.amount}(failedSwap.token, failedSwap.amount, failedSwap.version, failedSwap.feeTier) {\n    //                     removeFailedSwap(i);\n    //                     userFailedSwaps[user]--;\n    //                 } catch {\n    //                     failedSwaps.push(FailedSwap(msg.sender, failedSwap.token, failedSwap.amount, failedSwap.version, failedSwap.feeTier));\n    //                     userFailedSwaps[msg.sender]++;\n    //                     // emit SwapFailed(msg.sender, failedSwap.token, failedSwap.amount, failedSwap.version);\n    //                 }\n    //             }\n    //         }\n    //     }\n    // }\n\n    // function getFailedSwaps(address user) external view returns (FailedSwap[] memory) {\n    //     FailedSwap[] memory userFailedSwapsArray = new FailedSwap[](userFailedSwaps[user]);\n    //     uint256 counter = 0;\n    //     for (uint256 i = 0; i < failedSwaps.length; i++) {\n    //         if (failedSwaps[i].user == user) {\n    //             userFailedSwapsArray[counter] = failedSwaps[i];\n    //             counter++;\n    //         }\n    //     }\n    //     return userFailedSwapsArray;\n    // }\n\n    // function removeFailedSwap(uint256 index) internal {\n    //     require(index < failedSwaps.length, \"!index\");\n    //     failedSwaps[index] = failedSwaps[failedSwaps.length - 1];\n    //     failedSwaps.pop();\n    // }\n\n    function swapTokenForToken(IERC20 _token, uint256 _amountIn, Version _version, address _receiver, bytes memory _path) external returns (uint256) {\n        if (_version == Version.V2) {\n            return swapTokenForTokenV2(_token, _amountIn, _receiver, _path);\n        } else if (_version == Version.V3) {\n            return swapTokenForTokenV3(_token, _amountIn, _receiver, _path);\n        } else {\n            revert(\"!UV\");\n        }\n    }\n\n    // function swapETHForToken(IERC20 _token, uint256 _ethAmount, Version version, uint24 feeTier, bytes path) external payable {\n    //     // Calculate the minimum amount of tokens to receive, considering slippage tolerance\n    //     if (version == Version.V2) {\n    //         swapETHForTokenV2(_token, _ethAmount);\n    //     } else if (version == Version.V3) {\n    //         swapETHForTokenV3(_token, _ethAmount, feeTier);\n    //     } else {\n    //         revert(\"!UV\");\n    //     }\n    // }\n\n    function swapTokenForTokenV2(IERC20 _token, uint256 _amountIn, address receiver, bytes memory path) internal returns (uint256) {\n        address[] memory pathArray = abi.decode(path, (address[]));\n        uint256[] memory expectedAmounts = uniswapV2Router.getAmountsOut(_amountIn, pathArray);\n        uint256 amountOutMinimum = (expectedAmounts[1] * (10000 - slippageTolerance)) / 10000;\n\n        _token.approve(address(uniswapV2Router), _amountIn);\n        uint256[] memory amounts = uniswapV2Router.swapExactTokensForETH(\n            _amountIn,\n            amountOutMinimum, // minimum amount of ETH to receive\n            pathArray,\n            receiver,\n            block.timestamp\n        );\n\n        return amounts[1];\n    }\n\n    // function swapETHForTokenV2(IERC20 _token, uint256 _ethAmount, bytes memory path) internal returns (uint256[] memory amounts) {\n    //     uint256[] memory expectedAmounts = uniswapV2Router.getAmountsOut(_ethAmount, path);\n    //     uint256 amountOutMinimum = (expectedAmounts[1] * (10000 - slippageTolerance)) / 10000;\n    //     amounts = uniswapV2Router.swapExactETHForTokens{value: _ethAmount}(\n    //         amountOutMinimum, // minimum amount of tokens to receive\n    //         path,\n    //         address(this),\n    //         block.timestamp\n    //     );\n\n    //     return amounts;\n    // }\n\n    function swapTokenForTokenV3(IERC20 _token, uint256 _amountIn, address _receiver, bytes memory _path) internal returns (uint256) {\n        \n        uint256 expectedAmountOut = uniswapV3Quoter.quoteExactInput(_path, _amountIn);\n\n        // Calculate the minimum amount of ETH to receive, considering slippage tolerance\n        uint256 amountOutMinimum = (expectedAmountOut * (10000 - slippageTolerance)) / 10000;\n        ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\n            path: _path,\n            recipient: _receiver,\n            deadline: block.timestamp,\n            amountIn: _amountIn,\n            amountOutMinimum: amountOutMinimum\n        });\n\n        _token.approve(address(uniswapV3Router), _amountIn);\n        return uniswapV3Router.exactInput(params);\n    }\n\n    function swapETHForTokenV3(uint256 _ethAmount, bytes memory path) internal {\n        uint256 expectedAmountOut = uniswapV3Quoter.quoteExactInput(path, _ethAmount);\n        uint256 amountOutMinimum = (expectedAmountOut * (10000 - slippageTolerance)) / 10000;\n\n        ISwapRouter.ExactInputParams memory params = ISwapRouter.ExactInputParams({\n            path: path,\n            recipient: msg.sender,\n            deadline: block.timestamp,\n            amountIn: _ethAmount,\n            amountOutMinimum: amountOutMinimum\n        });\n\n        uniswapV3Router.exactInput{value: _ethAmount}(params);\n    }\n    \n    function setSlippageTolerance(uint256 _slippageTolerance) external {\n        require(_slippageTolerance <= 10000, \"!SLP\");\n        slippageTolerance = _slippageTolerance;\n    }\n}"
			},
			"contracts/Structs.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\nenum Version {\n    V2,\n    V3\n}\n\nstruct TokenInfo {\n    IERC20 token;\n    uint256 targetPercentage;\n}\n\nstruct FailedSwap {\n    address user;\n    IERC20 token;\n    uint256 amount;\n}\n\nstruct Portfolio {\n    string name;\n    string symbol;\n    address[] tokens;\n    address owner;\n    address portfolioAddress;\n}\n\nstruct SwapPath {\n    bytes[] path;\n    uint256 amountIn;\n    Version version;\n}"
			},
			"contracts/interface/IPortfolioFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport { Version, Portfolio } from \"../Structs.sol\";\n\ninterface IPortfolioFactory {\n\n    event PortfolioCreated(address indexed owner, string name, string symbol, address[] tokens, address portfolioAddress);\n\n    function createPortfolio(\n        string memory _name,\n        string memory _symbol,\n        uint16 _withdrawalFee,\n        uint16 _depositFee,\n        address[] memory _tokens,\n        uint256[] memory _targetPercentages\n    ) external;\n\n    function getPortfolios(address _owner) external view returns (Portfolio[] memory);\n}"
			},
			"contracts/interface/IWETH.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\n/// @title Interface for WETH9\ninterface IWETH is IERC20 {\n    /// @notice Deposit ether to get wrapped ether\n    function deposit() external payable;\n\n    /// @notice Withdraw wrapped ether to get ether\n    function withdraw(uint256) external;\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n"
			},
			"contracts/interface/IUniswapV3Quoter.sol": {
				"content": "pragma solidity ^0.8.0;\n\ninterface IUniswapV3Quoter {\n    function quoteExactInput(bytes memory path, uint256 amountIn) external returns (uint256 amountOut);\n    function quoteExactOutput(bytes memory path, uint256 amountOut) external returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"contracts/interface/IUniswapV2Router02.sol": {
				"content": "\npragma solidity >=0.6.2;\n\nimport './IUniswapV2Router01.sol';\n\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountETH);\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountETH);\n\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external payable;\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"contracts/interface/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":129:2537  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209b45a6e4a5eee1b39d1c138a73f3b6eeba43211583be01edf3d2678ac0faa4d564736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209b45a6e4a5eee1b39d1c138a73f3b6eeba43211583be01edf3d2678ac0faa4d564736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 GASLIMIT 0xA6 0xE4 0xA5 0xEE 0xE1 0xB3 SWAP14 SHR SGT DUP11 PUSH20 0xF3B6EEBA43211583BE01EDF3D2678AC0FAA4D564 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "129:2408:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;129:2408:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209b45a6e4a5eee1b39d1c138a73f3b6eeba43211583be01edf3d2678ac0faa4d564736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 GASLIMIT 0xA6 0xE4 0xA5 0xEE 0xE1 0xB3 SWAP14 SHR SGT DUP11 PUSH20 0xF3B6EEBA43211583BE01EDF3D2678AC0FAA4D564 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "129:2408:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 129,
									"end": 2537,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b45a6e4a5eee1b39d1c138a73f3b6eeba43211583be01edf3d2678ac0faa4d564736f6c63430008140033",
									".code": [
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 129,
											"end": 2537,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/PYGGportfolioManagement.sol",
								"contracts/Structs.sol",
								"contracts/SwapOperationManager.sol",
								"contracts/interface/IPortfolioFactory.sol",
								"contracts/interface/IUniswapV2Router01.sol",
								"contracts/interface/IUniswapV2Router02.sol",
								"contracts/interface/IUniswapV3Quoter.sol",
								"contracts/interface/IWETH.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/PYGGportfolioManagement.sol": {
				"PYGGportfolioManagement": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "_uniswapV2Router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapV3Router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_uniswapV3Quoter",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_targetPercentage",
									"type": "uint256[]"
								}
							],
							"name": "AddToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes[]",
											"name": "path",
											"type": "bytes[]"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "enum Version",
											"name": "version",
											"type": "uint8"
										}
									],
									"internalType": "struct SwapPath",
									"name": "_swapath",
									"type": "tuple"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "depositFee",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "ethDepositedFailed",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "failedSwaps",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllTokens",
							"outputs": [
								{
									"components": [
										{
											"internalType": "contract IERC20",
											"name": "token",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "targetPercentage",
											"type": "uint256"
										}
									],
									"internalType": "struct TokenInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialedTokens",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_targetPercentages",
									"type": "uint256[]"
								},
								{
									"internalType": "uint16",
									"name": "_withdrawalFee",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_depositFee",
									"type": "uint16"
								}
							],
							"name": "initializeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_slippageTolerance",
									"type": "uint256"
								}
							],
							"name": "setSlippageTolerance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slippageTolerance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								},
								{
									"internalType": "enum Version",
									"name": "_version",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_path",
									"type": "bytes"
								}
							],
							"name": "swapTokenForToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV3Quoter",
							"outputs": [
								{
									"internalType": "contract IUniswapV3Quoter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV3Router",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFailedSwaps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_receiverFeeAddress",
									"type": "address"
								}
							],
							"name": "withdrawFeesByOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "withdrawInKind",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_path",
									"type": "bytes"
								}
							],
							"name": "withdrawToETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawalFee",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PYGGportfolioManagement.sol\":399:5713  contract PYGGportfolioManagement is Ownable, ERC20, SwapOperationManager {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PYGGportfolioManagement.sol\":615:650  bool public initialedTokens = false */\n  0x0e\n  dup1\n  sload\n  not(shl(0x20, 0xff))\n  and\n  swap1\n  sstore\n    /* \"contracts/PYGGportfolioManagement.sol\":816:1178  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PYGGportfolioManagement.sol\":1083:1099  _uniswapV2Router */\n  dup3\n    /* \"contracts/PYGGportfolioManagement.sol\":1101:1117  _uniswapV3Router */\n  dup3\n    /* \"contracts/PYGGportfolioManagement.sol\":1119:1135  _uniswapV3Quoter */\n  dup3\n    /* \"contracts/PYGGportfolioManagement.sol\":1038:1043  _name */\n  dup8\n    /* \"contracts/PYGGportfolioManagement.sol\":1045:1052  _symbol */\n  dup8\n    /* \"contracts/PYGGportfolioManagement.sol\":1012:1022  msg.sender */\n  caller\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2143:2194   */\n  mstore\n    /* \"#utility.yul\":2116:2134   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_13\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_15\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  tag_16\n  jump\t// in\ntag_15:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x05\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_17\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  tag_16\n  jump\t// in\ntag_17:\n  pop\n  pop\n    /* \"contracts/SwapOperationManager.sol\":855:870  uniswapV2Router */\n  0x09\n    /* \"contracts/SwapOperationManager.sol\":855:909  uniswapV2Router = IUniswapV2Router02(_uniswapV2Router) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap6\n  dup7\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/SwapOperationManager.sol\":919:934  uniswapV3Router */\n  0x0a\n    /* \"contracts/SwapOperationManager.sol\":919:966  uniswapV3Router = ISwapRouter(_uniswapV3Router) */\n  dup1\n  sload\n  swap5\n  dup7\n  and\n  swap5\n  dup3\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n  pop\n    /* \"contracts/SwapOperationManager.sol\":976:991  uniswapV3Quoter */\n  0x0b\n    /* \"contracts/SwapOperationManager.sol\":976:1028  uniswapV3Quoter = IUniswapV3Quoter(_uniswapV3Quoter) */\n  dup1\n  sload\n  swap2\n  swap1\n  swap4\n  and\n  swap1\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/SwapOperationManager.sol\":1058:1062  1000 */\n  0x03e8\n    /* \"contracts/SwapOperationManager.sol\":1038:1055  slippageTolerance */\n  0x07\n    /* \"contracts/SwapOperationManager.sol\":1038:1062  slippageTolerance = 1000 */\n  sstore\n    /* \"contracts/PYGGportfolioManagement.sol\":1151:1158  factory */\n  0x10\n    /* \"contracts/PYGGportfolioManagement.sol\":1151:1171  factory = msg.sender */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n    /* \"contracts/PYGGportfolioManagement.sol\":1161:1171  msg.sender */\n  caller\n    /* \"contracts/PYGGportfolioManagement.sol\":1151:1171  factory = msg.sender */\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PYGGportfolioManagement.sol\":399:5713  contract PYGGportfolioManagement is Ownable, ERC20, SwapOperationManager {... */\n  tag_29\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_22:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_23:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_32:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_34\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_36\n  tag_22\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_37:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_38:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1168   */\ntag_24:\n    /* \"#utility.yul\":1070:1083   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":1112:1143   */\n  dup2\n  and\n    /* \"#utility.yul\":1102:1144   */\n  dup2\n  eq\n    /* \"#utility.yul\":1092:1162   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1158:1159   */\n  0x00\n    /* \"#utility.yul\":1155:1156   */\n  dup1\n    /* \"#utility.yul\":1148:1160   */\n  revert\n    /* \"#utility.yul\":1092:1162   */\ntag_42:\n    /* \"#utility.yul\":991:1168   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1173:1992   */\ntag_3:\n    /* \"#utility.yul\":1299:1305   */\n  0x00\n    /* \"#utility.yul\":1307:1313   */\n  dup1\n    /* \"#utility.yul\":1315:1321   */\n  0x00\n    /* \"#utility.yul\":1323:1329   */\n  dup1\n    /* \"#utility.yul\":1331:1337   */\n  0x00\n    /* \"#utility.yul\":1384:1387   */\n  0xa0\n    /* \"#utility.yul\":1372:1381   */\n  dup7\n    /* \"#utility.yul\":1363:1370   */\n  dup9\n    /* \"#utility.yul\":1359:1382   */\n  sub\n    /* \"#utility.yul\":1355:1388   */\n  slt\n    /* \"#utility.yul\":1352:1405   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1401:1402   */\n  0x00\n    /* \"#utility.yul\":1398:1399   */\n  dup1\n    /* \"#utility.yul\":1391:1403   */\n  revert\n    /* \"#utility.yul\":1352:1405   */\ntag_44:\n    /* \"#utility.yul\":1428:1444   */\n  dup6\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1493:1507   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1490:1524   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1520:1521   */\n  0x00\n    /* \"#utility.yul\":1517:1518   */\n  dup1\n    /* \"#utility.yul\":1510:1522   */\n  revert\n    /* \"#utility.yul\":1490:1524   */\ntag_45:\n    /* \"#utility.yul\":1543:1604   */\n  tag_46\n    /* \"#utility.yul\":1596:1603   */\n  dup10\n    /* \"#utility.yul\":1587:1593   */\n  dup4\n    /* \"#utility.yul\":1576:1585   */\n  dup11\n    /* \"#utility.yul\":1572:1594   */\n  add\n    /* \"#utility.yul\":1543:1604   */\n  tag_23\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1533:1604   */\n  swap7\n  pop\n    /* \"#utility.yul\":1650:1652   */\n  0x20\n    /* \"#utility.yul\":1639:1648   */\n  dup9\n    /* \"#utility.yul\":1635:1653   */\n  add\n    /* \"#utility.yul\":1629:1654   */\n  mload\n    /* \"#utility.yul\":1613:1654   */\n  swap2\n  pop\n    /* \"#utility.yul\":1679:1681   */\n  dup1\n    /* \"#utility.yul\":1669:1677   */\n  dup3\n    /* \"#utility.yul\":1666:1682   */\n  gt\n    /* \"#utility.yul\":1663:1699   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1695:1696   */\n  0x00\n    /* \"#utility.yul\":1692:1693   */\n  dup1\n    /* \"#utility.yul\":1685:1697   */\n  revert\n    /* \"#utility.yul\":1663:1699   */\ntag_47:\n  pop\n    /* \"#utility.yul\":1718:1781   */\n  tag_48\n    /* \"#utility.yul\":1773:1780   */\n  dup9\n    /* \"#utility.yul\":1762:1770   */\n  dup3\n    /* \"#utility.yul\":1751:1760   */\n  dup10\n    /* \"#utility.yul\":1747:1771   */\n  add\n    /* \"#utility.yul\":1718:1781   */\n  tag_23\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1708:1781   */\n  swap5\n  pop\n  pop\n    /* \"#utility.yul\":1800:1849   */\n  tag_49\n    /* \"#utility.yul\":1845:1847   */\n  0x40\n    /* \"#utility.yul\":1834:1843   */\n  dup8\n    /* \"#utility.yul\":1830:1848   */\n  add\n    /* \"#utility.yul\":1800:1849   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1790:1849   */\n  swap3\n  pop\n    /* \"#utility.yul\":1868:1917   */\n  tag_50\n    /* \"#utility.yul\":1913:1915   */\n  0x60\n    /* \"#utility.yul\":1902:1911   */\n  dup8\n    /* \"#utility.yul\":1898:1916   */\n  add\n    /* \"#utility.yul\":1868:1917   */\n  tag_24\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1858:1917   */\n  swap2\n  pop\n    /* \"#utility.yul\":1936:1986   */\n  tag_51\n    /* \"#utility.yul\":1981:1984   */\n  0x80\n    /* \"#utility.yul\":1970:1979   */\n  dup8\n    /* \"#utility.yul\":1966:1985   */\n  add\n    /* \"#utility.yul\":1936:1986   */\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1926:1986   */\n  swap1\n  pop\n    /* \"#utility.yul\":1173:1992   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2205:2585   */\ntag_25:\n    /* \"#utility.yul\":2284:2285   */\n  0x01\n    /* \"#utility.yul\":2280:2292   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":2327:2339   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":2348:2409   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2402:2406   */\n  0x7f\n    /* \"#utility.yul\":2394:2400   */\n  dup3\n    /* \"#utility.yul\":2390:2407   */\n  and\n    /* \"#utility.yul\":2380:2407   */\n  swap2\n  pop\n    /* \"#utility.yul\":2348:2409   */\ntag_54:\n    /* \"#utility.yul\":2455:2457   */\n  0x20\n    /* \"#utility.yul\":2447:2453   */\n  dup3\n    /* \"#utility.yul\":2444:2458   */\n  lt\n    /* \"#utility.yul\":2424:2442   */\n  dup2\n    /* \"#utility.yul\":2421:2459   */\n  sub\n    /* \"#utility.yul\":2418:2579   */\n  tag_55\n  jumpi\n    /* \"#utility.yul\":2501:2511   */\n  0x4e487b71\n    /* \"#utility.yul\":2496:2499   */\n  0xe0\n    /* \"#utility.yul\":2492:2512   */\n  shl\n    /* \"#utility.yul\":2489:2490   */\n  0x00\n    /* \"#utility.yul\":2482:2513   */\n  mstore\n    /* \"#utility.yul\":2536:2540   */\n  0x22\n    /* \"#utility.yul\":2533:2534   */\n  0x04\n    /* \"#utility.yul\":2526:2541   */\n  mstore\n    /* \"#utility.yul\":2564:2568   */\n  0x24\n    /* \"#utility.yul\":2561:2562   */\n  0x00\n    /* \"#utility.yul\":2554:2569   */\n  revert\n    /* \"#utility.yul\":2418:2579   */\ntag_55:\n  pop\n    /* \"#utility.yul\":2205:2585   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2716:3261   */\ntag_27:\n    /* \"#utility.yul\":2818:2820   */\n  0x1f\n    /* \"#utility.yul\":2813:2816   */\n  dup3\n    /* \"#utility.yul\":2810:2821   */\n  gt\n    /* \"#utility.yul\":2807:3255   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2854:2855   */\n  0x00\n    /* \"#utility.yul\":2879:2884   */\n  dup2\n    /* \"#utility.yul\":2875:2877   */\n  dup2\n    /* \"#utility.yul\":2868:2885   */\n  mstore\n    /* \"#utility.yul\":2924:2928   */\n  0x20\n    /* \"#utility.yul\":2920:2922   */\n  dup2\n    /* \"#utility.yul\":2910:2929   */\n  keccak256\n    /* \"#utility.yul\":2994:2996   */\n  0x1f\n    /* \"#utility.yul\":2982:2992   */\n  dup6\n    /* \"#utility.yul\":2978:2997   */\n  add\n    /* \"#utility.yul\":2975:2976   */\n  0x05\n    /* \"#utility.yul\":2971:2998   */\n  shr\n    /* \"#utility.yul\":2965:2969   */\n  dup2\n    /* \"#utility.yul\":2961:2999   */\n  add\n    /* \"#utility.yul\":3030:3034   */\n  0x20\n    /* \"#utility.yul\":3018:3028   */\n  dup7\n    /* \"#utility.yul\":3015:3035   */\n  lt\n    /* \"#utility.yul\":3012:3059   */\n  iszero\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":3053:3057   */\n  dup1\n    /* \"#utility.yul\":3012:3059   */\ntag_59:\n    /* \"#utility.yul\":3108:3110   */\n  0x1f\n    /* \"#utility.yul\":3103:3106   */\n  dup6\n    /* \"#utility.yul\":3099:3111   */\n  add\n    /* \"#utility.yul\":3096:3097   */\n  0x05\n    /* \"#utility.yul\":3092:3112   */\n  shr\n    /* \"#utility.yul\":3086:3090   */\n  dup3\n    /* \"#utility.yul\":3082:3113   */\n  add\n    /* \"#utility.yul\":3072:3113   */\n  swap2\n  pop\n    /* \"#utility.yul\":3163:3245   */\ntag_60:\n    /* \"#utility.yul\":3181:3183   */\n  dup2\n    /* \"#utility.yul\":3174:3179   */\n  dup2\n    /* \"#utility.yul\":3171:3184   */\n  lt\n    /* \"#utility.yul\":3163:3245   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":3226:3243   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":3207:3208   */\n  0x01\n    /* \"#utility.yul\":3196:3209   */\n  add\n    /* \"#utility.yul\":3163:3245   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":3167:3170   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2807:3255   */\ntag_58:\n    /* \"#utility.yul\":2716:3261   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3437:4789   */\ntag_16:\n    /* \"#utility.yul\":3557:3567   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":3579:3609   */\n  dup2\n  gt\n    /* \"#utility.yul\":3576:3632   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3612:3630   */\n  tag_66\n  tag_22\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":3641:3738   */\n  tag_67\n    /* \"#utility.yul\":3731:3737   */\n  dup2\n    /* \"#utility.yul\":3691:3729   */\n  tag_68\n    /* \"#utility.yul\":3723:3727   */\n  dup5\n    /* \"#utility.yul\":3717:3728   */\n  sload\n    /* \"#utility.yul\":3691:3729   */\n  tag_25\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3685:3689   */\n  dup5\n    /* \"#utility.yul\":3641:3738   */\n  tag_27\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":3793:3797   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3857:3859   */\n  0x1f\n    /* \"#utility.yul\":3846:3860   */\n  dup4\n  gt\n    /* \"#utility.yul\":3874:3875   */\n  0x01\n    /* \"#utility.yul\":3869:4532   */\n  dup2\n  eq\n  tag_70\n  jumpi\n    /* \"#utility.yul\":4576:4577   */\n  0x00\n    /* \"#utility.yul\":4593:4599   */\n  dup5\n    /* \"#utility.yul\":4590:4679   */\n  iszero\n  tag_71\n  jumpi\n  pop\n    /* \"#utility.yul\":4645:4664   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":4639:4665   */\n  mload\n    /* \"#utility.yul\":4590:4679   */\ntag_71:\n  not(0x00)\n    /* \"#utility.yul\":3394:3395   */\n  0x03\n    /* \"#utility.yul\":3390:3401   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":3386:3410   */\n  shr\n    /* \"#utility.yul\":3382:3411   */\n  not\n    /* \"#utility.yul\":3372:3412   */\n  and\n    /* \"#utility.yul\":3418:3419   */\n  0x01\n    /* \"#utility.yul\":3414:3425   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":3369:3426   */\n  or\n    /* \"#utility.yul\":4692:4773   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3839:4783   */\n  jump(tag_62)\n    /* \"#utility.yul\":3869:4532   */\ntag_70:\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2670   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2700:2704   */\n  0x20\n    /* \"#utility.yul\":2687:2705   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3905:3925   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":4023:4259   */\ntag_74:\n    /* \"#utility.yul\":4037:4044   */\n  dup3\n    /* \"#utility.yul\":4034:4035   */\n  dup2\n    /* \"#utility.yul\":4031:4045   */\n  lt\n    /* \"#utility.yul\":4023:4259   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4126:4145   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":4120:4146   */\n  mload\n    /* \"#utility.yul\":4105:4147   */\n  dup3\n  sstore\n    /* \"#utility.yul\":4218:4245   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":4186:4187   */\n  0x01\n    /* \"#utility.yul\":4174:4188   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":4053:4072   */\n  dup5\n  add\n    /* \"#utility.yul\":4023:4259   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":4027:4030   */\n  pop\n    /* \"#utility.yul\":4287:4293   */\n  dup6\n    /* \"#utility.yul\":4278:4285   */\n  dup3\n    /* \"#utility.yul\":4275:4294   */\n  lt\n    /* \"#utility.yul\":4272:4473   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":4348:4367   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":4342:4368   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":4431:4432   */\n  0x03\n    /* \"#utility.yul\":4427:4441   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":4443:4446   */\n  0xf8\n    /* \"#utility.yul\":4423:4447   */\n  and\n    /* \"#utility.yul\":4419:4456   */\n  shr\n    /* \"#utility.yul\":4415:4457   */\n  not\n    /* \"#utility.yul\":4400:4458   */\n  and\n    /* \"#utility.yul\":4385:4459   */\n  dup2\n  sstore\n    /* \"#utility.yul\":4272:4473   */\ntag_77:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4519:4520   */\n  0x01\n    /* \"#utility.yul\":4503:4517   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":4499:4521   */\n  add\n    /* \"#utility.yul\":4486:4522   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":3437:4789   */\n  jump\t// out\ntag_29:\n    /* \"contracts/PYGGportfolioManagement.sol\":399:5713  contract PYGGportfolioManagement is Ownable, ERC20, SwapOperationManager {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PYGGportfolioManagement.sol\":399:5713  contract PYGGportfolioManagement is Ownable, ERC20, SwapOperationManager {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x67a52793\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x945098db\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc38cd0b5\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xc38cd0b5\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd03153aa\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x945098db\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa738c7df\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x74a66061\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x74a66061\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x81a06b73\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8bc7e8c4\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x67a52793\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x2a5c792a\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x36a43f2b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x36a43f2b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x378a653c\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3f595e29\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x4d20d0f8\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x2a5c792a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2c76d7a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3043d4d9\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x117da1ee\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x117da1ee\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1694505e\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0xd06ddd\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PYGGportfolioManagement.sol\":3417:4668  function withdrawToETH(uint256 tokenAmount, bytes memory _path) external {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n        /* \"#utility.yul\":3112:3126   */\n      swap1\n      iszero\n        /* \"#utility.yul\":3105:3127   */\n      iszero\n        /* \"#utility.yul\":3087:3128   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3077   */\n      0x20\n        /* \"#utility.yul\":3060:3078   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_47\n        /* \"#utility.yul\":2947:3134   */\n      jump\n        /* \"contracts/SwapOperationManager.sol\":7278:7454  function setSlippageTolerance(uint256 _slippageTolerance) external {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_40\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts/SwapOperationManager.sol\":622:663  IUniswapV2Router02 public uniswapV2Router */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      sload(0x09)\n      tag_62\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_62:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3515:3547   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3497:3548   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3485:3487   */\n      0x20\n        /* \"#utility.yul\":3470:3488   */\n      add\n        /* \"contracts/SwapOperationManager.sol\":622:663  IUniswapV2Router02 public uniswapV2Router */\n      tag_47\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x03)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_67:\n      mload(0x40)\n        /* \"#utility.yul\":3705:3730   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3693:3695   */\n      0x20\n        /* \"#utility.yul\":3678:3696   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      tag_47\n        /* \"#utility.yul\":3559:3736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_50\n      tag_73\n      calldatasize\n      0x04\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n        /* \"contracts/PYGGportfolioManagement.sol\":5614:5711  function getAllTokens() external view returns (TokenInfo[] memory) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n        /* \"contracts/SwapOperationManager.sol\":669:703  ISwapRouter public uniswapV3Router */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      sload(0x0a)\n      tag_62\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":4674:5313  function withdrawInKind(uint256 tokenAmount) external {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_40\n      tag_89\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"#utility.yul\":5395:5431   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5383:5385   */\n      0x20\n        /* \"#utility.yul\":5368:5386   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      tag_47\n        /* \"#utility.yul\":5253:5437   */\n      jump\n        /* \"contracts/SwapOperationManager.sol\":565:615  mapping(address => uint256) public userFailedSwaps */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      tag_67\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/SwapOperationManager.sol\":484:515  FailedSwap[] public failedSwaps */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_103\n      tag_104\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5966:5981   */\n      swap5\n      dup6\n      and\n        /* \"#utility.yul\":5948:5982   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6018:6033   */\n      swap4\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":6013:6015   */\n      0x20\n        /* \"#utility.yul\":5998:6016   */\n      dup5\n      add\n        /* \"#utility.yul\":5991:6034   */\n      mstore\n        /* \"#utility.yul\":6050:6068   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6043:6077   */\n      mstore\n        /* \"#utility.yul\":5898:5900   */\n      0x60\n        /* \"#utility.yul\":5883:5901   */\n      add\n        /* \"contracts/SwapOperationManager.sol\":484:515  FailedSwap[] public failedSwaps */\n      tag_47\n        /* \"#utility.yul\":5694:6083   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":1184:2113  function initializeTokens(... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_40\n      tag_110\n      calldatasize\n      0x04\n      tag_111\n      jump\t// in\n    tag_110:\n      tag_112\n      jump\t// in\n        /* \"contracts/SwapOperationManager.sol\":709:748  IUniswapV3Quoter public uniswapV3Quoter */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      sload(0x0b)\n      tag_62\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":584:608  uint16 public depositFee */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      sload(0x0e)\n      tag_119\n      swap1\n      0x010000\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\n    tag_119:\n      mload(0x40)\n        /* \"#utility.yul\":7954:7960   */\n      0xffff\n        /* \"#utility.yul\":7942:7961   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7924:7962   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7912:7914   */\n      0x20\n        /* \"#utility.yul\":7897:7915   */\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":584:608  uint16 public depositFee */\n      tag_47\n        /* \"#utility.yul\":7780:7968   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_67\n      tag_125\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_125:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_40\n      tag_130\n      jump\t// in\n        /* \"contracts/SwapOperationManager.sol\":3554:3997  function swapTokenForToken(IERC20 _token, uint256 _amountIn, Version _version, address _receiver, bytes memory _path) external returns (uint256) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      tag_67\n      tag_133\n      calldatasize\n      0x04\n      tag_134\n      jump\t// in\n    tag_133:\n      tag_135\n      jump\t// in\n        /* \"contracts/PYGGportfolioManagement.sol\":615:650  bool public initialedTokens = false */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_137\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_137:\n      pop\n      sload(0x0e)\n      tag_50\n      swap1\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":551:578  uint16 public withdrawalFee */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_141\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_141:\n      pop\n      sload(0x0e)\n      tag_119\n      swap1\n      0xffff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      jump(tag_62)\n        /* \"contracts/PYGGportfolioManagement.sol\":2119:3411  function deposit(SwapPath calldata _swapath) external payable {... */\n    tag_24:\n      tag_40\n      tag_151\n      calldatasize\n      0x04\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_154\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_154:\n      pop\n      tag_45\n      tag_156\n      jump\t// in\n        /* \"contracts/PYGGportfolioManagement.sol\":5319:5608  function withdrawFeesByOwner(address _receiverFeeAddress) external onlyOwner {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n      pop\n      tag_40\n      tag_160\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_160:\n      tag_161\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_50\n      tag_164\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"contracts/PYGGportfolioManagement.sol\":657:710  mapping(address => uint256) public ethDepositedFailed */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_67\n      tag_169\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_169:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/SwapOperationManager.sol\":522:554  uint256 public slippageTolerance */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_67\n      sload(0x07)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_67\n      tag_178\n      calldatasize\n      0x04\n      tag_179\n      jump\t// in\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_182\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_182:\n      pop\n      tag_40\n      tag_184\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n        /* \"contracts/PYGGportfolioManagement.sol\":3417:4668  function withdrawToETH(uint256 tokenAmount, bytes memory _path) external {... */\n    tag_43:\n        /* \"contracts/PYGGportfolioManagement.sol\":3522:3523  0 */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":3508:3519  tokenAmount */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":3508:3523  tokenAmount > 0 */\n      gt\n        /* \"contracts/PYGGportfolioManagement.sol\":3500:3530  require(tokenAmount > 0, \">0\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10122:10124   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":3500:3530  require(tokenAmount > 0, \">0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10104:10125   */\n      mstore\n        /* \"#utility.yul\":10161:10162   */\n      0x02\n        /* \"#utility.yul\":10141:10159   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10134:10163   */\n      mstore\n      shl(0xf4, 0x03e3)\n        /* \"#utility.yul\":10179:10197   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10172:10204   */\n      mstore\n        /* \"#utility.yul\":10221:10239   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":3500:3530  require(tokenAmount > 0, \">0\") */\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/PYGGportfolioManagement.sol\":3548:3574  this.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3563:3573  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":3548:3574  this.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3578:3589  tokenAmount */\n      dup3\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":3548:3552  this */\n      address\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":3548:3562  this.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":3548:3574  this.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"contracts/PYGGportfolioManagement.sol\":3548:3589  this.balanceOf(msg.sender) >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":3540:3607  require(this.balanceOf(msg.sender) >= tokenAmount, \"!Insufficient\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10641:10643   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":3540:3607  require(this.balanceOf(msg.sender) >= tokenAmount, \"!Insufficient\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10623:10644   */\n      mstore\n        /* \"#utility.yul\":10680:10682   */\n      0x0d\n        /* \"#utility.yul\":10660:10678   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10653:10683   */\n      mstore\n      shl(0x9a, 0x08525b9cdd59999a58da595b9d)\n        /* \"#utility.yul\":10699:10717   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10692:10735   */\n      mstore\n        /* \"#utility.yul\":10752:10770   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":3540:3607  require(this.balanceOf(msg.sender) >= tokenAmount, \"!Insufficient\") */\n      tag_188\n        /* \"#utility.yul\":10439:10776   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":3540:3607  require(this.balanceOf(msg.sender) >= tokenAmount, \"!Insufficient\") */\n    tag_195:\n        /* \"contracts/PYGGportfolioManagement.sol\":3618:3642  SwapPath memory _swapath */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":3657:3662  _path */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":3646:3675  abi.decode(_path, (SwapPath)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"contracts/PYGGportfolioManagement.sol\":3617:3675  (SwapPath memory _swapath) = abi.decode(_path, (SwapPath)) */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":3686:3704  uint256 percentage */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":3731:3744  totalSupply() */\n      tag_200\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x03)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":3731:3744  totalSupply() */\n    tag_200:\n        /* \"contracts/PYGGportfolioManagement.sol\":3708:3727  tokenAmount * 10000 */\n      tag_201\n        /* \"contracts/PYGGportfolioManagement.sol\":3708:3719  tokenAmount */\n      dup6\n        /* \"contracts/PYGGportfolioManagement.sol\":3722:3727  10000 */\n      0x2710\n        /* \"contracts/PYGGportfolioManagement.sol\":3708:3727  tokenAmount * 10000 */\n      tag_202\n      jump\t// in\n    tag_201:\n        /* \"contracts/PYGGportfolioManagement.sol\":3707:3744  (tokenAmount * 10000) / totalSupply() */\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"contracts/PYGGportfolioManagement.sol\":3686:3744  uint256 percentage = (tokenAmount * 10000) / totalSupply() */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":3755:3768  address WETH9 */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":3771:3786  uniswapV2Router */\n      0x09\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":3771:3791  uniswapV2Router.WETH */\n      and\n      0xad5c4648\n        /* \"contracts/PYGGportfolioManagement.sol\":3771:3793  uniswapV2Router.WETH() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"contracts/PYGGportfolioManagement.sol\":3755:3793  address WETH9 = uniswapV2Router.WETH() */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":3803:3820  uint256 totalWETH */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":3839:3848  uint256 i */\n      dup1\n        /* \"contracts/PYGGportfolioManagement.sol\":3834:4288  for (uint256 i = 0; i < tokens.length; i++) {... */\n    tag_209:\n        /* \"contracts/PYGGportfolioManagement.sol\":3858:3864  tokens */\n      0x0c\n        /* \"contracts/PYGGportfolioManagement.sol\":3858:3871  tokens.length */\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":3854:3871  i < tokens.length */\n      dup2\n      lt\n        /* \"contracts/PYGGportfolioManagement.sol\":3834:4288  for (uint256 i = 0; i < tokens.length; i++) {... */\n      iszero\n      tag_210\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":3892:3919  TokenInfo storage tokenInfo */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":3922:3928  tokens */\n      0x0c\n        /* \"contracts/PYGGportfolioManagement.sol\":3929:3930  i */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":3922:3931  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_213\n      jumpi\n      tag_213\n      tag_214\n      jump\t// in\n    tag_213:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x02\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":3978:3993  tokenInfo.token */\n      dup1\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":3978:4018  tokenInfo.token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":4012:4016  this */\n      address\n        /* \"contracts/PYGGportfolioManagement.sol\":3978:4018  tokenInfo.token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3922:3931  tokens[i] */\n      swap2\n      swap4\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4035:4040  10000 */\n      0x2710\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":4021:4031  percentage */\n      dup9\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":3978:3993  tokenInfo.token */\n      and\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":3978:4003  tokenInfo.token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":3978:4018  tokenInfo.token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_219:\n        /* \"contracts/PYGGportfolioManagement.sol\":3978:4031  tokenInfo.token.balanceOf(address(this)) * percentage */\n      tag_220\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_220:\n        /* \"contracts/PYGGportfolioManagement.sol\":3977:4040  (tokenInfo.token.balanceOf(address(this)) * percentage) / 10000 */\n      tag_221\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_221:\n        /* \"contracts/PYGGportfolioManagement.sol\":4085:4100  tokenInfo.token */\n      dup3\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":4125:4141  _swapath.version */\n      0x40\n      dup10\n      add\n      mload\n        /* \"contracts/PYGGportfolioManagement.sol\":4155:4168  _swapath.path */\n      dup10\n      mload\n        /* \"contracts/PYGGportfolioManagement.sol\":4155:4171  _swapath.path[i] */\n      dup1\n      mload\n        /* \"contracts/PYGGportfolioManagement.sol\":3945:4040  uint256 tokenAmountToWithdraw = (tokenInfo.token.balanceOf(address(this)) * percentage) / 10000 */\n      swap4\n      swap5\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4062:4066  this */\n      address\n      swap4\n        /* \"contracts/PYGGportfolioManagement.sol\":4062:4084  this.swapTokenForToken */\n      0x74a66061\n      swap4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":4085:4100  tokenInfo.token */\n      and\n      swap3\n        /* \"contracts/PYGGportfolioManagement.sol\":3945:4040  uint256 tokenAmountToWithdraw = (tokenInfo.token.balanceOf(address(this)) * percentage) / 10000 */\n      dup7\n      swap3\n        /* \"contracts/PYGGportfolioManagement.sol\":4125:4141  _swapath.version */\n      swap1\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":4143:4153  msg.sender */\n      caller\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":4155:4168  _swapath.path */\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":4169:4170  i */\n      dup11\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":4155:4171  _swapath.path[i] */\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_223\n      tag_214\n      jump\t// in\n    tag_223:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PYGGportfolioManagement.sol\":4062:4172  this.swapTokenForToken(tokenInfo.token, tokenAmountToWithdraw, _swapath.version, msg.sender, _swapath.path[i]) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_227\n      swap2\n      dup2\n      add\n      swap1\n      tag_194\n      jump\t// in\n    tag_227:\n      0x01\n    tag_226:\n        /* \"contracts/PYGGportfolioManagement.sol\":4058:4278  try this.swapTokenForToken(tokenInfo.token, tokenAmountToWithdraw, _swapath.version, msg.sender, _swapath.path[i]) returns (uint256 ethReceived ) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":4226:4250  totalWETH += ethReceived */\n      tag_233\n        /* \"contracts/PYGGportfolioManagement.sol\":4239:4250  ethReceived */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":4226:4250  totalWETH += ethReceived */\n      dup7\n      tag_234\n      jump\t// in\n    tag_233:\n      swap5\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4173:4269  returns (uint256 ethReceived ) {... */\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4058:4278  try this.swapTokenForToken(tokenInfo.token, tokenAmountToWithdraw, _swapath.version, msg.sender, _swapath.path[i]) returns (uint256 ethReceived ) {... */\n    tag_232:\n        /* \"contracts/PYGGportfolioManagement.sol\":3878:4288  {... */\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":3873:3876  i++ */\n      dup1\n      dup1\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      swap2\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":3834:4288  for (uint256 i = 0; i < tokens.length; i++) {... */\n      jump(tag_209)\n    tag_210:\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4298:4328  _burn(msg.sender, tokenAmount) */\n      tag_237\n        /* \"contracts/PYGGportfolioManagement.sol\":4304:4314  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":4316:4327  tokenAmount */\n      dup8\n        /* \"contracts/PYGGportfolioManagement.sol\":4298:4303  _burn */\n      tag_238\n        /* \"contracts/PYGGportfolioManagement.sol\":4298:4328  _burn(msg.sender, tokenAmount) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/PYGGportfolioManagement.sol\":4342:4355  totalWETH > 0 */\n      dup1\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":4339:4601  if(totalWETH > 0){... */\n      tag_239\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":4401:4414  withdrawalFee */\n      sload(0x0e)\n        /* \"contracts/PYGGportfolioManagement.sol\":4370:4385  uint256 feeWETH */\n      0x00\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":4418:4423  10000 */\n      0x2710\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":4389:4414  totalWETH * withdrawalFee */\n      tag_240\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":4401:4414  withdrawalFee */\n      0xffff\n      and\n        /* \"contracts/PYGGportfolioManagement.sol\":4389:4398  totalWETH */\n      dup5\n        /* \"contracts/PYGGportfolioManagement.sol\":4389:4414  totalWETH * withdrawalFee */\n      tag_202\n      jump\t// in\n    tag_240:\n        /* \"contracts/PYGGportfolioManagement.sol\":4388:4423  (totalWETH * withdrawalFee) / 10000 */\n      tag_241\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_241:\n        /* \"contracts/PYGGportfolioManagement.sol\":4370:4423  uint256 feeWETH = (totalWETH * withdrawalFee) / 10000 */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4437:4463  uint256 amountAfterFeeWETH */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":4466:4485  totalWETH - feeWETH */\n      tag_242\n        /* \"contracts/PYGGportfolioManagement.sol\":4370:4423  uint256 feeWETH = (totalWETH * withdrawalFee) / 10000 */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":4466:4475  totalWETH */\n      dup5\n        /* \"contracts/PYGGportfolioManagement.sol\":4466:4485  totalWETH - feeWETH */\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"contracts/PYGGportfolioManagement.sol\":4437:4485  uint256 amountAfterFeeWETH = totalWETH - feeWETH */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4516:4523  feeWETH */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":4499:4512  totalFeesWETH */\n      0x0d\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":4499:4523  totalFeesWETH += feeWETH */\n      dup3\n      dup3\n      sload\n      tag_244\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_244:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4537:4590  IWETH(WETH9).transfer(msg.sender, amountAfterFeeWETH) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":4559:4569  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":4537:4590  IWETH(WETH9).transfer(msg.sender, amountAfterFeeWETH) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15602:15653   */\n      mstore\n        /* \"#utility.yul\":15669:15687   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15662:15696   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":4537:4558  IWETH(WETH9).transfer */\n      dup6\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":15575:15593   */\n      0x44\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":4537:4590  IWETH(WETH9).transfer(msg.sender, amountAfterFeeWETH) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4356:4601  {... */\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4339:4601  if(totalWETH > 0){... */\n    tag_239:\n        /* \"contracts/PYGGportfolioManagement.sol\":3490:4668  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":3417:4668  function withdrawToETH(uint256 tokenAmount, bytes memory _path) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n    tag_252:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_254\n      swap1\n      tag_253\n      jump\t// in\n    tag_254:\n      dup1\n      iszero\n      tag_255\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_256\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_255)\n    tag_256:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_257:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_257\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_255:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_262\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_258:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SwapOperationManager.sol\":7278:7454  function setSlippageTolerance(uint256 _slippageTolerance) external {... */\n    tag_60:\n        /* \"contracts/SwapOperationManager.sol\":7385:7390  10000 */\n      0x2710\n        /* \"contracts/SwapOperationManager.sol\":7363:7381  _slippageTolerance */\n      dup2\n        /* \"contracts/SwapOperationManager.sol\":7363:7390  _slippageTolerance <= 10000 */\n      gt\n      iszero\n        /* \"contracts/SwapOperationManager.sol\":7355:7399  require(_slippageTolerance <= 10000, \"!SLP\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n        /* \"#utility.yul\":16576:16578   */\n      0x20\n        /* \"#utility.yul\":16558:16579   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16615:16616   */\n      0x04\n        /* \"#utility.yul\":16595:16613   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16588:16617   */\n      mstore\n      shl(0xe4, 0x021534c5)\n        /* \"#utility.yul\":16648:16650   */\n      0x40\n        /* \"#utility.yul\":16633:16651   */\n      dup3\n      add\n        /* \"#utility.yul\":16626:16660   */\n      mstore\n        /* \"#utility.yul\":16692:16694   */\n      0x60\n        /* \"#utility.yul\":16677:16695   */\n      add\n      swap1\n        /* \"#utility.yul\":16374:16701   */\n      jump\n        /* \"contracts/SwapOperationManager.sol\":7355:7399  require(_slippageTolerance <= 10000, \"!SLP\") */\n    tag_264:\n        /* \"contracts/SwapOperationManager.sol\":7409:7426  slippageTolerance */\n      0x07\n        /* \"contracts/SwapOperationManager.sol\":7409:7447  slippageTolerance = _slippageTolerance */\n      sstore\n        /* \"contracts/SwapOperationManager.sol\":7278:7454  function setSlippageTolerance(uint256 _slippageTolerance) external {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_272:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PYGGportfolioManagement.sol\":5614:5711  function getAllTokens() external view returns (TokenInfo[] memory) {... */\n    tag_79:\n        /* \"contracts/PYGGportfolioManagement.sol\":5661:5679  TokenInfo[] memory */\n      0x60\n        /* \"contracts/PYGGportfolioManagement.sol\":5698:5704  tokens */\n      0x0c\n        /* \"contracts/PYGGportfolioManagement.sol\":5691:5704  return tokens */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_275:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_276\n      jumpi\n      0x00\n      dup5\n      dup2\n      mstore\n      0x20\n      swap1\n      dup2\n      swap1\n      keccak256\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      swap1\n      swap2\n      mstore\n      0x02\n      dup6\n      mul\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      mstore\n      0x01\n      swap1\n      dup2\n      add\n      sload\n      dup3\n      dup5\n      add\n      mstore\n      swap1\n      dup4\n      mstore\n      swap1\n      swap3\n      add\n      swap2\n      add\n      jump(tag_275)\n    tag_276:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":5614:5711  function getAllTokens() external view returns (TokenInfo[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PYGGportfolioManagement.sol\":4674:5313  function withdrawInKind(uint256 tokenAmount) external {... */\n    tag_90:\n        /* \"contracts/PYGGportfolioManagement.sol\":4760:4761  0 */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":4746:4757  tokenAmount */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":4746:4761  tokenAmount > 0 */\n      gt\n        /* \"contracts/PYGGportfolioManagement.sol\":4738:4769  require(tokenAmount > 0, \"W>0\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16908:16910   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":4738:4769  require(tokenAmount > 0, \"W>0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16890:16911   */\n      mstore\n        /* \"#utility.yul\":16947:16948   */\n      0x03\n        /* \"#utility.yul\":16927:16945   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16920:16949   */\n      mstore\n      shl(0xec, 0x0573e3)\n        /* \"#utility.yul\":16965:16983   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16958:16991   */\n      mstore\n        /* \"#utility.yul\":17008:17026   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":4738:4769  require(tokenAmount > 0, \"W>0\") */\n      tag_188\n        /* \"#utility.yul\":16706:17032   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":4738:4769  require(tokenAmount > 0, \"W>0\") */\n    tag_279:\n        /* \"contracts/PYGGportfolioManagement.sol\":4797:4807  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":4812:4823  tokenAmount */\n      dup2\n      gt\n        /* \"contracts/PYGGportfolioManagement.sol\":4787:4823  balanceOf(msg.sender) >= tokenAmount */\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":4779:4836  require(balanceOf(msg.sender) >= tokenAmount, \"!balance\") */\n      tag_283\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17239:17241   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":4779:4836  require(balanceOf(msg.sender) >= tokenAmount, \"!balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17221:17242   */\n      mstore\n        /* \"#utility.yul\":17278:17279   */\n      0x08\n        /* \"#utility.yul\":17258:17276   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17251:17280   */\n      mstore\n      shl(0xc0, 0x2162616c616e6365)\n        /* \"#utility.yul\":17296:17314   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17289:17327   */\n      mstore\n        /* \"#utility.yul\":17344:17362   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":4779:4836  require(balanceOf(msg.sender) >= tokenAmount, \"!balance\") */\n      tag_188\n        /* \"#utility.yul\":17037:17368   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":4779:4836  require(balanceOf(msg.sender) >= tokenAmount, \"!balance\") */\n    tag_283:\n        /* \"contracts/PYGGportfolioManagement.sol\":4847:4864  uint256 userShare */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":4891:4904  totalSupply() */\n      tag_286\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x03)\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":4891:4904  totalSupply() */\n    tag_286:\n        /* \"contracts/PYGGportfolioManagement.sol\":4868:4887  tokenAmount * 10000 */\n      tag_287\n        /* \"contracts/PYGGportfolioManagement.sol\":4868:4879  tokenAmount */\n      dup4\n        /* \"contracts/PYGGportfolioManagement.sol\":4882:4887  10000 */\n      0x2710\n        /* \"contracts/PYGGportfolioManagement.sol\":4868:4887  tokenAmount * 10000 */\n      tag_202\n      jump\t// in\n    tag_287:\n        /* \"contracts/PYGGportfolioManagement.sol\":4867:4904  (tokenAmount * 10000) / totalSupply() */\n      tag_288\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_288:\n        /* \"contracts/PYGGportfolioManagement.sol\":4847:4904  uint256 userShare = (tokenAmount * 10000) / totalSupply() */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4914:4944  _burn(msg.sender, tokenAmount) */\n      tag_289\n        /* \"contracts/PYGGportfolioManagement.sol\":4920:4930  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":4932:4943  tokenAmount */\n      dup4\n        /* \"contracts/PYGGportfolioManagement.sol\":4914:4919  _burn */\n      tag_238\n        /* \"contracts/PYGGportfolioManagement.sol\":4914:4944  _burn(msg.sender, tokenAmount) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/PYGGportfolioManagement.sol\":4960:4969  uint256 i */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":4955:5307  for (uint256 i = 0; i < tokens.length; i++) {... */\n    tag_290:\n        /* \"contracts/PYGGportfolioManagement.sol\":4979:4985  tokens */\n      0x0c\n        /* \"contracts/PYGGportfolioManagement.sol\":4979:4992  tokens.length */\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":4975:4992  i < tokens.length */\n      dup2\n      lt\n        /* \"contracts/PYGGportfolioManagement.sol\":4955:5307  for (uint256 i = 0; i < tokens.length; i++) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":5013:5040  TokenInfo storage tokenInfo */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":5043:5049  tokens */\n      0x0c\n        /* \"contracts/PYGGportfolioManagement.sol\":5050:5051  i */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":5043:5052  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_294\n      jumpi\n      tag_294\n      tag_214\n      jump\t// in\n    tag_294:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x02\n      swap2\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":5099:5114  tokenInfo.token */\n      dup1\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":5099:5139  tokenInfo.token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":5133:5137  this */\n      address\n        /* \"contracts/PYGGportfolioManagement.sol\":5099:5139  tokenInfo.token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":5043:5052  tokens[i] */\n      swap2\n      swap4\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":5155:5160  10000 */\n      0x2710\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":5142:5151  userShare */\n      dup7\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":5099:5114  tokenInfo.token */\n      and\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":5099:5124  tokenInfo.token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":5099:5139  tokenInfo.token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_299\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_299:\n        /* \"contracts/PYGGportfolioManagement.sol\":5099:5151  tokenInfo.token.balanceOf(address(this)) * userShare */\n      tag_300\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_300:\n        /* \"contracts/PYGGportfolioManagement.sol\":5098:5160  (tokenInfo.token.balanceOf(address(this)) * userShare) / 10000 */\n      tag_301\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_301:\n        /* \"contracts/PYGGportfolioManagement.sol\":5066:5160  uint256 tokenAmountToWithdraw = (tokenInfo.token.balanceOf(address(this)) * userShare) / 10000 */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":5178:5203  tokenAmountToWithdraw > 0 */\n      dup1\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":5174:5297  if (tokenAmountToWithdraw > 0) {... */\n      tag_302\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":5223:5238  tokenInfo.token */\n      dup2\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":5223:5282  tokenInfo.token.transfer(msg.sender, tokenAmountToWithdraw) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":5248:5258  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":5223:5282  tokenInfo.token.transfer(msg.sender, tokenAmountToWithdraw) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15602:15653   */\n      mstore\n        /* \"#utility.yul\":15669:15687   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15662:15696   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":5223:5238  tokenInfo.token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":5223:5247  tokenInfo.token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":15575:15593   */\n      0x44\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":5223:5282  tokenInfo.token.transfer(msg.sender, tokenAmountToWithdraw) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_305:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_306\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_306:\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":5174:5297  if (tokenAmountToWithdraw > 0) {... */\n    tag_302:\n        /* \"contracts/PYGGportfolioManagement.sol\":4999:5307  {... */\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4994:4997  i++ */\n      dup1\n      dup1\n      tag_307\n      swap1\n      tag_236\n      jump\t// in\n    tag_307:\n      swap2\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4955:5307  for (uint256 i = 0; i < tokens.length; i++) {... */\n      jump(tag_290)\n    tag_291:\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4728:5313  {... */\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":4674:5313  function withdrawInKind(uint256 tokenAmount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/SwapOperationManager.sol\":484:515  FailedSwap[] public failedSwaps */\n    tag_105:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_309\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_309:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap2\n      dup3\n      and\n      swap4\n      pop\n      swap2\n      and\n      swap1\n      dup4\n      jump\t// out\n        /* \"contracts/PYGGportfolioManagement.sol\":1184:2113  function initializeTokens(... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_312\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_312:\n        /* \"contracts/PYGGportfolioManagement.sol\":1396:1411  initialedTokens */\n      sload(0x0e)\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/PYGGportfolioManagement.sol\":1395:1411  !initialedTokens */\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":1387:1427  require(!initialedTokens, \"initialized\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17575:17577   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":1387:1427  require(!initialedTokens, \"initialized\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17557:17578   */\n      mstore\n        /* \"#utility.yul\":17614:17616   */\n      0x0b\n        /* \"#utility.yul\":17594:17612   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17587:17617   */\n      mstore\n      shl(0xaa, 0x1a5b9a5d1a585b1a5e9959)\n        /* \"#utility.yul\":17633:17651   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17626:17667   */\n      mstore\n        /* \"#utility.yul\":17684:17702   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":1387:1427  require(!initialedTokens, \"initialized\") */\n      tag_188\n        /* \"#utility.yul\":17373:17708   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":1387:1427  require(!initialedTokens, \"initialized\") */\n    tag_315:\n        /* \"contracts/PYGGportfolioManagement.sol\":1445:1488  _tokens.length == _targetPercentages.length */\n      dup5\n      dup4\n      eq\n        /* \"contracts/PYGGportfolioManagement.sol\":1437:1511  require(_tokens.length == _targetPercentages.length, \"Mismatched lengths\") */\n      tag_318\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17915:17917   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":1437:1511  require(_tokens.length == _targetPercentages.length, \"Mismatched lengths\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17897:17918   */\n      mstore\n        /* \"#utility.yul\":17954:17956   */\n      0x12\n        /* \"#utility.yul\":17934:17952   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17927:17957   */\n      mstore\n      shl(0x70, 0x4d69736d617463686564206c656e67746873)\n        /* \"#utility.yul\":17973:17991   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17966:18014   */\n      mstore\n        /* \"#utility.yul\":18031:18049   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":1437:1511  require(_tokens.length == _targetPercentages.length, \"Mismatched lengths\") */\n      tag_188\n        /* \"#utility.yul\":17713:18055   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":1437:1511  require(_tokens.length == _targetPercentages.length, \"Mismatched lengths\") */\n    tag_318:\n        /* \"contracts/PYGGportfolioManagement.sol\":1521:1534  withdrawalFee */\n      0x0e\n        /* \"contracts/PYGGportfolioManagement.sol\":1521:1551  withdrawalFee = _withdrawalFee */\n      dup1\n      sload\n      0xffff\n        /* \"contracts/PYGGportfolioManagement.sol\":1561:1585  depositFee = _depositFee */\n      dup4\n      dup2\n      and\n      0x010000\n      mul\n      not(0xffffffff)\n      swap1\n      swap3\n      and\n        /* \"contracts/PYGGportfolioManagement.sol\":1521:1551  withdrawalFee = _withdrawalFee */\n      swap1\n      dup6\n      and\n        /* \"contracts/PYGGportfolioManagement.sol\":1561:1585  depositFee = _depositFee */\n      or\n      or\n      swap1\n      sstore\n        /* \"contracts/PYGGportfolioManagement.sol\":1521:1534  withdrawalFee */\n      0x00\n      dup1\n        /* \"contracts/PYGGportfolioManagement.sol\":1632:1969  for (uint256 i = 0; i < _tokens.length; i++) {... */\n    tag_321:\n        /* \"contracts/PYGGportfolioManagement.sol\":1652:1670  i < _tokens.length */\n      dup7\n      dup2\n      lt\n        /* \"contracts/PYGGportfolioManagement.sol\":1632:1969  for (uint256 i = 0; i < _tokens.length; i++) {... */\n      iszero\n      tag_322\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":1724:1729  10000 */\n      0x2710\n        /* \"contracts/PYGGportfolioManagement.sol\":1699:1717  _targetPercentages */\n      dup7\n      dup7\n        /* \"contracts/PYGGportfolioManagement.sol\":1718:1719  i */\n      dup4\n        /* \"contracts/PYGGportfolioManagement.sol\":1699:1720  _targetPercentages[i] */\n      dup2\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_325\n      tag_214\n      jump\t// in\n    tag_325:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/PYGGportfolioManagement.sol\":1699:1729  _targetPercentages[i] <= 10000 */\n      gt\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":1691:1751  require(_targetPercentages[i] <= 10000, \"InvalidPercentage\") */\n      tag_326\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18262:18264   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":1691:1751  require(_targetPercentages[i] <= 10000, \"InvalidPercentage\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18244:18265   */\n      mstore\n        /* \"#utility.yul\":18301:18303   */\n      0x11\n        /* \"#utility.yul\":18281:18299   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18274:18304   */\n      mstore\n      shl(0x78, 0x496e76616c696450657263656e74616765)\n        /* \"#utility.yul\":18320:18338   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18313:18360   */\n      mstore\n        /* \"#utility.yul\":18377:18395   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":1691:1751  require(_targetPercentages[i] <= 10000, \"InvalidPercentage\") */\n      tag_188\n        /* \"#utility.yul\":18060:18401   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":1691:1751  require(_targetPercentages[i] <= 10000, \"InvalidPercentage\") */\n    tag_326:\n        /* \"contracts/PYGGportfolioManagement.sol\":1784:1802  _targetPercentages */\n      dup6\n      dup6\n        /* \"contracts/PYGGportfolioManagement.sol\":1803:1804  i */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":1784:1805  _targetPercentages[i] */\n      dup2\n      dup2\n      lt\n      tag_330\n      jumpi\n      tag_330\n      tag_214\n      jump\t// in\n    tag_330:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/PYGGportfolioManagement.sol\":1765:1805  totalPercentage += _targetPercentages[i] */\n      dup3\n      tag_331\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_331:\n      swap2\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":1820:1826  tokens */\n      0x0c\n        /* \"contracts/PYGGportfolioManagement.sol\":1832:1957  TokenInfo({... */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PYGGportfolioManagement.sol\":1874:1881  _tokens */\n      dup11\n      dup11\n        /* \"contracts/PYGGportfolioManagement.sol\":1882:1883  i */\n      dup6\n        /* \"contracts/PYGGportfolioManagement.sol\":1874:1884  _tokens[i] */\n      dup2\n      dup2\n      lt\n      tag_333\n      jumpi\n      tag_333\n      tag_214\n      jump\t// in\n    tag_333:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_334\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_334:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":1832:1957  TokenInfo({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":1921:1939  _targetPercentages */\n      dup9\n      dup9\n        /* \"contracts/PYGGportfolioManagement.sol\":1940:1941  i */\n      dup6\n        /* \"contracts/PYGGportfolioManagement.sol\":1921:1942  _targetPercentages[i] */\n      dup2\n      dup2\n      lt\n      tag_336\n      jumpi\n      tag_336\n      tag_214\n      jump\t// in\n    tag_336:\n      0x20\n      swap1\n      dup2\n      mul\n      swap3\n      swap1\n      swap3\n      add\n      calldataload\n        /* \"contracts/PYGGportfolioManagement.sol\":1832:1957  TokenInfo({... */\n      swap1\n      swap3\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":1820:1958  tokens.push(TokenInfo({... */\n      dup4\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup7\n      sstore\n      0x00\n      swap6\n      dup7\n      mstore\n      swap5\n      dup3\n      swap1\n      keccak256\n      dup5\n      mload\n      0x02\n      swap1\n      swap3\n      mul\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n      swap3\n      add\n      mload\n      swap2\n      swap1\n      swap3\n      add\n      sstore\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":1672:1675  i++ */\n      dup1\n      tag_338\n      dup2\n      tag_236\n      jump\t// in\n    tag_338:\n      swap2\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":1632:1969  for (uint256 i = 0; i < _tokens.length; i++) {... */\n      jump(tag_321)\n    tag_322:\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":1986:2001  totalPercentage */\n      dup1\n        /* \"contracts/PYGGportfolioManagement.sol\":2005:2010  10000 */\n      0x2710\n        /* \"contracts/PYGGportfolioManagement.sol\":1986:2010  totalPercentage == 10000 */\n      eq\n        /* \"contracts/PYGGportfolioManagement.sol\":1978:2022  require(totalPercentage == 10000, \"t=10000\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18608:18610   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":1978:2022  require(totalPercentage == 10000, \"t=10000\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18590:18611   */\n      mstore\n        /* \"#utility.yul\":18647:18648   */\n      0x07\n        /* \"#utility.yul\":18627:18645   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18620:18649   */\n      mstore\n      shl(0xcc, 0x0743d313030303)\n        /* \"#utility.yul\":18665:18683   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18658:18695   */\n      mstore\n        /* \"#utility.yul\":18712:18730   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":1978:2022  require(totalPercentage == 10000, \"t=10000\") */\n      tag_188\n        /* \"#utility.yul\":18406:18736   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":1978:2022  require(totalPercentage == 10000, \"t=10000\") */\n    tag_339:\n        /* \"contracts/PYGGportfolioManagement.sol\":2032:2047  initialedTokens */\n      0x0e\n        /* \"contracts/PYGGportfolioManagement.sol\":2032:2054  initialedTokens = true */\n      dup1\n      sload\n      not(0xff00000000)\n      and\n      0x0100000000\n      or\n      swap1\n      sstore\n        /* \"contracts/PYGGportfolioManagement.sol\":2069:2106  AddToken(_tokens, _targetPercentages) */\n      mload(0x40)\n      0xa6413c453391b24b1553ee2908b9fdb9d8528511a0b9983f82d823531cea38b8\n      swap1\n      tag_342\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":2078:2085  _tokens */\n      dup10\n      swap1\n      dup10\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":2087:2105  _targetPercentages */\n      dup10\n      swap1\n      dup10\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":2069:2106  AddToken(_tokens, _targetPercentages) */\n      tag_343\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/PYGGportfolioManagement.sol\":1377:2113  {... */\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":1184:2113  function initializeTokens(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_346\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_346:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_348\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_349\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/SwapOperationManager.sol\":3554:3997  function swapTokenForToken(IERC20 _token, uint256 _amountIn, Version _version, address _receiver, bytes memory _path) external returns (uint256) {... */\n    tag_135:\n        /* \"contracts/SwapOperationManager.sol\":3690:3697  uint256 */\n      0x00\n      dup1\n        /* \"contracts/SwapOperationManager.sol\":3713:3721  _version */\n      dup5\n        /* \"contracts/SwapOperationManager.sol\":3713:3735  _version == Version.V2 */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_355\n      jumpi\n      tag_355\n      tag_353\n      jump\t// in\n    tag_355:\n      sub\n        /* \"contracts/SwapOperationManager.sol\":3709:3991  if (_version == Version.V2) {... */\n      tag_356\n      jumpi\n        /* \"contracts/SwapOperationManager.sol\":3758:3814  swapTokenForTokenV2(_token, _amountIn, _receiver, _path) */\n      tag_357\n        /* \"contracts/SwapOperationManager.sol\":3778:3784  _token */\n      dup7\n        /* \"contracts/SwapOperationManager.sol\":3786:3795  _amountIn */\n      dup7\n        /* \"contracts/SwapOperationManager.sol\":3797:3806  _receiver */\n      dup6\n        /* \"contracts/SwapOperationManager.sol\":3808:3813  _path */\n      dup6\n        /* \"contracts/SwapOperationManager.sol\":3758:3777  swapTokenForTokenV2 */\n      tag_358\n        /* \"contracts/SwapOperationManager.sol\":3758:3814  swapTokenForTokenV2(_token, _amountIn, _receiver, _path) */\n      jump\t// in\n    tag_357:\n        /* \"contracts/SwapOperationManager.sol\":3751:3814  return swapTokenForTokenV2(_token, _amountIn, _receiver, _path) */\n      swap1\n      pop\n      jump(tag_367)\n        /* \"contracts/SwapOperationManager.sol\":3709:3991  if (_version == Version.V2) {... */\n    tag_356:\n        /* \"contracts/SwapOperationManager.sol\":3847:3857  Version.V3 */\n      0x01\n        /* \"contracts/SwapOperationManager.sol\":3835:3843  _version */\n      dup5\n        /* \"contracts/SwapOperationManager.sol\":3835:3857  _version == Version.V3 */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_363\n      jumpi\n      tag_363\n      tag_353\n      jump\t// in\n    tag_363:\n      sub\n        /* \"contracts/SwapOperationManager.sol\":3831:3991  if (_version == Version.V3) {... */\n      tag_364\n      jumpi\n        /* \"contracts/SwapOperationManager.sol\":3880:3936  swapTokenForTokenV3(_token, _amountIn, _receiver, _path) */\n      tag_357\n        /* \"contracts/SwapOperationManager.sol\":3900:3906  _token */\n      dup7\n        /* \"contracts/SwapOperationManager.sol\":3908:3917  _amountIn */\n      dup7\n        /* \"contracts/SwapOperationManager.sol\":3919:3928  _receiver */\n      dup6\n        /* \"contracts/SwapOperationManager.sol\":3930:3935  _path */\n      dup6\n        /* \"contracts/SwapOperationManager.sol\":3880:3899  swapTokenForTokenV3 */\n      tag_366\n        /* \"contracts/SwapOperationManager.sol\":3880:3936  swapTokenForTokenV3(_token, _amountIn, _receiver, _path) */\n      jump\t// in\n        /* \"contracts/SwapOperationManager.sol\":3831:3991  if (_version == Version.V3) {... */\n    tag_364:\n        /* \"contracts/SwapOperationManager.sol\":3967:3980  revert(\"!UV\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20007:20009   */\n      0x20\n        /* \"contracts/SwapOperationManager.sol\":3967:3980  revert(\"!UV\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19989:20010   */\n      mstore\n        /* \"#utility.yul\":20046:20047   */\n      0x03\n        /* \"#utility.yul\":20026:20044   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20019:20048   */\n      mstore\n      shl(0xe9, 0x10aaab)\n        /* \"#utility.yul\":20064:20082   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20057:20090   */\n      mstore\n        /* \"#utility.yul\":20107:20125   */\n      0x64\n      add\n        /* \"contracts/SwapOperationManager.sol\":3967:3980  revert(\"!UV\") */\n      tag_188\n        /* \"#utility.yul\":19805:20131   */\n      jump\n        /* \"contracts/SwapOperationManager.sol\":3831:3991  if (_version == Version.V3) {... */\n    tag_367:\n        /* \"contracts/SwapOperationManager.sol\":3554:3997  function swapTokenForToken(IERC20 _token, uint256 _amountIn, Version _version, address _receiver, bytes memory _path) external returns (uint256) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PYGGportfolioManagement.sol\":2119:3411  function deposit(SwapPath calldata _swapath) external payable {... */\n    tag_153:\n        /* \"contracts/PYGGportfolioManagement.sol\":2219:2220  0 */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":2199:2207  _swapath */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":2199:2216  _swapath.amountIn */\n      0x20\n      add\n      calldataload\n        /* \"contracts/PYGGportfolioManagement.sol\":2199:2220  _swapath.amountIn > 0 */\n      gt\n        /* \"contracts/PYGGportfolioManagement.sol\":2191:2228  require(_swapath.amountIn > 0, \"!>0\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20338:20340   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":2191:2228  require(_swapath.amountIn > 0, \"!>0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20320:20341   */\n      mstore\n        /* \"#utility.yul\":20377:20378   */\n      0x03\n        /* \"#utility.yul\":20357:20375   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20350:20379   */\n      mstore\n      shl(0xec, 0x0213e3)\n        /* \"#utility.yul\":20395:20413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20388:20421   */\n      mstore\n        /* \"#utility.yul\":20438:20456   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":2191:2228  require(_swapath.amountIn > 0, \"!>0\") */\n      tag_188\n        /* \"#utility.yul\":20136:20462   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":2191:2228  require(_swapath.amountIn > 0, \"!>0\") */\n    tag_372:\n        /* \"contracts/PYGGportfolioManagement.sol\":2282:2292  depositFee */\n      sload(0x0e)\n        /* \"contracts/PYGGportfolioManagement.sol\":2247:2258  uint256 fee */\n      0x00\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":2296:2301  10000 */\n      0x2710\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":2262:2292  _swapath.amountIn * depositFee */\n      tag_375\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":2282:2292  depositFee */\n      0x010000\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/PYGGportfolioManagement.sol\":2262:2279  _swapath.amountIn */\n      0x20\n      dup6\n      add\n      calldataload\n        /* \"contracts/PYGGportfolioManagement.sol\":2262:2292  _swapath.amountIn * depositFee */\n      tag_202\n      jump\t// in\n    tag_375:\n        /* \"contracts/PYGGportfolioManagement.sol\":2261:2301  (_swapath.amountIn * depositFee) / 10000 */\n      tag_376\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_376:\n        /* \"contracts/PYGGportfolioManagement.sol\":2247:2301  uint256 fee = (_swapath.amountIn * depositFee) / 10000 */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2311:2333  uint256 amountAfterFee */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":2336:2359  _swapath.amountIn - fee */\n      tag_377\n        /* \"contracts/PYGGportfolioManagement.sol\":2247:2301  uint256 fee = (_swapath.amountIn * depositFee) / 10000 */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":2336:2353  _swapath.amountIn */\n      0x20\n      dup6\n      add\n      calldataload\n        /* \"contracts/PYGGportfolioManagement.sol\":2336:2359  _swapath.amountIn - fee */\n      tag_243\n      jump\t// in\n    tag_377:\n        /* \"contracts/PYGGportfolioManagement.sol\":2311:2359  uint256 amountAfterFee = _swapath.amountIn - fee */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2386:2389  fee */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":2369:2382  totalFeesWETH */\n      0x0d\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":2369:2389  totalFeesWETH += fee */\n      dup3\n      dup3\n      sload\n      tag_378\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_378:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2408:2426  amountAfterFee > 0 */\n      dup1\n        /* \"contracts/PYGGportfolioManagement.sol\":2400:2434  require(amountAfterFee > 0, \"!>0\") */\n      tag_379\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20338:20340   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":2400:2434  require(amountAfterFee > 0, \"!>0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20320:20341   */\n      mstore\n        /* \"#utility.yul\":20377:20378   */\n      0x03\n        /* \"#utility.yul\":20357:20375   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20350:20379   */\n      mstore\n      shl(0xec, 0x0213e3)\n        /* \"#utility.yul\":20395:20413   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20388:20421   */\n      mstore\n        /* \"#utility.yul\":20438:20456   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":2400:2434  require(amountAfterFee > 0, \"!>0\") */\n      tag_188\n        /* \"#utility.yul\":20136:20462   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":2400:2434  require(amountAfterFee > 0, \"!>0\") */\n    tag_379:\n        /* \"contracts/PYGGportfolioManagement.sol\":2484:2499  uniswapV2Router */\n      sload(0x09)\n        /* \"contracts/PYGGportfolioManagement.sol\":2484:2506  uniswapV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/PYGGportfolioManagement.sol\":2444:2554  TransferHelper.safeTransferFrom(address(uniswapV2Router.WETH()), msg.sender, address(this), _swapath.amountIn) */\n      tag_381\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":2484:2499  uniswapV2Router */\n      and\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":2484:2504  uniswapV2Router.WETH */\n      0xad5c4648\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":2484:2506  uniswapV2Router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":2484:2499  uniswapV2Router */\n      dup7\n        /* \"contracts/PYGGportfolioManagement.sol\":2484:2506  uniswapV2Router.WETH() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_383\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_383:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_384\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_384:\n        /* \"contracts/PYGGportfolioManagement.sol\":2509:2519  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":2529:2533  this */\n      address\n        /* \"contracts/PYGGportfolioManagement.sol\":2536:2544  _swapath */\n      dup7\n        /* \"contracts/PYGGportfolioManagement.sol\":2536:2553  _swapath.amountIn */\n      0x20\n      add\n      calldataload\n        /* \"contracts/PYGGportfolioManagement.sol\":2444:2475  TransferHelper.safeTransferFrom */\n      tag_385\n        /* \"contracts/PYGGportfolioManagement.sol\":2444:2554  TransferHelper.safeTransferFrom(address(uniswapV2Router.WETH()), msg.sender, address(this), _swapath.amountIn) */\n      jump\t// in\n    tag_381:\n        /* \"contracts/PYGGportfolioManagement.sol\":2599:2614  uniswapV2Router */\n      sload(0x09)\n        /* \"contracts/PYGGportfolioManagement.sol\":2599:2621  uniswapV2Router.WETH() */\n      0x40\n      dup1\n      mload\n      shl(0xe3, 0x15ab88c9)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/PYGGportfolioManagement.sol\":2564:2668  TransferHelper.safeApprove(address(uniswapV2Router.WETH()), address(uniswapV3Router), _swapath.amountIn) */\n      tag_386\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":2599:2614  uniswapV2Router */\n      and\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":2599:2619  uniswapV2Router.WETH */\n      0xad5c4648\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":2599:2621  uniswapV2Router.WETH() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":2599:2614  uniswapV2Router */\n      dup7\n        /* \"contracts/PYGGportfolioManagement.sol\":2599:2621  uniswapV2Router.WETH() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_388\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_388:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_389\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_389:\n        /* \"contracts/PYGGportfolioManagement.sol\":2632:2647  uniswapV3Router */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x0a))\n        /* \"contracts/PYGGportfolioManagement.sol\":2650:2667  _swapath.amountIn */\n      0x20\n      dup7\n      add\n      calldataload\n        /* \"contracts/PYGGportfolioManagement.sol\":2564:2590  TransferHelper.safeApprove */\n      tag_390\n        /* \"contracts/PYGGportfolioManagement.sol\":2564:2668  TransferHelper.safeApprove(address(uniswapV2Router.WETH()), address(uniswapV3Router), _swapath.amountIn) */\n      jump\t// in\n    tag_386:\n        /* \"contracts/PYGGportfolioManagement.sol\":2687:2720  _mint(msg.sender, amountAfterFee) */\n      tag_391\n        /* \"contracts/PYGGportfolioManagement.sol\":2693:2703  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":2705:2719  amountAfterFee */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":2687:2692  _mint */\n      tag_392\n        /* \"contracts/PYGGportfolioManagement.sol\":2687:2720  _mint(msg.sender, amountAfterFee) */\n      jump\t// in\n    tag_391:\n        /* \"contracts/PYGGportfolioManagement.sol\":2736:2745  uint256 i */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":2731:3405  for (uint256 i = 0; i < tokens.length; i++) {... */\n    tag_393:\n        /* \"contracts/PYGGportfolioManagement.sol\":2755:2761  tokens */\n      0x0c\n        /* \"contracts/PYGGportfolioManagement.sol\":2755:2768  tokens.length */\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":2751:2768  i < tokens.length */\n      dup2\n      lt\n        /* \"contracts/PYGGportfolioManagement.sol\":2731:3405  for (uint256 i = 0; i < tokens.length; i++) {... */\n      iszero\n      tag_394\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":2789:2816  TokenInfo storage tokenInfo */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":2819:2825  tokens */\n      0x0c\n        /* \"contracts/PYGGportfolioManagement.sol\":2826:2827  i */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":2819:2828  tokens[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_397\n      jumpi\n      tag_397\n      tag_214\n      jump\t// in\n    tag_397:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":2789:2828  TokenInfo storage tokenInfo = tokens[i] */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2842:2859  uint256 ethAmount */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":2910:2915  10000 */\n      0x2710\n        /* \"contracts/PYGGportfolioManagement.sol\":2880:2889  tokenInfo */\n      dup3\n        /* \"contracts/PYGGportfolioManagement.sol\":2880:2906  tokenInfo.targetPercentage */\n      0x01\n      add\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":2863:2877  amountAfterFee */\n      dup6\n        /* \"contracts/PYGGportfolioManagement.sol\":2863:2906  amountAfterFee * tokenInfo.targetPercentage */\n      tag_399\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_399:\n        /* \"contracts/PYGGportfolioManagement.sol\":2862:2915  (amountAfterFee * tokenInfo.targetPercentage) / 10000 */\n      tag_400\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_400:\n        /* \"contracts/PYGGportfolioManagement.sol\":2842:2915  uint256 ethAmount = (amountAfterFee * tokenInfo.targetPercentage) / 10000 */\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2950:2964  amountAfterFee */\n      dup4\n        /* \"contracts/PYGGportfolioManagement.sol\":2937:2946  ethAmount */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":2937:2964  ethAmount <= amountAfterFee */\n      gt\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":2929:2990  require(ethAmount <= amountAfterFee, \"!ethAmount<=amountfee\") */\n      tag_401\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20669:20671   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":2929:2990  require(ethAmount <= amountAfterFee, \"!ethAmount<=amountfee\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20651:20672   */\n      mstore\n        /* \"#utility.yul\":20708:20710   */\n      0x15\n        /* \"#utility.yul\":20688:20706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20681:20711   */\n      mstore\n      shl(0x58, 0x21657468416d6f756e743c3d616d6f756e74666565)\n        /* \"#utility.yul\":20727:20745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20720:20771   */\n      mstore\n        /* \"#utility.yul\":20788:20806   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":2929:2990  require(ethAmount <= amountAfterFee, \"!ethAmount<=amountfee\") */\n      tag_188\n        /* \"#utility.yul\":20467:20812   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":2929:2990  require(ethAmount <= amountAfterFee, \"!ethAmount<=amountfee\") */\n    tag_401:\n        /* \"contracts/PYGGportfolioManagement.sol\":3008:3021  ethAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":3004:3395  if (ethAmount > 0) {... */\n      tag_424\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":3068:3083  tokenInfo.token */\n      dup2\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":3045:3049  this */\n      address\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":3045:3067  this.swapTokenForToken */\n      0x74a66061\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":3068:3083  tokenInfo.token */\n      and\n        /* \"contracts/PYGGportfolioManagement.sol\":3085:3094  ethAmount */\n      dup4\n        /* \"contracts/PYGGportfolioManagement.sol\":3096:3112  _swapath.version */\n      tag_405\n      0x60\n      dup12\n      add\n      0x40\n      dup13\n      add\n      tag_406\n      jump\t// in\n    tag_405:\n        /* \"contracts/PYGGportfolioManagement.sol\":3122:3126  this */\n      address\n        /* \"contracts/PYGGportfolioManagement.sol\":3129:3142  _swapath.path */\n      tag_407\n        /* \"contracts/PYGGportfolioManagement.sol\":3129:3137  _swapath */\n      dup13\n      dup1\n        /* \"contracts/PYGGportfolioManagement.sol\":3129:3142  _swapath.path */\n      tag_408\n      jump\t// in\n    tag_407:\n        /* \"contracts/PYGGportfolioManagement.sol\":3143:3144  i */\n      dup11\n        /* \"contracts/PYGGportfolioManagement.sol\":3129:3145  _swapath.path[i] */\n      dup2\n      dup2\n      lt\n      tag_410\n      jumpi\n      tag_410\n      tag_214\n      jump\t// in\n    tag_410:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_411\n      swap2\n      swap1\n      tag_412\n      jump\t// in\n    tag_411:\n        /* \"contracts/PYGGportfolioManagement.sol\":3045:3146  this.swapTokenForToken(tokenInfo.token, ethAmount, _swapath.version, address(this), _swapath.path[i]) */\n      mload(0x40)\n      dup8\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_413\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_414\n      jump\t// in\n    tag_413:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_415\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_416\n      swap2\n      dup2\n      add\n      swap1\n      tag_194\n      jump\t// in\n    tag_416:\n      0x01\n    tag_415:\n        /* \"contracts/PYGGportfolioManagement.sol\":3041:3381  try this.swapTokenForToken(tokenInfo.token, ethAmount, _swapath.version, address(this), _swapath.path[i]) {} catch {... */\n      tag_417\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":3197:3207  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":3178:3208  ethDepositedFailed[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3178:3196  ethDepositedFailed */\n      0x0f\n        /* \"contracts/PYGGportfolioManagement.sol\":3178:3208  ethDepositedFailed[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/PYGGportfolioManagement.sol\":3178:3221  ethDepositedFailed[msg.sender] += ethAmount */\n      dup1\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":3212:3221  ethAmount */\n      dup4\n      swap3\n        /* \"contracts/PYGGportfolioManagement.sol\":3178:3208  ethDepositedFailed[msg.sender] */\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":3178:3221  ethDepositedFailed[msg.sender] += ethAmount */\n      tag_421\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":3212:3221  ethAmount */\n      dup5\n      swap1\n        /* \"contracts/PYGGportfolioManagement.sol\":3178:3221  ethDepositedFailed[msg.sender] += ethAmount */\n      tag_234\n      jump\t// in\n    tag_421:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":3260:3310  FailedSwap(msg.sender, tokenInfo.token, ethAmount) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3271:3281  msg.sender */\n      caller\n        /* \"contracts/PYGGportfolioManagement.sol\":3260:3310  FailedSwap(msg.sender, tokenInfo.token, ethAmount) */\n      dup1\n      dup3\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3283:3298  tokenInfo.token */\n      dup5\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/PYGGportfolioManagement.sol\":3260:3310  FailedSwap(msg.sender, tokenInfo.token, ethAmount) */\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n      dup5\n      dup7\n      add\n      dup8\n      dup2\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3243:3254  failedSwaps */\n      0x06\n        /* \"contracts/PYGGportfolioManagement.sol\":3243:3311  failedSwaps.push(FailedSwap(msg.sender, tokenInfo.token, ethAmount)) */\n      dup1\n      sload\n        /* \"contracts/PYGGportfolioManagement.sol\":3283:3298  tokenInfo.token */\n      0x01\n        /* \"contracts/PYGGportfolioManagement.sol\":3243:3311  failedSwaps.push(FailedSwap(msg.sender, tokenInfo.token, ethAmount)) */\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      swap7\n      mload\n      0x03\n      swap1\n      swap8\n      mul\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f\n      dup2\n      add\n      dup1\n      sload\n      swap9\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap10\n      dup11\n      and\n      or\n      swap1\n      sstore\n      swap4\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40\n      dup6\n      add\n      dup1\n      sload\n      swap2\n      swap1\n      swap7\n      and\n      swap8\n      and\n      swap7\n      swap1\n      swap7\n      or\n      swap1\n      swap4\n      sstore\n      swap2\n      mload\n      0xf652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d41\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3333:3360  userFailedSwaps[msg.sender] */\n      swap1\n      dup3\n      mstore\n        /* \"contracts/PYGGportfolioManagement.sol\":3333:3348  userFailedSwaps */\n      0x08\n        /* \"contracts/PYGGportfolioManagement.sol\":3333:3360  userFailedSwaps[msg.sender] */\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/PYGGportfolioManagement.sol\":3333:3362  userFailedSwaps[msg.sender]++ */\n      dup1\n      sload\n      swap2\n      tag_423\n      dup4\n      tag_236\n      jump\t// in\n    tag_423:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":3041:3381  try this.swapTokenForToken(tokenInfo.token, ethAmount, _swapath.version, address(this), _swapath.path[i]) {} catch {... */\n      jump(tag_424)\n    tag_417:\n      pop\n    tag_424:\n        /* \"contracts/PYGGportfolioManagement.sol\":2775:3405  {... */\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2770:2773  i++ */\n      dup1\n      dup1\n      tag_425\n      swap1\n      tag_236\n      jump\t// in\n    tag_425:\n      swap2\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2731:3405  for (uint256 i = 0; i < tokens.length; i++) {... */\n      jump(tag_393)\n    tag_394:\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2181:3411  {... */\n      pop\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":2119:3411  function deposit(SwapPath calldata _swapath) external payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_252\n      swap1\n      tag_253\n      jump\t// in\n        /* \"contracts/PYGGportfolioManagement.sol\":5319:5608  function withdrawFeesByOwner(address _receiverFeeAddress) external onlyOwner {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_433\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_433:\n        /* \"contracts/PYGGportfolioManagement.sol\":5410:5423  totalFeesWETH */\n      sload(0x0d)\n        /* \"contracts/PYGGportfolioManagement.sol\":5410:5427  totalFeesWETH > 0 */\n      iszero\n        /* \"contracts/PYGGportfolioManagement.sol\":5406:5602  if (totalFeesWETH > 0) {... */\n      tag_435\n      jumpi\n        /* \"contracts/PYGGportfolioManagement.sol\":5494:5507  totalFeesWETH */\n      sload(0x0d)\n        /* \"contracts/PYGGportfolioManagement.sol\":5462:5512  _receiverFeeAddress.call{value: totalFeesWETH}(\"\") */\n      mload(0x40)\n        /* \"contracts/PYGGportfolioManagement.sol\":5444:5456  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/PYGGportfolioManagement.sol\":5462:5486  _receiverFeeAddress.call */\n      dup5\n      and\n      swap2\n        /* \"contracts/PYGGportfolioManagement.sol\":5444:5456  bool success */\n      dup4\n        /* \"contracts/PYGGportfolioManagement.sol\":5462:5512  _receiverFeeAddress.call{value: totalFeesWETH}(\"\") */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":5444:5456  bool success */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":5462:5512  _receiverFeeAddress.call{value: totalFeesWETH}(\"\") */\n      dup2\n        /* \"contracts/PYGGportfolioManagement.sol\":5494:5507  totalFeesWETH */\n      dup6\n        /* \"contracts/PYGGportfolioManagement.sol\":5462:5486  _receiverFeeAddress.call */\n      dup8\n        /* \"contracts/PYGGportfolioManagement.sol\":5462:5512  _receiverFeeAddress.call{value: totalFeesWETH}(\"\") */\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_440\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_439)\n    tag_440:\n      0x60\n      swap2\n      pop\n    tag_439:\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":5443:5512  (bool success, ) = _receiverFeeAddress.call{value: totalFeesWETH}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":5534:5541  success */\n      dup1\n        /* \"contracts/PYGGportfolioManagement.sol\":5526:5560  require(success, \"transferFailed\") */\n      tag_441\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":23365:23367   */\n      0x20\n        /* \"contracts/PYGGportfolioManagement.sol\":5526:5560  require(success, \"transferFailed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":23347:23368   */\n      mstore\n        /* \"#utility.yul\":23404:23406   */\n      0x0e\n        /* \"#utility.yul\":23384:23402   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23377:23407   */\n      mstore\n      shl(0x92, 0x1d1c985b9cd9995c91985a5b1959)\n        /* \"#utility.yul\":23423:23441   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":23416:23460   */\n      mstore\n        /* \"#utility.yul\":23477:23495   */\n      0x64\n      add\n        /* \"contracts/PYGGportfolioManagement.sol\":5526:5560  require(success, \"transferFailed\") */\n      tag_188\n        /* \"#utility.yul\":23163:23501   */\n      jump\n        /* \"contracts/PYGGportfolioManagement.sol\":5526:5560  require(success, \"transferFailed\") */\n    tag_441:\n      pop\n        /* \"contracts/PYGGportfolioManagement.sol\":5590:5591  0 */\n      0x00\n        /* \"contracts/PYGGportfolioManagement.sol\":5574:5587  totalFeesWETH */\n      0x0d\n        /* \"contracts/PYGGportfolioManagement.sol\":5574:5591  totalFeesWETH = 0 */\n      sstore\n        /* \"contracts/PYGGportfolioManagement.sol\":5406:5602  if (totalFeesWETH > 0) {... */\n    tag_435:\n        /* \"contracts/PYGGportfolioManagement.sol\":5319:5608  function withdrawFeesByOwner(address _receiverFeeAddress) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_261\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_449\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_449:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_451\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_451:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_435\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_349\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_455\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_455:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_457\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_458\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_457:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_462\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_271:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_466\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      shl(0xe1, 0x7dc7a0d9)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":23726:23758   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":23708:23759   */\n      mstore\n        /* \"#utility.yul\":23775:23793   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":23768:23802   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":23818:23836   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":23811:23845   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":23681:23699   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      tag_188\n        /* \"#utility.yul\":23506:23851   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_466:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_394\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_462\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_273:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_471\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_471:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_473\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_473:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_291\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_458\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_188\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/SwapOperationManager.sol\":4507:5237  function swapTokenForTokenV2(IERC20 _token, uint256 _amountIn, address receiver, bytes memory path) internal returns (uint256) {... */\n    tag_358:\n        /* \"contracts/SwapOperationManager.sol\":4625:4632  uint256 */\n      0x00\n        /* \"contracts/SwapOperationManager.sol\":4644:4670  address[] memory pathArray */\n      dup1\n        /* \"contracts/SwapOperationManager.sol\":4684:4688  path */\n      dup3\n        /* \"contracts/SwapOperationManager.sol\":4673:4702  abi.decode(path, (address[])) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_484\n      swap2\n      swap1\n      tag_485\n      jump\t// in\n    tag_484:\n        /* \"contracts/SwapOperationManager.sol\":4747:4762  uniswapV2Router */\n      sload(0x09)\n        /* \"contracts/SwapOperationManager.sol\":4747:4798  uniswapV2Router.getAmountsOut(_amountIn, pathArray) */\n      mload(0x40)\n      shl(0xe0, 0xd06ca61f)\n      dup2\n      mstore\n        /* \"contracts/SwapOperationManager.sol\":4644:4702  address[] memory pathArray = abi.decode(path, (address[])) */\n      swap2\n      swap3\n      pop\n        /* \"contracts/SwapOperationManager.sol\":4712:4744  uint256[] memory expectedAmounts */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapOperationManager.sol\":4747:4762  uniswapV2Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":4747:4776  uniswapV2Router.getAmountsOut */\n      0xd06ca61f\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":4747:4798  uniswapV2Router.getAmountsOut(_amountIn, pathArray) */\n      tag_486\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":4777:4786  _amountIn */\n      dup10\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":4644:4702  address[] memory pathArray = abi.decode(path, (address[])) */\n      dup7\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":4747:4798  uniswapV2Router.getAmountsOut(_amountIn, pathArray) */\n      0x04\n      add\n      tag_487\n      jump\t// in\n    tag_486:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_489\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_489:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_490\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_491\n      jump\t// in\n    tag_490:\n        /* \"contracts/SwapOperationManager.sol\":4712:4798  uint256[] memory expectedAmounts = uniswapV2Router.getAmountsOut(_amountIn, pathArray) */\n      swap1\n      pop\n        /* \"contracts/SwapOperationManager.sol\":4808:4832  uint256 amountOutMinimum */\n      0x00\n        /* \"contracts/SwapOperationManager.sol\":4888:4893  10000 */\n      0x2710\n        /* \"contracts/SwapOperationManager.sol\":4866:4883  slippageTolerance */\n      sload(0x07)\n        /* \"contracts/SwapOperationManager.sol\":4858:4863  10000 */\n      0x2710\n        /* \"contracts/SwapOperationManager.sol\":4858:4883  10000 - slippageTolerance */\n      tag_492\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_492:\n        /* \"contracts/SwapOperationManager.sol\":4836:4851  expectedAmounts */\n      dup4\n        /* \"contracts/SwapOperationManager.sol\":4852:4853  1 */\n      0x01\n        /* \"contracts/SwapOperationManager.sol\":4836:4854  expectedAmounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_494\n      jumpi\n      tag_494\n      tag_214\n      jump\t// in\n    tag_494:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SwapOperationManager.sol\":4836:4884  expectedAmounts[1] * (10000 - slippageTolerance) */\n      tag_495\n      swap2\n      swap1\n      tag_202\n      jump\t// in\n    tag_495:\n        /* \"contracts/SwapOperationManager.sol\":4835:4893  (expectedAmounts[1] * (10000 - slippageTolerance)) / 10000 */\n      tag_496\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_496:\n        /* \"contracts/SwapOperationManager.sol\":4927:4942  uniswapV2Router */\n      sload(0x09)\n        /* \"contracts/SwapOperationManager.sol\":4904:4955  _token.approve(address(uniswapV2Router), _amountIn) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapOperationManager.sol\":4927:4942  uniswapV2Router */\n      swap2\n      dup3\n      and\n        /* \"contracts/SwapOperationManager.sol\":4904:4955  _token.approve(address(uniswapV2Router), _amountIn) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15602:15653   */\n      mstore\n        /* \"#utility.yul\":15669:15687   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":15662:15696   */\n      dup11\n      swap1\n      mstore\n        /* \"contracts/SwapOperationManager.sol\":4808:4893  uint256 amountOutMinimum = (expectedAmounts[1] * (10000 - slippageTolerance)) / 10000 */\n      swap2\n      swap3\n      pop\n        /* \"contracts/SwapOperationManager.sol\":4904:4918  _token.approve */\n      dup10\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":15575:15593   */\n      0x44\n      add\n        /* \"contracts/SwapOperationManager.sol\":4904:4955  _token.approve(address(uniswapV2Router), _amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_499\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_499:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_500\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_500:\n      pop\n        /* \"contracts/SwapOperationManager.sol\":4992:5007  uniswapV2Router */\n      sload(0x09)\n        /* \"contracts/SwapOperationManager.sol\":4992:5202  uniswapV2Router.swapExactTokensForETH(... */\n      mload(0x40)\n      shl(0xe0, 0x18cbafe5)\n      dup2\n      mstore\n        /* \"contracts/SwapOperationManager.sol\":4965:4989  uint256[] memory amounts */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapOperationManager.sol\":4992:5007  uniswapV2Router */\n      and\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":4992:5029  uniswapV2Router.swapExactTokensForETH */\n      0x18cbafe5\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":4992:5202  uniswapV2Router.swapExactTokensForETH(... */\n      tag_501\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":5043:5052  _amountIn */\n      dup12\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":5066:5082  amountOutMinimum */\n      dup7\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":5132:5141  pathArray */\n      dup10\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":5155:5163  receiver */\n      dup14\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":5177:5192  block.timestamp */\n      timestamp\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":4992:5202  uniswapV2Router.swapExactTokensForETH(... */\n      0x04\n      add\n      tag_502\n      jump\t// in\n    tag_501:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_504\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_504:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0x40\n      mstore\n      tag_505\n      swap2\n      swap1\n      dup2\n      add\n      swap1\n      tag_491\n      jump\t// in\n    tag_505:\n        /* \"contracts/SwapOperationManager.sol\":4965:5202  uint256[] memory amounts = uniswapV2Router.swapExactTokensForETH(... */\n      swap1\n      pop\n        /* \"contracts/SwapOperationManager.sol\":5220:5227  amounts */\n      dup1\n        /* \"contracts/SwapOperationManager.sol\":5228:5229  1 */\n      0x01\n        /* \"contracts/SwapOperationManager.sol\":5220:5230  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_507\n      jumpi\n      tag_507\n      tag_214\n      jump\t// in\n    tag_507:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/SwapOperationManager.sol\":5213:5230  return amounts[1] */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/SwapOperationManager.sol\":4507:5237  function swapTokenForTokenV2(IERC20 _token, uint256 _amountIn, address receiver, bytes memory path) internal returns (uint256) {... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SwapOperationManager.sol\":5855:6659  function swapTokenForTokenV3(IERC20 _token, uint256 _amountIn, address _receiver, bytes memory _path) internal returns (uint256) {... */\n    tag_366:\n        /* \"contracts/SwapOperationManager.sol\":6031:6046  uniswapV3Quoter */\n      sload(0x0b)\n        /* \"contracts/SwapOperationManager.sol\":6031:6080  uniswapV3Quoter.quoteExactInput(_path, _amountIn) */\n      mload(0x40)\n      shl(0xe0, 0xcdca1753)\n      dup2\n      mstore\n        /* \"contracts/SwapOperationManager.sol\":5975:5982  uint256 */\n      0x00\n      swap2\n      dup3\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapOperationManager.sol\":6031:6046  uniswapV3Quoter */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6031:6062  uniswapV3Quoter.quoteExactInput */\n      0xcdca1753\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6031:6080  uniswapV3Quoter.quoteExactInput(_path, _amountIn) */\n      tag_509\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6063:6068  _path */\n      dup7\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6070:6079  _amountIn */\n      dup10\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6031:6080  uniswapV3Quoter.quoteExactInput(_path, _amountIn) */\n      0x04\n      add\n      tag_510\n      jump\t// in\n    tag_509:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_512\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_512:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_513\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_513:\n        /* \"contracts/SwapOperationManager.sol\":6003:6080  uint256 expectedAmountOut = uniswapV3Quoter.quoteExactInput(_path, _amountIn) */\n      swap1\n      pop\n        /* \"contracts/SwapOperationManager.sol\":6181:6205  uint256 amountOutMinimum */\n      0x00\n        /* \"contracts/SwapOperationManager.sol\":6260:6265  10000 */\n      0x2710\n        /* \"contracts/SwapOperationManager.sol\":6238:6255  slippageTolerance */\n      sload(0x07)\n        /* \"contracts/SwapOperationManager.sol\":6230:6235  10000 */\n      0x2710\n        /* \"contracts/SwapOperationManager.sol\":6230:6255  10000 - slippageTolerance */\n      tag_514\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_514:\n        /* \"contracts/SwapOperationManager.sol\":6209:6256  expectedAmountOut * (10000 - slippageTolerance) */\n      tag_515\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6209:6226  expectedAmountOut */\n      dup5\n        /* \"contracts/SwapOperationManager.sol\":6209:6256  expectedAmountOut * (10000 - slippageTolerance) */\n      tag_202\n      jump\t// in\n    tag_515:\n        /* \"contracts/SwapOperationManager.sol\":6208:6265  (expectedAmountOut * (10000 - slippageTolerance)) / 10000 */\n      tag_516\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_516:\n        /* \"contracts/SwapOperationManager.sol\":6320:6539  ISwapRouter.ExactInputParams({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      dup7\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup9\n      dup2\n      and\n      0x20\n      dup4\n      add\n      mstore\n        /* \"contracts/SwapOperationManager.sol\":6432:6447  block.timestamp */\n      timestamp\n        /* \"contracts/SwapOperationManager.sol\":6320:6539  ISwapRouter.ExactInputParams({... */\n      dup3\n      dup5\n      add\n      mstore\n      0x60\n      dup3\n      add\n      dup11\n      swap1\n      mstore\n      0x80\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n        /* \"contracts/SwapOperationManager.sol\":6573:6588  uniswapV3Router */\n      sload(0x0a)\n        /* \"contracts/SwapOperationManager.sol\":6550:6601  _token.approve(address(uniswapV3Router), _amountIn) */\n      swap3\n      mload\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n        /* \"contracts/SwapOperationManager.sol\":6573:6588  uniswapV3Router */\n      swap3\n      dup2\n      and\n        /* \"contracts/SwapOperationManager.sol\":6550:6601  _token.approve(address(uniswapV3Router), _amountIn) */\n      0x04\n      dup5\n      add\n        /* \"#utility.yul\":15602:15653   */\n      mstore\n        /* \"#utility.yul\":15669:15687   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":15662:15696   */\n      dup11\n      swap1\n      mstore\n        /* \"contracts/SwapOperationManager.sol\":6320:6539  ISwapRouter.ExactInputParams({... */\n      swap3\n      swap4\n      pop\n      swap2\n        /* \"contracts/SwapOperationManager.sol\":6550:6564  _token.approve */\n      dup10\n      and\n      swap1\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":15575:15593   */\n      0x44\n      add\n        /* \"contracts/SwapOperationManager.sol\":6550:6601  _token.approve(address(uniswapV3Router), _amountIn) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_519\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_519:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_520\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_520:\n      pop\n        /* \"contracts/SwapOperationManager.sol\":6618:6633  uniswapV3Router */\n      sload(0x0a)\n        /* \"contracts/SwapOperationManager.sol\":6618:6652  uniswapV3Router.exactInput(params) */\n      mload(0x40)\n      shl(0xe0, 0xc04b8d59)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SwapOperationManager.sol\":6618:6633  uniswapV3Router */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6618:6644  uniswapV3Router.exactInput */\n      0xc04b8d59\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6618:6652  uniswapV3Router.exactInput(params) */\n      tag_521\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6645:6651  params */\n      dup5\n      swap1\n        /* \"contracts/SwapOperationManager.sol\":6618:6652  uniswapV3Router.exactInput(params) */\n      0x04\n      add\n      tag_522\n      jump\t// in\n    tag_521:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_524\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_524:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_525\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_525:\n        /* \"contracts/SwapOperationManager.sol\":6611:6652  return uniswapV3Router.exactInput(params) */\n      swap9\n        /* \"contracts/SwapOperationManager.sol\":5855:6659  function swapTokenForTokenV3(IERC20 _token, uint256 _amountIn, address _receiver, bytes memory _path) internal returns (uint256) {... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":561:919  function safeTransferFrom(... */\n    tag_385:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5966:5981   */\n      dup6\n      dup2\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5948:5982   */\n      mstore\n        /* \"#utility.yul\":6018:6033   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":5998:6016   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5991:6034   */\n      mstore\n        /* \"#utility.yul\":6050:6068   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":6043:6077   */\n      dup6\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":5883:5901   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:758  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      tag_529\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":759:828  abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":748:829  token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value)) */\n      tag_530\n      jump\t// in\n    tag_529:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_533\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_532)\n    tag_533:\n      0x60\n      swap2\n      pop\n    tag_532:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":700:829  (bool success, bytes memory data) =... */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:854  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":847:904  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_536\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:870  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:875  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":859:903  data.length == 0 || abi.decode(data, (bool)) */\n      tag_536\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":890:894  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":879:903  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_536\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_536:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":28905:28907   */\n      0x20\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":28887:28908   */\n      mstore\n        /* \"#utility.yul\":28944:28945   */\n      0x03\n        /* \"#utility.yul\":28924:28942   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":28917:28946   */\n      mstore\n      shl(0xe9, 0x29aa23)\n        /* \"#utility.yul\":28962:28980   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":28955:28988   */\n      mstore\n        /* \"#utility.yul\":29005:29023   */\n      0x64\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":839:912  require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF') */\n      tag_188\n        /* \"#utility.yul\":28703:29029   */\n      jump\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n    tag_390:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15620:15652   */\n      dup5\n      dup2\n      and\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":15602:15653   */\n      mstore\n        /* \"#utility.yul\":15669:15687   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":15662:15696   */\n      dup6\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":15575:15593   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x095ea7b3)\n      or\n      swap1\n      mstore\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2031  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      tag_542\n      swap2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2032:2090  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2021:2091  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      tag_530\n      jump\t// in\n    tag_542:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_545\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_544)\n    tag_545:\n      0x60\n      swap2\n      pop\n    tag_544:\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1985:2091  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2116  success */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2109:2166  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_548\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2132  data.length */\n      dup1\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2137  data.length == 0 */\n      iszero\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2121:2165  data.length == 0 || abi.decode(data, (bool)) */\n      tag_548\n      jumpi\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2152:2156  data */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2141:2165  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_548\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_548:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_549\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":29236:29238   */\n      0x20\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":29218:29239   */\n      mstore\n        /* \"#utility.yul\":29275:29276   */\n      0x02\n        /* \"#utility.yul\":29255:29273   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":29248:29277   */\n      mstore\n      shl(0xf0, 0x5341)\n        /* \"#utility.yul\":29293:29311   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":29286:29318   */\n      mstore\n        /* \"#utility.yul\":29335:29353   */\n      0x64\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_188\n        /* \"#utility.yul\":29034:29359   */\n      jump\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":2101:2173  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n    tag_549:\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1975:2180  {... */\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":1873:2180  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_392:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_553\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_553:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_457\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_458:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_557\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_558\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_558:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_559\n      swap1\n      pop\n      jump\n    tag_557:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_560\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      shl(0xe2, 0x391434e3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":23726:23758   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":23708:23759   */\n      mstore\n        /* \"#utility.yul\":23775:23793   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":23768:23802   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":23818:23836   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":23811:23845   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":23681:23699   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_188\n        /* \"#utility.yul\":23506:23851   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_560:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_559:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_562\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_563)\n    tag_562:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_563:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_564\n      swap2\n        /* \"#utility.yul\":3705:3730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3693:3695   */\n      0x20\n        /* \"#utility.yul\":3678:3696   */\n      add\n      swap1\n        /* \"#utility.yul\":3559:3736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n    tag_564:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_462:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_566\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xe602df05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_566:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_568\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4a1406b1)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3497:3548   */\n      mstore\n        /* \"#utility.yul\":3470:3488   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      tag_188\n        /* \"#utility.yul\":3324:3554   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_568:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_394\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_571\n      swap2\n        /* \"#utility.yul\":3705:3730   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3693:3695   */\n      0x20\n        /* \"#utility.yul\":3678:3696   */\n      add\n      swap1\n        /* \"#utility.yul\":3559:3736   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n    tag_571:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:141   */\n    tag_572:\n        /* \"#utility.yul\":75:85   */\n      0x4e487b71\n        /* \"#utility.yul\":70:73   */\n      0xe0\n        /* \"#utility.yul\":66:86   */\n      shl\n        /* \"#utility.yul\":63:64   */\n      0x00\n        /* \"#utility.yul\":56:87   */\n      mstore\n        /* \"#utility.yul\":106:110   */\n      0x41\n        /* \"#utility.yul\":103:104   */\n      0x04\n        /* \"#utility.yul\":96:111   */\n      mstore\n        /* \"#utility.yul\":130:134   */\n      0x24\n        /* \"#utility.yul\":127:128   */\n      0x00\n        /* \"#utility.yul\":120:135   */\n      revert\n        /* \"#utility.yul\":146:399   */\n    tag_573:\n        /* \"#utility.yul\":218:220   */\n      0x40\n        /* \"#utility.yul\":212:221   */\n      mload\n        /* \"#utility.yul\":260:264   */\n      0x60\n        /* \"#utility.yul\":248:265   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":280:314   */\n      dup2\n      gt\n        /* \"#utility.yul\":316:338   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":277:339   */\n      or\n        /* \"#utility.yul\":274:362   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":342:360   */\n      tag_592\n      tag_572\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":378:380   */\n      0x40\n        /* \"#utility.yul\":371:393   */\n      mstore\n        /* \"#utility.yul\":146:399   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":404:679   */\n    tag_574:\n        /* \"#utility.yul\":475:477   */\n      0x40\n        /* \"#utility.yul\":469:478   */\n      mload\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":521:534   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":517:544   */\n      and\n        /* \"#utility.yul\":505:545   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":560:594   */\n      dup2\n      gt\n        /* \"#utility.yul\":596:618   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":557:619   */\n      or\n        /* \"#utility.yul\":554:642   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":622:640   */\n      tag_595\n      tag_572\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":658:660   */\n      0x40\n        /* \"#utility.yul\":651:673   */\n      mstore\n        /* \"#utility.yul\":404:679   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:870   */\n    tag_575:\n        /* \"#utility.yul\":732:736   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":757:763   */\n      dup3\n        /* \"#utility.yul\":754:784   */\n      gt\n        /* \"#utility.yul\":751:807   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":787:805   */\n      tag_598\n      tag_572\n      jump\t// in\n    tag_598:\n      pop\n        /* \"#utility.yul\":853:855   */\n      0x1f\n        /* \"#utility.yul\":832:847   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":828:857   */\n      and\n        /* \"#utility.yul\":859:863   */\n      0x20\n        /* \"#utility.yul\":824:864   */\n      add\n      swap1\n        /* \"#utility.yul\":684:870   */\n      jump\t// out\n        /* \"#utility.yul\":875:1337   */\n    tag_576:\n        /* \"#utility.yul\":917:922   */\n      0x00\n        /* \"#utility.yul\":970:973   */\n      dup3\n        /* \"#utility.yul\":963:967   */\n      0x1f\n        /* \"#utility.yul\":955:961   */\n      dup4\n        /* \"#utility.yul\":951:968   */\n      add\n        /* \"#utility.yul\":947:974   */\n      slt\n        /* \"#utility.yul\":937:992   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":988:989   */\n      0x00\n        /* \"#utility.yul\":985:986   */\n      dup1\n        /* \"#utility.yul\":978:990   */\n      revert\n        /* \"#utility.yul\":937:992   */\n    tag_600:\n        /* \"#utility.yul\":1024:1030   */\n      dup2\n        /* \"#utility.yul\":1011:1031   */\n      calldataload\n        /* \"#utility.yul\":1055:1103   */\n      tag_601\n        /* \"#utility.yul\":1071:1102   */\n      tag_602\n        /* \"#utility.yul\":1099:1101   */\n      dup3\n        /* \"#utility.yul\":1071:1102   */\n      tag_575\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":1055:1103   */\n      tag_574\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":1128:1130   */\n      dup2\n        /* \"#utility.yul\":1119:1126   */\n      dup2\n        /* \"#utility.yul\":1112:1131   */\n      mstore\n        /* \"#utility.yul\":1174:1177   */\n      dup5\n        /* \"#utility.yul\":1167:1171   */\n      0x20\n        /* \"#utility.yul\":1162:1164   */\n      dup4\n        /* \"#utility.yul\":1154:1160   */\n      dup7\n        /* \"#utility.yul\":1150:1165   */\n      add\n        /* \"#utility.yul\":1146:1172   */\n      add\n        /* \"#utility.yul\":1143:1178   */\n      gt\n        /* \"#utility.yul\":1140:1195   */\n      iszero\n      tag_603\n      jumpi\n        /* \"#utility.yul\":1191:1192   */\n      0x00\n        /* \"#utility.yul\":1188:1189   */\n      dup1\n        /* \"#utility.yul\":1181:1193   */\n      revert\n        /* \"#utility.yul\":1140:1195   */\n    tag_603:\n        /* \"#utility.yul\":1256:1258   */\n      dup2\n        /* \"#utility.yul\":1249:1253   */\n      0x20\n        /* \"#utility.yul\":1241:1247   */\n      dup6\n        /* \"#utility.yul\":1237:1254   */\n      add\n        /* \"#utility.yul\":1230:1234   */\n      0x20\n        /* \"#utility.yul\":1221:1228   */\n      dup4\n        /* \"#utility.yul\":1217:1235   */\n      add\n        /* \"#utility.yul\":1204:1259   */\n      calldatacopy\n        /* \"#utility.yul\":1304:1305   */\n      0x00\n        /* \"#utility.yul\":1279:1295   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":1297:1301   */\n      0x20\n        /* \"#utility.yul\":1275:1302   */\n      add\n        /* \"#utility.yul\":1268:1306   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1283:1290   */\n      swap4\n        /* \"#utility.yul\":875:1337   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1342:1730   */\n    tag_42:\n        /* \"#utility.yul\":1419:1425   */\n      0x00\n        /* \"#utility.yul\":1427:1433   */\n      dup1\n        /* \"#utility.yul\":1480:1482   */\n      0x40\n        /* \"#utility.yul\":1468:1477   */\n      dup4\n        /* \"#utility.yul\":1459:1466   */\n      dup6\n        /* \"#utility.yul\":1455:1478   */\n      sub\n        /* \"#utility.yul\":1451:1483   */\n      slt\n        /* \"#utility.yul\":1448:1500   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":1496:1497   */\n      0x00\n        /* \"#utility.yul\":1493:1494   */\n      dup1\n        /* \"#utility.yul\":1486:1498   */\n      revert\n        /* \"#utility.yul\":1448:1500   */\n    tag_605:\n        /* \"#utility.yul\":1532:1541   */\n      dup3\n        /* \"#utility.yul\":1519:1542   */\n      calldataload\n        /* \"#utility.yul\":1509:1542   */\n      swap2\n      pop\n        /* \"#utility.yul\":1593:1595   */\n      0x20\n        /* \"#utility.yul\":1582:1591   */\n      dup4\n        /* \"#utility.yul\":1578:1596   */\n      add\n        /* \"#utility.yul\":1565:1597   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":1612:1618   */\n      dup2\n        /* \"#utility.yul\":1609:1639   */\n      gt\n        /* \"#utility.yul\":1606:1656   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":1652:1653   */\n      0x00\n        /* \"#utility.yul\":1649:1650   */\n      dup1\n        /* \"#utility.yul\":1642:1654   */\n      revert\n        /* \"#utility.yul\":1606:1656   */\n    tag_606:\n        /* \"#utility.yul\":1675:1724   */\n      tag_607\n        /* \"#utility.yul\":1716:1723   */\n      dup6\n        /* \"#utility.yul\":1707:1713   */\n      dup3\n        /* \"#utility.yul\":1696:1705   */\n      dup7\n        /* \"#utility.yul\":1692:1714   */\n      add\n        /* \"#utility.yul\":1675:1724   */\n      tag_576\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":1665:1724   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1342:1730   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1985   */\n    tag_577:\n        /* \"#utility.yul\":1820:1821   */\n      0x00\n        /* \"#utility.yul\":1830:1943   */\n    tag_609:\n        /* \"#utility.yul\":1844:1850   */\n      dup4\n        /* \"#utility.yul\":1841:1842   */\n      dup2\n        /* \"#utility.yul\":1838:1851   */\n      lt\n        /* \"#utility.yul\":1830:1943   */\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":1920:1931   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":1914:1932   */\n      mload\n        /* \"#utility.yul\":1901:1912   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":1894:1933   */\n      mstore\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1859:1869   */\n      add\n        /* \"#utility.yul\":1830:1943   */\n      jump(tag_609)\n    tag_611:\n      pop\n      pop\n        /* \"#utility.yul\":1977:1978   */\n      0x00\n        /* \"#utility.yul\":1959:1975   */\n      swap2\n      add\n        /* \"#utility.yul\":1952:1979   */\n      mstore\n        /* \"#utility.yul\":1735:1985   */\n      jump\t// out\n        /* \"#utility.yul\":1990:2261   */\n    tag_578:\n        /* \"#utility.yul\":2032:2035   */\n      0x00\n        /* \"#utility.yul\":2070:2075   */\n      dup2\n        /* \"#utility.yul\":2064:2076   */\n      mload\n        /* \"#utility.yul\":2097:2103   */\n      dup1\n        /* \"#utility.yul\":2092:2095   */\n      dup5\n        /* \"#utility.yul\":2085:2104   */\n      mstore\n        /* \"#utility.yul\":2113:2189   */\n      tag_613\n        /* \"#utility.yul\":2182:2188   */\n      dup2\n        /* \"#utility.yul\":2175:2179   */\n      0x20\n        /* \"#utility.yul\":2170:2173   */\n      dup7\n        /* \"#utility.yul\":2166:2180   */\n      add\n        /* \"#utility.yul\":2159:2163   */\n      0x20\n        /* \"#utility.yul\":2152:2157   */\n      dup7\n        /* \"#utility.yul\":2148:2164   */\n      add\n        /* \"#utility.yul\":2113:2189   */\n      tag_577\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":2243:2245   */\n      0x1f\n        /* \"#utility.yul\":2222:2237   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2218:2247   */\n      and\n        /* \"#utility.yul\":2209:2248   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":2250:2254   */\n      0x20\n        /* \"#utility.yul\":2205:2255   */\n      add\n      swap3\n        /* \"#utility.yul\":1990:2261   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2486   */\n    tag_48:\n        /* \"#utility.yul\":2415:2417   */\n      0x20\n        /* \"#utility.yul\":2404:2413   */\n      dup2\n        /* \"#utility.yul\":2397:2418   */\n      mstore\n        /* \"#utility.yul\":2378:2382   */\n      0x00\n        /* \"#utility.yul\":2435:2480   */\n      tag_615\n        /* \"#utility.yul\":2476:2478   */\n      0x20\n        /* \"#utility.yul\":2465:2474   */\n      dup4\n        /* \"#utility.yul\":2461:2479   */\n      add\n        /* \"#utility.yul\":2453:2459   */\n      dup5\n        /* \"#utility.yul\":2435:2480   */\n      tag_578\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":2427:2480   */\n      swap4\n        /* \"#utility.yul\":2266:2486   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2491:2622   */\n    tag_579:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2566:2597   */\n      dup2\n      and\n        /* \"#utility.yul\":2556:2598   */\n      dup2\n      eq\n        /* \"#utility.yul\":2546:2616   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":2612:2613   */\n      0x00\n        /* \"#utility.yul\":2609:2610   */\n      dup1\n        /* \"#utility.yul\":2602:2614   */\n      revert\n        /* \"#utility.yul\":2627:2942   */\n    tag_52:\n        /* \"#utility.yul\":2695:2701   */\n      0x00\n        /* \"#utility.yul\":2703:2709   */\n      dup1\n        /* \"#utility.yul\":2756:2758   */\n      0x40\n        /* \"#utility.yul\":2744:2753   */\n      dup4\n        /* \"#utility.yul\":2735:2742   */\n      dup6\n        /* \"#utility.yul\":2731:2754   */\n      sub\n        /* \"#utility.yul\":2727:2759   */\n      slt\n        /* \"#utility.yul\":2724:2776   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":2772:2773   */\n      0x00\n        /* \"#utility.yul\":2769:2770   */\n      dup1\n        /* \"#utility.yul\":2762:2774   */\n      revert\n        /* \"#utility.yul\":2724:2776   */\n    tag_619:\n        /* \"#utility.yul\":2811:2820   */\n      dup3\n        /* \"#utility.yul\":2798:2821   */\n      calldataload\n        /* \"#utility.yul\":2830:2861   */\n      tag_620\n        /* \"#utility.yul\":2855:2860   */\n      dup2\n        /* \"#utility.yul\":2830:2861   */\n      tag_579\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":2880:2885   */\n      swap5\n        /* \"#utility.yul\":2932:2934   */\n      0x20\n        /* \"#utility.yul\":2917:2935   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2904:2936   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2627:2942   */\n      jump\t// out\n        /* \"#utility.yul\":3139:3319   */\n    tag_59:\n        /* \"#utility.yul\":3198:3204   */\n      0x00\n        /* \"#utility.yul\":3251:3253   */\n      0x20\n        /* \"#utility.yul\":3239:3248   */\n      dup3\n        /* \"#utility.yul\":3230:3237   */\n      dup5\n        /* \"#utility.yul\":3226:3249   */\n      sub\n        /* \"#utility.yul\":3222:3254   */\n      slt\n        /* \"#utility.yul\":3219:3271   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":3267:3268   */\n      0x00\n        /* \"#utility.yul\":3264:3265   */\n      dup1\n        /* \"#utility.yul\":3257:3269   */\n      revert\n        /* \"#utility.yul\":3219:3271   */\n    tag_623:\n      pop\n        /* \"#utility.yul\":3290:3313   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3139:3319   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3741:4197   */\n    tag_74:\n        /* \"#utility.yul\":3818:3824   */\n      0x00\n        /* \"#utility.yul\":3826:3832   */\n      dup1\n        /* \"#utility.yul\":3834:3840   */\n      0x00\n        /* \"#utility.yul\":3887:3889   */\n      0x60\n        /* \"#utility.yul\":3875:3884   */\n      dup5\n        /* \"#utility.yul\":3866:3873   */\n      dup7\n        /* \"#utility.yul\":3862:3885   */\n      sub\n        /* \"#utility.yul\":3858:3890   */\n      slt\n        /* \"#utility.yul\":3855:3907   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":3903:3904   */\n      0x00\n        /* \"#utility.yul\":3900:3901   */\n      dup1\n        /* \"#utility.yul\":3893:3905   */\n      revert\n        /* \"#utility.yul\":3855:3907   */\n    tag_627:\n        /* \"#utility.yul\":3942:3951   */\n      dup4\n        /* \"#utility.yul\":3929:3952   */\n      calldataload\n        /* \"#utility.yul\":3961:3992   */\n      tag_628\n        /* \"#utility.yul\":3986:3991   */\n      dup2\n        /* \"#utility.yul\":3961:3992   */\n      tag_579\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":4011:4016   */\n      swap3\n      pop\n        /* \"#utility.yul\":4068:4070   */\n      0x20\n        /* \"#utility.yul\":4053:4071   */\n      dup5\n      add\n        /* \"#utility.yul\":4040:4072   */\n      calldataload\n        /* \"#utility.yul\":4081:4114   */\n      tag_629\n        /* \"#utility.yul\":4040:4072   */\n      dup2\n        /* \"#utility.yul\":4081:4114   */\n      tag_579\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":3741:4197   */\n      swap3\n      swap6\n        /* \"#utility.yul\":4133:4140   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4187:4189   */\n      0x40\n        /* \"#utility.yul\":4172:4190   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4159:4191   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":3741:4197   */\n      jump\t// out\n        /* \"#utility.yul\":4202:5020   */\n    tag_81:\n        /* \"#utility.yul\":4427:4429   */\n      0x20\n        /* \"#utility.yul\":4479:4500   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4549:4562   */\n      dup3\n      mload\n        /* \"#utility.yul\":4452:4470   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4571:4593   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":4398:4402   */\n      0x00\n      swap2\n        /* \"#utility.yul\":4427:4429   */\n      swap1\n        /* \"#utility.yul\":4612:4614   */\n      0x40\n      swap1\n        /* \"#utility.yul\":4630:4648   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4671:4686   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":4398:4402   */\n      dup6\n        /* \"#utility.yul\":4714:4994   */\n    tag_631:\n        /* \"#utility.yul\":4728:4734   */\n      dup3\n        /* \"#utility.yul\":4725:4726   */\n      dup2\n        /* \"#utility.yul\":4722:4735   */\n      lt\n        /* \"#utility.yul\":4714:4994   */\n      iszero\n      tag_633\n      jumpi\n        /* \"#utility.yul\":4787:4800   */\n      dup2\n      mload\n        /* \"#utility.yul\":4829:4838   */\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4825:4860   */\n      and\n        /* \"#utility.yul\":4813:4861   */\n      dup6\n      mstore\n        /* \"#utility.yul\":4901:4912   */\n      dup7\n      add\n        /* \"#utility.yul\":4895:4913   */\n      mload\n        /* \"#utility.yul\":4881:4893   */\n      dup7\n      dup6\n      add\n        /* \"#utility.yul\":4874:4914   */\n      mstore\n        /* \"#utility.yul\":4934:4946   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":4969:4984   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":4857:4858   */\n      0x01\n        /* \"#utility.yul\":4743:4752   */\n      add\n        /* \"#utility.yul\":4714:4994   */\n      jump(tag_631)\n    tag_633:\n      pop\n        /* \"#utility.yul\":5011:5014   */\n      swap2\n      swap8\n        /* \"#utility.yul\":4202:5020   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5442:5689   */\n    tag_99:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5554:5556   */\n      0x20\n        /* \"#utility.yul\":5542:5551   */\n      dup3\n        /* \"#utility.yul\":5533:5540   */\n      dup5\n        /* \"#utility.yul\":5529:5552   */\n      sub\n        /* \"#utility.yul\":5525:5557   */\n      slt\n        /* \"#utility.yul\":5522:5574   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":5570:5571   */\n      0x00\n        /* \"#utility.yul\":5567:5568   */\n      dup1\n        /* \"#utility.yul\":5560:5572   */\n      revert\n        /* \"#utility.yul\":5522:5574   */\n    tag_637:\n        /* \"#utility.yul\":5609:5618   */\n      dup2\n        /* \"#utility.yul\":5596:5619   */\n      calldataload\n        /* \"#utility.yul\":5628:5659   */\n      tag_615\n        /* \"#utility.yul\":5653:5658   */\n      dup2\n        /* \"#utility.yul\":5628:5659   */\n      tag_579\n      jump\t// in\n        /* \"#utility.yul\":6088:6455   */\n    tag_580:\n        /* \"#utility.yul\":6151:6159   */\n      0x00\n        /* \"#utility.yul\":6161:6167   */\n      dup1\n        /* \"#utility.yul\":6215:6218   */\n      dup4\n        /* \"#utility.yul\":6208:6212   */\n      0x1f\n        /* \"#utility.yul\":6200:6206   */\n      dup5\n        /* \"#utility.yul\":6196:6213   */\n      add\n        /* \"#utility.yul\":6192:6219   */\n      slt\n        /* \"#utility.yul\":6182:6237   */\n      tag_641\n      jumpi\n        /* \"#utility.yul\":6233:6234   */\n      0x00\n        /* \"#utility.yul\":6230:6231   */\n      dup1\n        /* \"#utility.yul\":6223:6235   */\n      revert\n        /* \"#utility.yul\":6182:6237   */\n    tag_641:\n      pop\n        /* \"#utility.yul\":6256:6276   */\n      dup2\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6288:6318   */\n      dup2\n      gt\n        /* \"#utility.yul\":6285:6335   */\n      iszero\n      tag_642\n      jumpi\n        /* \"#utility.yul\":6331:6332   */\n      0x00\n        /* \"#utility.yul\":6328:6329   */\n      dup1\n        /* \"#utility.yul\":6321:6333   */\n      revert\n        /* \"#utility.yul\":6285:6335   */\n    tag_642:\n        /* \"#utility.yul\":6368:6372   */\n      0x20\n        /* \"#utility.yul\":6360:6366   */\n      dup4\n        /* \"#utility.yul\":6356:6373   */\n      add\n        /* \"#utility.yul\":6344:6373   */\n      swap2\n      pop\n        /* \"#utility.yul\":6428:6431   */\n      dup4\n        /* \"#utility.yul\":6421:6425   */\n      0x20\n        /* \"#utility.yul\":6411:6417   */\n      dup3\n        /* \"#utility.yul\":6408:6409   */\n      0x05\n        /* \"#utility.yul\":6404:6418   */\n      shl\n        /* \"#utility.yul\":6396:6402   */\n      dup6\n        /* \"#utility.yul\":6392:6419   */\n      add\n        /* \"#utility.yul\":6388:6426   */\n      add\n        /* \"#utility.yul\":6385:6432   */\n      gt\n        /* \"#utility.yul\":6382:6449   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":6445:6446   */\n      0x00\n        /* \"#utility.yul\":6442:6443   */\n      dup1\n        /* \"#utility.yul\":6435:6447   */\n      revert\n        /* \"#utility.yul\":6382:6449   */\n    tag_643:\n        /* \"#utility.yul\":6088:6455   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6460:6619   */\n    tag_581:\n        /* \"#utility.yul\":6527:6547   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":6587:6593   */\n      0xffff\n        /* \"#utility.yul\":6576:6594   */\n      dup2\n      and\n        /* \"#utility.yul\":6566:6595   */\n      dup2\n      eq\n        /* \"#utility.yul\":6556:6613   */\n      tag_645\n      jumpi\n        /* \"#utility.yul\":6609:6610   */\n      0x00\n        /* \"#utility.yul\":6606:6607   */\n      dup1\n        /* \"#utility.yul\":6599:6611   */\n      revert\n        /* \"#utility.yul\":6556:6613   */\n    tag_645:\n        /* \"#utility.yul\":6460:6619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6624:7542   */\n    tag_111:\n        /* \"#utility.yul\":6762:6768   */\n      0x00\n        /* \"#utility.yul\":6770:6776   */\n      dup1\n        /* \"#utility.yul\":6778:6784   */\n      0x00\n        /* \"#utility.yul\":6786:6792   */\n      dup1\n        /* \"#utility.yul\":6794:6800   */\n      0x00\n        /* \"#utility.yul\":6802:6808   */\n      dup1\n        /* \"#utility.yul\":6855:6858   */\n      0x80\n        /* \"#utility.yul\":6843:6852   */\n      dup8\n        /* \"#utility.yul\":6834:6841   */\n      dup10\n        /* \"#utility.yul\":6830:6853   */\n      sub\n        /* \"#utility.yul\":6826:6859   */\n      slt\n        /* \"#utility.yul\":6823:6876   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":6872:6873   */\n      0x00\n        /* \"#utility.yul\":6869:6870   */\n      dup1\n        /* \"#utility.yul\":6862:6874   */\n      revert\n        /* \"#utility.yul\":6823:6876   */\n    tag_647:\n        /* \"#utility.yul\":6912:6921   */\n      dup7\n        /* \"#utility.yul\":6899:6922   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":6982:6984   */\n      dup1\n        /* \"#utility.yul\":6974:6980   */\n      dup3\n        /* \"#utility.yul\":6971:6985   */\n      gt\n        /* \"#utility.yul\":6968:7002   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":6998:6999   */\n      0x00\n        /* \"#utility.yul\":6995:6996   */\n      dup1\n        /* \"#utility.yul\":6988:7000   */\n      revert\n        /* \"#utility.yul\":6968:7002   */\n    tag_648:\n        /* \"#utility.yul\":7037:7107   */\n      tag_649\n        /* \"#utility.yul\":7099:7106   */\n      dup11\n        /* \"#utility.yul\":7090:7096   */\n      dup4\n        /* \"#utility.yul\":7079:7088   */\n      dup12\n        /* \"#utility.yul\":7075:7097   */\n      add\n        /* \"#utility.yul\":7037:7107   */\n      tag_580\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":7126:7134   */\n      swap1\n      swap9\n      pop\n        /* \"#utility.yul\":7011:7107   */\n      swap7\n      pop\n        /* \"#utility.yul\":7214:7216   */\n      0x20\n        /* \"#utility.yul\":7199:7217   */\n      dup10\n      add\n        /* \"#utility.yul\":7186:7218   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7230:7246   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7227:7263   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":7259:7260   */\n      0x00\n        /* \"#utility.yul\":7256:7257   */\n      dup1\n        /* \"#utility.yul\":7249:7261   */\n      revert\n        /* \"#utility.yul\":7227:7263   */\n    tag_650:\n      pop\n        /* \"#utility.yul\":7298:7370   */\n      tag_651\n        /* \"#utility.yul\":7362:7369   */\n      dup10\n        /* \"#utility.yul\":7351:7359   */\n      dup3\n        /* \"#utility.yul\":7340:7349   */\n      dup11\n        /* \"#utility.yul\":7336:7360   */\n      add\n        /* \"#utility.yul\":7298:7370   */\n      tag_580\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":7389:7397   */\n      swap1\n      swap6\n      pop\n        /* \"#utility.yul\":7272:7370   */\n      swap4\n      pop\n        /* \"#utility.yul\":7443:7480   */\n      tag_652\n      swap1\n      pop\n        /* \"#utility.yul\":7476:7478   */\n      0x40\n        /* \"#utility.yul\":7461:7479   */\n      dup9\n      add\n        /* \"#utility.yul\":7443:7480   */\n      tag_581\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":7433:7480   */\n      swap2\n      pop\n        /* \"#utility.yul\":7499:7536   */\n      tag_653\n        /* \"#utility.yul\":7532:7534   */\n      0x60\n        /* \"#utility.yul\":7521:7530   */\n      dup9\n        /* \"#utility.yul\":7517:7535   */\n      add\n        /* \"#utility.yul\":7499:7536   */\n      tag_581\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":7489:7536   */\n      swap1\n      pop\n        /* \"#utility.yul\":6624:7542   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":7973:8079   */\n    tag_582:\n        /* \"#utility.yul\":8053:8054   */\n      0x02\n        /* \"#utility.yul\":8046:8051   */\n      dup2\n        /* \"#utility.yul\":8043:8055   */\n      lt\n        /* \"#utility.yul\":8033:8073   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":8069:8070   */\n      0x00\n        /* \"#utility.yul\":8066:8067   */\n      dup1\n        /* \"#utility.yul\":8059:8071   */\n      revert\n        /* \"#utility.yul\":8084:8922   */\n    tag_134:\n        /* \"#utility.yul\":8214:8220   */\n      0x00\n        /* \"#utility.yul\":8222:8228   */\n      dup1\n        /* \"#utility.yul\":8230:8236   */\n      0x00\n        /* \"#utility.yul\":8238:8244   */\n      dup1\n        /* \"#utility.yul\":8246:8252   */\n      0x00\n        /* \"#utility.yul\":8299:8302   */\n      0xa0\n        /* \"#utility.yul\":8287:8296   */\n      dup7\n        /* \"#utility.yul\":8278:8285   */\n      dup9\n        /* \"#utility.yul\":8274:8297   */\n      sub\n        /* \"#utility.yul\":8270:8303   */\n      slt\n        /* \"#utility.yul\":8267:8320   */\n      iszero\n      tag_659\n      jumpi\n        /* \"#utility.yul\":8316:8317   */\n      0x00\n        /* \"#utility.yul\":8313:8314   */\n      dup1\n        /* \"#utility.yul\":8306:8318   */\n      revert\n        /* \"#utility.yul\":8267:8320   */\n    tag_659:\n        /* \"#utility.yul\":8355:8364   */\n      dup6\n        /* \"#utility.yul\":8342:8365   */\n      calldataload\n        /* \"#utility.yul\":8374:8405   */\n      tag_660\n        /* \"#utility.yul\":8399:8404   */\n      dup2\n        /* \"#utility.yul\":8374:8405   */\n      tag_579\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":8424:8429   */\n      swap5\n      pop\n        /* \"#utility.yul\":8476:8478   */\n      0x20\n        /* \"#utility.yul\":8461:8479   */\n      dup7\n      add\n        /* \"#utility.yul\":8448:8480   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":8532:8534   */\n      0x40\n        /* \"#utility.yul\":8517:8535   */\n      dup7\n      add\n        /* \"#utility.yul\":8504:8536   */\n      calldataload\n        /* \"#utility.yul\":8545:8583   */\n      tag_661\n        /* \"#utility.yul\":8504:8536   */\n      dup2\n        /* \"#utility.yul\":8545:8583   */\n      tag_582\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":8602:8609   */\n      swap3\n      pop\n        /* \"#utility.yul\":8661:8663   */\n      0x60\n        /* \"#utility.yul\":8646:8664   */\n      dup7\n      add\n        /* \"#utility.yul\":8633:8665   */\n      calldataload\n        /* \"#utility.yul\":8674:8707   */\n      tag_662\n        /* \"#utility.yul\":8633:8665   */\n      dup2\n        /* \"#utility.yul\":8674:8707   */\n      tag_579\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":8726:8733   */\n      swap2\n      pop\n        /* \"#utility.yul\":8784:8787   */\n      0x80\n        /* \"#utility.yul\":8769:8788   */\n      dup7\n      add\n        /* \"#utility.yul\":8756:8789   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":8801:8831   */\n      dup2\n      gt\n        /* \"#utility.yul\":8798:8848   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":8844:8845   */\n      0x00\n        /* \"#utility.yul\":8841:8842   */\n      dup1\n        /* \"#utility.yul\":8834:8846   */\n      revert\n        /* \"#utility.yul\":8798:8848   */\n    tag_663:\n        /* \"#utility.yul\":8867:8916   */\n      tag_664\n        /* \"#utility.yul\":8908:8915   */\n      dup9\n        /* \"#utility.yul\":8899:8905   */\n      dup3\n        /* \"#utility.yul\":8888:8897   */\n      dup10\n        /* \"#utility.yul\":8884:8906   */\n      add\n        /* \"#utility.yul\":8867:8916   */\n      tag_576\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":8857:8916   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8084:8922   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9135:9522   */\n    tag_152:\n        /* \"#utility.yul\":9222:9228   */\n      0x00\n        /* \"#utility.yul\":9275:9277   */\n      0x20\n        /* \"#utility.yul\":9263:9272   */\n      dup3\n        /* \"#utility.yul\":9254:9261   */\n      dup5\n        /* \"#utility.yul\":9250:9273   */\n      sub\n        /* \"#utility.yul\":9246:9278   */\n      slt\n        /* \"#utility.yul\":9243:9295   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":9291:9292   */\n      0x00\n        /* \"#utility.yul\":9288:9289   */\n      dup1\n        /* \"#utility.yul\":9281:9293   */\n      revert\n        /* \"#utility.yul\":9243:9295   */\n    tag_667:\n        /* \"#utility.yul\":9331:9340   */\n      dup2\n        /* \"#utility.yul\":9318:9341   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":9356:9362   */\n      dup2\n        /* \"#utility.yul\":9353:9383   */\n      gt\n        /* \"#utility.yul\":9350:9400   */\n      iszero\n      tag_668\n      jumpi\n        /* \"#utility.yul\":9396:9397   */\n      0x00\n        /* \"#utility.yul\":9393:9394   */\n      dup1\n        /* \"#utility.yul\":9386:9398   */\n      revert\n        /* \"#utility.yul\":9350:9400   */\n    tag_668:\n        /* \"#utility.yul\":9419:9441   */\n      dup3\n      add\n        /* \"#utility.yul\":9475:9477   */\n      0x60\n        /* \"#utility.yul\":9457:9473   */\n      dup2\n      dup6\n      sub\n        /* \"#utility.yul\":9453:9478   */\n      slt\n        /* \"#utility.yul\":9450:9495   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":9491:9492   */\n      0x00\n        /* \"#utility.yul\":9488:9489   */\n      dup1\n        /* \"#utility.yul\":9481:9493   */\n      revert\n        /* \"#utility.yul\":9527:9915   */\n    tag_179:\n        /* \"#utility.yul\":9595:9601   */\n      0x00\n        /* \"#utility.yul\":9603:9609   */\n      dup1\n        /* \"#utility.yul\":9656:9658   */\n      0x40\n        /* \"#utility.yul\":9644:9653   */\n      dup4\n        /* \"#utility.yul\":9635:9642   */\n      dup6\n        /* \"#utility.yul\":9631:9654   */\n      sub\n        /* \"#utility.yul\":9627:9659   */\n      slt\n        /* \"#utility.yul\":9624:9676   */\n      iszero\n      tag_671\n      jumpi\n        /* \"#utility.yul\":9672:9673   */\n      0x00\n        /* \"#utility.yul\":9669:9670   */\n      dup1\n        /* \"#utility.yul\":9662:9674   */\n      revert\n        /* \"#utility.yul\":9624:9676   */\n    tag_671:\n        /* \"#utility.yul\":9711:9720   */\n      dup3\n        /* \"#utility.yul\":9698:9721   */\n      calldataload\n        /* \"#utility.yul\":9730:9761   */\n      tag_672\n        /* \"#utility.yul\":9755:9760   */\n      dup2\n        /* \"#utility.yul\":9730:9761   */\n      tag_579\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":9780:9785   */\n      swap2\n      pop\n        /* \"#utility.yul\":9837:9839   */\n      0x20\n        /* \"#utility.yul\":9822:9840   */\n      dup4\n      add\n        /* \"#utility.yul\":9809:9841   */\n      calldataload\n        /* \"#utility.yul\":9850:9883   */\n      tag_673\n        /* \"#utility.yul\":9809:9841   */\n      dup2\n        /* \"#utility.yul\":9850:9883   */\n      tag_579\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":9902:9909   */\n      dup1\n        /* \"#utility.yul\":9892:9909   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9527:9915   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10250:10434   */\n    tag_194:\n        /* \"#utility.yul\":10320:10326   */\n      0x00\n        /* \"#utility.yul\":10373:10375   */\n      0x20\n        /* \"#utility.yul\":10361:10370   */\n      dup3\n        /* \"#utility.yul\":10352:10359   */\n      dup5\n        /* \"#utility.yul\":10348:10371   */\n      sub\n        /* \"#utility.yul\":10344:10376   */\n      slt\n        /* \"#utility.yul\":10341:10393   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":10389:10390   */\n      0x00\n        /* \"#utility.yul\":10386:10387   */\n      dup1\n        /* \"#utility.yul\":10379:10391   */\n      revert\n        /* \"#utility.yul\":10341:10393   */\n    tag_676:\n      pop\n        /* \"#utility.yul\":10412:10428   */\n      mload\n      swap2\n        /* \"#utility.yul\":10250:10434   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10781:10962   */\n    tag_583:\n        /* \"#utility.yul\":10839:10843   */\n      0x00\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":10864:10870   */\n      dup3\n        /* \"#utility.yul\":10861:10891   */\n      gt\n        /* \"#utility.yul\":10858:10914   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":10894:10912   */\n      tag_680\n      tag_572\n      jump\t// in\n    tag_680:\n      pop\n        /* \"#utility.yul\":10939:10940   */\n      0x05\n        /* \"#utility.yul\":10935:10949   */\n      shl\n        /* \"#utility.yul\":10951:10955   */\n      0x20\n        /* \"#utility.yul\":10931:10956   */\n      add\n      swap1\n        /* \"#utility.yul\":10781:10962   */\n      jump\t// out\n        /* \"#utility.yul\":10967:11115   */\n    tag_584:\n        /* \"#utility.yul\":11051:11064   */\n      dup1\n      mload\n        /* \"#utility.yul\":11073:11109   */\n      tag_645\n        /* \"#utility.yul\":11051:11064   */\n      dup2\n        /* \"#utility.yul\":11073:11109   */\n      tag_582\n      jump\t// in\n        /* \"#utility.yul\":11120:13126   */\n    tag_199:\n        /* \"#utility.yul\":11216:11222   */\n      0x00\n        /* \"#utility.yul\":11247:11249   */\n      0x20\n        /* \"#utility.yul\":11290:11292   */\n      dup1\n        /* \"#utility.yul\":11278:11287   */\n      dup4\n        /* \"#utility.yul\":11269:11276   */\n      dup6\n        /* \"#utility.yul\":11265:11288   */\n      sub\n        /* \"#utility.yul\":11261:11293   */\n      slt\n        /* \"#utility.yul\":11258:11310   */\n      iszero\n      tag_684\n      jumpi\n        /* \"#utility.yul\":11306:11307   */\n      0x00\n        /* \"#utility.yul\":11303:11304   */\n      dup1\n        /* \"#utility.yul\":11296:11308   */\n      revert\n        /* \"#utility.yul\":11258:11310   */\n    tag_684:\n        /* \"#utility.yul\":11339:11348   */\n      dup3\n        /* \"#utility.yul\":11333:11349   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":11409:11411   */\n      dup1\n        /* \"#utility.yul\":11401:11407   */\n      dup3\n        /* \"#utility.yul\":11398:11412   */\n      gt\n        /* \"#utility.yul\":11395:11429   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":11425:11426   */\n      0x00\n        /* \"#utility.yul\":11422:11423   */\n      dup1\n        /* \"#utility.yul\":11415:11427   */\n      revert\n        /* \"#utility.yul\":11395:11429   */\n    tag_685:\n        /* \"#utility.yul\":11448:11470   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":11504:11508   */\n      0x60\n        /* \"#utility.yul\":11486:11502   */\n      dup3\n      dup8\n      sub\n        /* \"#utility.yul\":11482:11509   */\n      slt\n        /* \"#utility.yul\":11479:11526   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":11522:11523   */\n      0x00\n        /* \"#utility.yul\":11519:11520   */\n      dup1\n        /* \"#utility.yul\":11512:11524   */\n      revert\n        /* \"#utility.yul\":11479:11526   */\n    tag_686:\n        /* \"#utility.yul\":11548:11570   */\n      tag_687\n      tag_573\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":11601:11603   */\n      dup3\n        /* \"#utility.yul\":11595:11604   */\n      mload\n        /* \"#utility.yul\":11629:11631   */\n      dup3\n        /* \"#utility.yul\":11619:11627   */\n      dup2\n        /* \"#utility.yul\":11616:11632   */\n      gt\n        /* \"#utility.yul\":11613:11649   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":11645:11646   */\n      0x00\n        /* \"#utility.yul\":11642:11643   */\n      dup1\n        /* \"#utility.yul\":11635:11647   */\n      revert\n        /* \"#utility.yul\":11613:11649   */\n    tag_688:\n        /* \"#utility.yul\":11668:11685   */\n      dup4\n      add\n        /* \"#utility.yul\":11716:11720   */\n      0x1f\n        /* \"#utility.yul\":11708:11721   */\n      dup2\n      add\n        /* \"#utility.yul\":11704:11731   */\n      dup9\n      sgt\n        /* \"#utility.yul\":11694:11749   */\n      tag_689\n      jumpi\n        /* \"#utility.yul\":11745:11746   */\n      0x00\n        /* \"#utility.yul\":11742:11743   */\n      dup1\n        /* \"#utility.yul\":11735:11747   */\n      revert\n        /* \"#utility.yul\":11694:11749   */\n    tag_689:\n        /* \"#utility.yul\":11774:11776   */\n      dup1\n        /* \"#utility.yul\":11768:11777   */\n      mload\n        /* \"#utility.yul\":11797:11855   */\n      tag_690\n        /* \"#utility.yul\":11813:11854   */\n      tag_602\n        /* \"#utility.yul\":11851:11853   */\n      dup3\n        /* \"#utility.yul\":11813:11854   */\n      tag_583\n      jump\t// in\n        /* \"#utility.yul\":11797:11855   */\n    tag_690:\n        /* \"#utility.yul\":11889:11904   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":11971:11972   */\n      0x05\n        /* \"#utility.yul\":11967:11977   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":11959:11978   */\n      dup3\n      add\n        /* \"#utility.yul\":11955:11983   */\n      dup7\n      add\n      swap1\n        /* \"#utility.yul\":11920:11932   */\n      dup7\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":11995:12014   */\n      dup11\n      dup4\n      gt\n        /* \"#utility.yul\":11992:12031   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":12027:12028   */\n      0x00\n        /* \"#utility.yul\":12024:12025   */\n      dup1\n        /* \"#utility.yul\":12017:12029   */\n      revert\n        /* \"#utility.yul\":11992:12031   */\n    tag_692:\n        /* \"#utility.yul\":12059:12061   */\n      dup8\n        /* \"#utility.yul\":12055:12057   */\n      dup5\n        /* \"#utility.yul\":12051:12062   */\n      add\n        /* \"#utility.yul\":12071:12936   */\n    tag_693:\n        /* \"#utility.yul\":12087:12093   */\n      dup4\n        /* \"#utility.yul\":12082:12085   */\n      dup2\n        /* \"#utility.yul\":12079:12094   */\n      lt\n        /* \"#utility.yul\":12071:12936   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":12166:12169   */\n      dup1\n        /* \"#utility.yul\":12160:12170   */\n      mload\n        /* \"#utility.yul\":12202:12204   */\n      dup8\n        /* \"#utility.yul\":12189:12200   */\n      dup2\n        /* \"#utility.yul\":12186:12205   */\n      gt\n        /* \"#utility.yul\":12183:12292   */\n      iszero\n      tag_696\n      jumpi\n        /* \"#utility.yul\":12246:12247   */\n      0x00\n        /* \"#utility.yul\":12275:12277   */\n      dup1\n        /* \"#utility.yul\":12271:12273   */\n      dup2\n        /* \"#utility.yul\":12264:12278   */\n      revert\n        /* \"#utility.yul\":12183:12292   */\n    tag_696:\n        /* \"#utility.yul\":12315:12335   */\n      dup6\n      add\n        /* \"#utility.yul\":12370:12372   */\n      0x3f\n        /* \"#utility.yul\":12362:12373   */\n      dup2\n      add\n        /* \"#utility.yul\":12358:12383   */\n      dup14\n      sgt\n        /* \"#utility.yul\":12348:12471   */\n      tag_697\n      jumpi\n        /* \"#utility.yul\":12425:12426   */\n      0x00\n        /* \"#utility.yul\":12454:12456   */\n      dup1\n        /* \"#utility.yul\":12450:12452   */\n      dup2\n        /* \"#utility.yul\":12443:12457   */\n      revert\n        /* \"#utility.yul\":12348:12471   */\n    tag_697:\n        /* \"#utility.yul\":12508:12510   */\n      dup10\n        /* \"#utility.yul\":12504:12506   */\n      dup2\n        /* \"#utility.yul\":12500:12511   */\n      add\n        /* \"#utility.yul\":12494:12512   */\n      mload\n        /* \"#utility.yul\":12536:12538   */\n      0x40\n        /* \"#utility.yul\":12564:12612   */\n      tag_698\n        /* \"#utility.yul\":12580:12611   */\n      tag_602\n        /* \"#utility.yul\":12608:12610   */\n      dup4\n        /* \"#utility.yul\":12580:12611   */\n      tag_575\n      jump\t// in\n        /* \"#utility.yul\":12564:12612   */\n    tag_698:\n        /* \"#utility.yul\":12639:12641   */\n      dup3\n        /* \"#utility.yul\":12632:12637   */\n      dup2\n        /* \"#utility.yul\":12625:12642   */\n      mstore\n        /* \"#utility.yul\":12684:12691   */\n      dup16\n        /* \"#utility.yul\":12678:12681   */\n      dup3\n        /* \"#utility.yul\":12673:12675   */\n      dup5\n        /* \"#utility.yul\":12669:12671   */\n      dup7\n        /* \"#utility.yul\":12665:12676   */\n      add\n        /* \"#utility.yul\":12661:12682   */\n      add\n        /* \"#utility.yul\":12658:12692   */\n      gt\n        /* \"#utility.yul\":12655:12782   */\n      iszero\n      tag_700\n      jumpi\n        /* \"#utility.yul\":12734:12735   */\n      0x00\n        /* \"#utility.yul\":12764:12767   */\n      dup1\n        /* \"#utility.yul\":12759:12762   */\n      dup2\n        /* \"#utility.yul\":12752:12768   */\n      revert\n        /* \"#utility.yul\":12655:12782   */\n    tag_700:\n        /* \"#utility.yul\":12795:12863   */\n      tag_701\n        /* \"#utility.yul\":12860:12862   */\n      dup4\n        /* \"#utility.yul\":12855:12857   */\n      dup15\n        /* \"#utility.yul\":12848:12853   */\n      dup4\n        /* \"#utility.yul\":12844:12858   */\n      add\n        /* \"#utility.yul\":12838:12841   */\n      dup5\n        /* \"#utility.yul\":12834:12836   */\n      dup8\n        /* \"#utility.yul\":12830:12842   */\n      add\n        /* \"#utility.yul\":12795:12863   */\n      tag_577\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":12876:12894   */\n      dup7\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12914:12926   */\n      swap2\n      dup9\n      add\n      swap2\n        /* \"#utility.yul\":12104:12116   */\n      dup9\n      add\n        /* \"#utility.yul\":12071:12936   */\n      jump(tag_693)\n    tag_695:\n      pop\n        /* \"#utility.yul\":12945:12965   */\n      dup5\n      mstore\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13003:13014   */\n      dup3\n      dup5\n      add\n        /* \"#utility.yul\":12997:13015   */\n      mload\n        /* \"#utility.yul\":12981:12995   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":12974:13016   */\n      mstore\n        /* \"#utility.yul\":13048:13095   */\n      tag_702\n        /* \"#utility.yul\":13091:13093   */\n      0x40\n        /* \"#utility.yul\":13083:13094   */\n      dup5\n      add\n        /* \"#utility.yul\":13048:13095   */\n      tag_584\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":13043:13045   */\n      0x40\n        /* \"#utility.yul\":13032:13046   */\n      dup3\n      add\n        /* \"#utility.yul\":13025:13096   */\n      mstore\n        /* \"#utility.yul\":13036:13041   */\n      swap7\n        /* \"#utility.yul\":11120:13126   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13131:13258   */\n    tag_585:\n        /* \"#utility.yul\":13192:13202   */\n      0x4e487b71\n        /* \"#utility.yul\":13187:13190   */\n      0xe0\n        /* \"#utility.yul\":13183:13203   */\n      shl\n        /* \"#utility.yul\":13180:13181   */\n      0x00\n        /* \"#utility.yul\":13173:13204   */\n      mstore\n        /* \"#utility.yul\":13223:13227   */\n      0x11\n        /* \"#utility.yul\":13220:13221   */\n      0x04\n        /* \"#utility.yul\":13213:13228   */\n      mstore\n        /* \"#utility.yul\":13247:13251   */\n      0x24\n        /* \"#utility.yul\":13244:13245   */\n      0x00\n        /* \"#utility.yul\":13237:13252   */\n      revert\n        /* \"#utility.yul\":13263:13431   */\n    tag_202:\n        /* \"#utility.yul\":13336:13345   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":13367:13376   */\n      dup2\n      iszero\n        /* \"#utility.yul\":13384:13399   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":13378:13400   */\n      dup5\n      eq\n        /* \"#utility.yul\":13364:13401   */\n      or\n        /* \"#utility.yul\":13354:13425   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":13405:13423   */\n      tag_258\n      tag_585\n      jump\t// in\n        /* \"#utility.yul\":13436:13653   */\n    tag_204:\n        /* \"#utility.yul\":13476:13477   */\n      0x00\n        /* \"#utility.yul\":13502:13503   */\n      dup3\n        /* \"#utility.yul\":13492:13624   */\n      tag_708\n      jumpi\n        /* \"#utility.yul\":13546:13556   */\n      0x4e487b71\n        /* \"#utility.yul\":13541:13544   */\n      0xe0\n        /* \"#utility.yul\":13537:13557   */\n      shl\n        /* \"#utility.yul\":13534:13535   */\n      0x00\n        /* \"#utility.yul\":13527:13558   */\n      mstore\n        /* \"#utility.yul\":13581:13585   */\n      0x12\n        /* \"#utility.yul\":13578:13579   */\n      0x04\n        /* \"#utility.yul\":13571:13586   */\n      mstore\n        /* \"#utility.yul\":13609:13613   */\n      0x24\n        /* \"#utility.yul\":13606:13607   */\n      0x00\n        /* \"#utility.yul\":13599:13614   */\n      revert\n        /* \"#utility.yul\":13492:13624   */\n    tag_708:\n      pop\n        /* \"#utility.yul\":13638:13647   */\n      div\n      swap1\n        /* \"#utility.yul\":13436:13653   */\n      jump\t// out\n        /* \"#utility.yul\":13658:13909   */\n    tag_208:\n        /* \"#utility.yul\":13728:13734   */\n      0x00\n        /* \"#utility.yul\":13781:13783   */\n      0x20\n        /* \"#utility.yul\":13769:13778   */\n      dup3\n        /* \"#utility.yul\":13760:13767   */\n      dup5\n        /* \"#utility.yul\":13756:13779   */\n      sub\n        /* \"#utility.yul\":13752:13784   */\n      slt\n        /* \"#utility.yul\":13749:13801   */\n      iszero\n      tag_710\n      jumpi\n        /* \"#utility.yul\":13797:13798   */\n      0x00\n        /* \"#utility.yul\":13794:13795   */\n      dup1\n        /* \"#utility.yul\":13787:13799   */\n      revert\n        /* \"#utility.yul\":13749:13801   */\n    tag_710:\n        /* \"#utility.yul\":13829:13838   */\n      dup2\n        /* \"#utility.yul\":13823:13839   */\n      mload\n        /* \"#utility.yul\":13848:13879   */\n      tag_615\n        /* \"#utility.yul\":13873:13878   */\n      dup2\n        /* \"#utility.yul\":13848:13879   */\n      tag_579\n      jump\t// in\n        /* \"#utility.yul\":13914:14041   */\n    tag_214:\n        /* \"#utility.yul\":13975:13985   */\n      0x4e487b71\n        /* \"#utility.yul\":13970:13973   */\n      0xe0\n        /* \"#utility.yul\":13966:13986   */\n      shl\n        /* \"#utility.yul\":13963:13964   */\n      0x00\n        /* \"#utility.yul\":13956:13987   */\n      mstore\n        /* \"#utility.yul\":14006:14010   */\n      0x32\n        /* \"#utility.yul\":14003:14004   */\n      0x04\n        /* \"#utility.yul\":13996:14011   */\n      mstore\n        /* \"#utility.yul\":14030:14034   */\n      0x24\n        /* \"#utility.yul\":14027:14028   */\n      0x00\n        /* \"#utility.yul\":14020:14035   */\n      revert\n        /* \"#utility.yul\":14046:14173   */\n    tag_353:\n        /* \"#utility.yul\":14107:14117   */\n      0x4e487b71\n        /* \"#utility.yul\":14102:14105   */\n      0xe0\n        /* \"#utility.yul\":14098:14118   */\n      shl\n        /* \"#utility.yul\":14095:14096   */\n      0x00\n        /* \"#utility.yul\":14088:14119   */\n      mstore\n        /* \"#utility.yul\":14138:14142   */\n      0x21\n        /* \"#utility.yul\":14135:14136   */\n      0x04\n        /* \"#utility.yul\":14128:14143   */\n      mstore\n        /* \"#utility.yul\":14162:14166   */\n      0x24\n        /* \"#utility.yul\":14159:14160   */\n      0x00\n        /* \"#utility.yul\":14152:14167   */\n      revert\n        /* \"#utility.yul\":14178:14413   */\n    tag_586:\n        /* \"#utility.yul\":14257:14258   */\n      0x02\n        /* \"#utility.yul\":14250:14255   */\n      dup2\n        /* \"#utility.yul\":14247:14259   */\n      lt\n        /* \"#utility.yul\":14237:14380   */\n      tag_715\n      jumpi\n        /* \"#utility.yul\":14302:14312   */\n      0x4e487b71\n        /* \"#utility.yul\":14297:14300   */\n      0xe0\n        /* \"#utility.yul\":14293:14313   */\n      shl\n        /* \"#utility.yul\":14290:14291   */\n      0x00\n        /* \"#utility.yul\":14283:14314   */\n      mstore\n        /* \"#utility.yul\":14337:14341   */\n      0x21\n        /* \"#utility.yul\":14334:14335   */\n      0x04\n        /* \"#utility.yul\":14327:14342   */\n      mstore\n        /* \"#utility.yul\":14365:14369   */\n      0x24\n        /* \"#utility.yul\":14362:14363   */\n      0x00\n        /* \"#utility.yul\":14355:14370   */\n      revert\n        /* \"#utility.yul\":14237:14380   */\n    tag_715:\n        /* \"#utility.yul\":14389:14407   */\n      swap1\n      mstore\n        /* \"#utility.yul\":14178:14413   */\n      jump\t// out\n        /* \"#utility.yul\":14418:15020   */\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14739:14754   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":14721:14755   */\n      dup3\n      mstore\n        /* \"#utility.yul\":14786:14788   */\n      0x20\n        /* \"#utility.yul\":14771:14789   */\n      dup3\n      add\n        /* \"#utility.yul\":14764:14798   */\n      dup7\n      swap1\n      mstore\n        /* \"#utility.yul\":14664:14668   */\n      0x00\n      swap1\n        /* \"#utility.yul\":14807:14858   */\n      tag_717\n        /* \"#utility.yul\":14854:14856   */\n      0x40\n        /* \"#utility.yul\":14839:14857   */\n      dup5\n      add\n        /* \"#utility.yul\":14831:14837   */\n      dup8\n        /* \"#utility.yul\":14807:14858   */\n      tag_586\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":14906:14908   */\n      dup1\n        /* \"#utility.yul\":14898:14904   */\n      dup6\n        /* \"#utility.yul\":14894:14909   */\n      and\n        /* \"#utility.yul\":14889:14891   */\n      0x60\n        /* \"#utility.yul\":14878:14887   */\n      dup5\n        /* \"#utility.yul\":14874:14892   */\n      add\n        /* \"#utility.yul\":14867:14910   */\n      mstore\n      pop\n        /* \"#utility.yul\":14947:14950   */\n      0xa0\n        /* \"#utility.yul\":14941:14944   */\n      0x80\n        /* \"#utility.yul\":14930:14939   */\n      dup4\n        /* \"#utility.yul\":14926:14945   */\n      add\n        /* \"#utility.yul\":14919:14951   */\n      mstore\n        /* \"#utility.yul\":14968:15014   */\n      tag_718\n        /* \"#utility.yul\":15009:15012   */\n      0xa0\n        /* \"#utility.yul\":14998:15007   */\n      dup4\n        /* \"#utility.yul\":14994:15013   */\n      add\n        /* \"#utility.yul\":14986:14992   */\n      dup5\n        /* \"#utility.yul\":14968:15014   */\n      tag_578\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":14960:15014   */\n      swap8\n        /* \"#utility.yul\":14418:15020   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15025:15150   */\n    tag_234:\n        /* \"#utility.yul\":15090:15099   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":15111:15121   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":15108:15144   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":15124:15142   */\n      tag_258\n      tag_585\n      jump\t// in\n        /* \"#utility.yul\":15155:15290   */\n    tag_236:\n        /* \"#utility.yul\":15194:15197   */\n      0x00\n        /* \"#utility.yul\":15215:15232   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":15212:15255   */\n      tag_724\n      jumpi\n        /* \"#utility.yul\":15235:15253   */\n      tag_724\n      tag_585\n      jump\t// in\n    tag_724:\n      pop\n        /* \"#utility.yul\":15282:15283   */\n      0x01\n        /* \"#utility.yul\":15271:15284   */\n      add\n      swap1\n        /* \"#utility.yul\":15155:15290   */\n      jump\t// out\n        /* \"#utility.yul\":15295:15423   */\n    tag_243:\n        /* \"#utility.yul\":15362:15371   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":15383:15394   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":15380:15417   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":15397:15415   */\n      tag_258\n      tag_585\n      jump\t// in\n        /* \"#utility.yul\":15707:15984   */\n    tag_250:\n        /* \"#utility.yul\":15774:15780   */\n      0x00\n        /* \"#utility.yul\":15827:15829   */\n      0x20\n        /* \"#utility.yul\":15815:15824   */\n      dup3\n        /* \"#utility.yul\":15806:15813   */\n      dup5\n        /* \"#utility.yul\":15802:15825   */\n      sub\n        /* \"#utility.yul\":15798:15830   */\n      slt\n        /* \"#utility.yul\":15795:15847   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":15843:15844   */\n      0x00\n        /* \"#utility.yul\":15840:15841   */\n      dup1\n        /* \"#utility.yul\":15833:15845   */\n      revert\n        /* \"#utility.yul\":15795:15847   */\n    tag_730:\n        /* \"#utility.yul\":15875:15884   */\n      dup2\n        /* \"#utility.yul\":15869:15885   */\n      mload\n        /* \"#utility.yul\":15928:15933   */\n      dup1\n        /* \"#utility.yul\":15921:15934   */\n      iszero\n        /* \"#utility.yul\":15914:15935   */\n      iszero\n        /* \"#utility.yul\":15907:15912   */\n      dup2\n        /* \"#utility.yul\":15904:15936   */\n      eq\n        /* \"#utility.yul\":15894:15954   */\n      tag_615\n      jumpi\n        /* \"#utility.yul\":15950:15951   */\n      0x00\n        /* \"#utility.yul\":15947:15948   */\n      dup1\n        /* \"#utility.yul\":15940:15952   */\n      revert\n        /* \"#utility.yul\":15989:16369   */\n    tag_253:\n        /* \"#utility.yul\":16068:16069   */\n      0x01\n        /* \"#utility.yul\":16064:16076   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":16111:16123   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":16132:16193   */\n      tag_733\n      jumpi\n        /* \"#utility.yul\":16186:16190   */\n      0x7f\n        /* \"#utility.yul\":16178:16184   */\n      dup3\n        /* \"#utility.yul\":16174:16191   */\n      and\n        /* \"#utility.yul\":16164:16191   */\n      swap2\n      pop\n        /* \"#utility.yul\":16132:16193   */\n    tag_733:\n        /* \"#utility.yul\":16239:16241   */\n      0x20\n        /* \"#utility.yul\":16231:16237   */\n      dup3\n        /* \"#utility.yul\":16228:16242   */\n      lt\n        /* \"#utility.yul\":16208:16226   */\n      dup2\n        /* \"#utility.yul\":16205:16243   */\n      sub\n        /* \"#utility.yul\":16202:16363   */\n      tag_734\n      jumpi\n        /* \"#utility.yul\":16285:16295   */\n      0x4e487b71\n        /* \"#utility.yul\":16280:16283   */\n      0xe0\n        /* \"#utility.yul\":16276:16296   */\n      shl\n        /* \"#utility.yul\":16273:16274   */\n      0x00\n        /* \"#utility.yul\":16266:16297   */\n      mstore\n        /* \"#utility.yul\":16320:16324   */\n      0x22\n        /* \"#utility.yul\":16317:16318   */\n      0x04\n        /* \"#utility.yul\":16310:16325   */\n      mstore\n        /* \"#utility.yul\":16348:16352   */\n      0x24\n        /* \"#utility.yul\":16345:16346   */\n      0x00\n        /* \"#utility.yul\":16338:16353   */\n      revert\n        /* \"#utility.yul\":16202:16363   */\n    tag_734:\n      pop\n        /* \"#utility.yul\":15989:16369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18741:19800   */\n    tag_343:\n        /* \"#utility.yul\":19029:19031   */\n      0x40\n        /* \"#utility.yul\":19041:19062   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":19014:19032   */\n      dup2\n      add\n        /* \"#utility.yul\":19097:19119   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":18981:18985   */\n      0x00\n        /* \"#utility.yul\":19176:19182   */\n      dup6\n        /* \"#utility.yul\":19150:19152   */\n      0x60\n        /* \"#utility.yul\":19135:19153   */\n      dup4\n      add\n        /* \"#utility.yul\":18981:18985   */\n      dup3\n        /* \"#utility.yul\":19210:19514   */\n    tag_743:\n        /* \"#utility.yul\":19224:19230   */\n      dup8\n        /* \"#utility.yul\":19221:19222   */\n      dup2\n        /* \"#utility.yul\":19218:19231   */\n      lt\n        /* \"#utility.yul\":19210:19514   */\n      iszero\n      tag_745\n      jumpi\n        /* \"#utility.yul\":19299:19305   */\n      dup3\n        /* \"#utility.yul\":19286:19306   */\n      calldataload\n        /* \"#utility.yul\":19319:19350   */\n      tag_746\n        /* \"#utility.yul\":19344:19349   */\n      dup2\n        /* \"#utility.yul\":19319:19350   */\n      tag_579\n      jump\t// in\n    tag_746:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":19375:19406   */\n      and\n        /* \"#utility.yul\":19363:19407   */\n      dup3\n      mstore\n        /* \"#utility.yul\":19430:19434   */\n      0x20\n        /* \"#utility.yul\":19489:19504   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":19454:19466   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":19403:19404   */\n      0x01\n        /* \"#utility.yul\":19239:19248   */\n      add\n        /* \"#utility.yul\":19210:19514   */\n      jump(tag_743)\n    tag_745:\n      pop\n        /* \"#utility.yul\":19552:19571   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":19545:19549   */\n      0x20\n        /* \"#utility.yul\":19530:19550   */\n      dup6\n      add\n        /* \"#utility.yul\":19523:19572   */\n      mstore\n        /* \"#utility.yul\":19581:19600   */\n      dup5\n      dup2\n      mstore\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":19612:19643   */\n      dup6\n      gt\n        /* \"#utility.yul\":19609:19660   */\n      iszero\n      tag_747\n      jumpi\n        /* \"#utility.yul\":19656:19657   */\n      0x00\n        /* \"#utility.yul\":19653:19654   */\n      dup1\n        /* \"#utility.yul\":19646:19658   */\n      revert\n        /* \"#utility.yul\":19609:19660   */\n    tag_747:\n        /* \"#utility.yul\":19690:19696   */\n      dup5\n        /* \"#utility.yul\":19687:19688   */\n      0x05\n        /* \"#utility.yul\":19683:19697   */\n      shl\n        /* \"#utility.yul\":19669:19697   */\n      swap2\n      pop\n        /* \"#utility.yul\":19743:19749   */\n      dup2\n        /* \"#utility.yul\":19735:19741   */\n      dup7\n        /* \"#utility.yul\":19728:19732   */\n      0x20\n        /* \"#utility.yul\":19723:19726   */\n      dup4\n        /* \"#utility.yul\":19719:19733   */\n      add\n        /* \"#utility.yul\":19706:19750   */\n      calldatacopy\n        /* \"#utility.yul\":19771:19787   */\n      add\n        /* \"#utility.yul\":19789:19793   */\n      0x20\n        /* \"#utility.yul\":19767:19794   */\n      add\n      swap7\n        /* \"#utility.yul\":18741:19800   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20817:21081   */\n    tag_406:\n        /* \"#utility.yul\":20888:20894   */\n      0x00\n        /* \"#utility.yul\":20941:20943   */\n      0x20\n        /* \"#utility.yul\":20929:20938   */\n      dup3\n        /* \"#utility.yul\":20920:20927   */\n      dup5\n        /* \"#utility.yul\":20916:20939   */\n      sub\n        /* \"#utility.yul\":20912:20944   */\n      slt\n        /* \"#utility.yul\":20909:20961   */\n      iszero\n      tag_752\n      jumpi\n        /* \"#utility.yul\":20957:20958   */\n      0x00\n        /* \"#utility.yul\":20954:20955   */\n      dup1\n        /* \"#utility.yul\":20947:20959   */\n      revert\n        /* \"#utility.yul\":20909:20961   */\n    tag_752:\n        /* \"#utility.yul\":20996:21005   */\n      dup2\n        /* \"#utility.yul\":20983:21006   */\n      calldataload\n        /* \"#utility.yul\":21015:21051   */\n      tag_615\n        /* \"#utility.yul\":21045:21050   */\n      dup2\n        /* \"#utility.yul\":21015:21051   */\n      tag_582\n      jump\t// in\n        /* \"#utility.yul\":21086:21642   */\n    tag_408:\n        /* \"#utility.yul\":21190:21194   */\n      0x00\n        /* \"#utility.yul\":21196:21202   */\n      dup1\n        /* \"#utility.yul\":21256:21267   */\n      dup4\n        /* \"#utility.yul\":21243:21268   */\n      calldataload\n        /* \"#utility.yul\":21350:21352   */\n      0x1e\n        /* \"#utility.yul\":21346:21353   */\n      not\n        /* \"#utility.yul\":21335:21343   */\n      dup5\n        /* \"#utility.yul\":21319:21333   */\n      calldatasize\n        /* \"#utility.yul\":21315:21344   */\n      sub\n        /* \"#utility.yul\":21311:21354   */\n      add\n        /* \"#utility.yul\":21291:21309   */\n      dup2\n        /* \"#utility.yul\":21287:21355   */\n      slt\n        /* \"#utility.yul\":21277:21373   */\n      tag_755\n      jumpi\n        /* \"#utility.yul\":21369:21370   */\n      0x00\n        /* \"#utility.yul\":21366:21367   */\n      dup1\n        /* \"#utility.yul\":21359:21371   */\n      revert\n        /* \"#utility.yul\":21277:21373   */\n    tag_755:\n        /* \"#utility.yul\":21396:21429   */\n      dup4\n      add\n        /* \"#utility.yul\":21448:21468   */\n      dup1\n      calldataload\n      swap2\n      pop\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":21480:21510   */\n      dup3\n      gt\n        /* \"#utility.yul\":21477:21527   */\n      iszero\n      tag_756\n      jumpi\n        /* \"#utility.yul\":21523:21524   */\n      0x00\n        /* \"#utility.yul\":21520:21521   */\n      dup1\n        /* \"#utility.yul\":21513:21525   */\n      revert\n        /* \"#utility.yul\":21477:21527   */\n    tag_756:\n        /* \"#utility.yul\":21556:21560   */\n      0x20\n        /* \"#utility.yul\":21544:21561   */\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":21607:21608   */\n      0x05\n        /* \"#utility.yul\":21603:21617   */\n      dup2\n      swap1\n      shl\n        /* \"#utility.yul\":21587:21601   */\n      calldatasize\n        /* \"#utility.yul\":21583:21618   */\n      sub\n        /* \"#utility.yul\":21573:21619   */\n      dup3\n      sgt\n        /* \"#utility.yul\":21570:21636   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":21632:21633   */\n      0x00\n        /* \"#utility.yul\":21629:21630   */\n      dup1\n        /* \"#utility.yul\":21622:21634   */\n      revert\n        /* \"#utility.yul\":21647:22168   */\n    tag_412:\n        /* \"#utility.yul\":21724:21728   */\n      0x00\n        /* \"#utility.yul\":21730:21736   */\n      dup1\n        /* \"#utility.yul\":21790:21801   */\n      dup4\n        /* \"#utility.yul\":21777:21802   */\n      calldataload\n        /* \"#utility.yul\":21884:21886   */\n      0x1e\n        /* \"#utility.yul\":21880:21887   */\n      not\n        /* \"#utility.yul\":21869:21877   */\n      dup5\n        /* \"#utility.yul\":21853:21867   */\n      calldatasize\n        /* \"#utility.yul\":21849:21878   */\n      sub\n        /* \"#utility.yul\":21845:21888   */\n      add\n        /* \"#utility.yul\":21825:21843   */\n      dup2\n        /* \"#utility.yul\":21821:21889   */\n      slt\n        /* \"#utility.yul\":21811:21907   */\n      tag_759\n      jumpi\n        /* \"#utility.yul\":21903:21904   */\n      0x00\n        /* \"#utility.yul\":21900:21901   */\n      dup1\n        /* \"#utility.yul\":21893:21905   */\n      revert\n        /* \"#utility.yul\":21811:21907   */\n    tag_759:\n        /* \"#utility.yul\":21930:21963   */\n      dup4\n      add\n        /* \"#utility.yul\":21982:22002   */\n      dup1\n      calldataload\n      swap2\n      pop\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":22014:22044   */\n      dup3\n      gt\n        /* \"#utility.yul\":22011:22061   */\n      iszero\n      tag_760\n      jumpi\n        /* \"#utility.yul\":22057:22058   */\n      0x00\n        /* \"#utility.yul\":22054:22055   */\n      dup1\n        /* \"#utility.yul\":22047:22059   */\n      revert\n        /* \"#utility.yul\":22011:22061   */\n    tag_760:\n        /* \"#utility.yul\":22090:22094   */\n      0x20\n        /* \"#utility.yul\":22078:22095   */\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":22121:22135   */\n      calldatasize\n        /* \"#utility.yul\":22117:22144   */\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":22107:22145   */\n      dup3\n      sgt\n        /* \"#utility.yul\":22104:22162   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":22158:22159   */\n      0x00\n        /* \"#utility.yul\":22155:22156   */\n      dup1\n        /* \"#utility.yul\":22148:22160   */\n      revert\n        /* \"#utility.yul\":22173:22948   */\n    tag_414:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":22504:22519   */\n      dup8\n      dup2\n      and\n        /* \"#utility.yul\":22486:22520   */\n      dup3\n      mstore\n        /* \"#utility.yul\":22551:22553   */\n      0x20\n        /* \"#utility.yul\":22536:22554   */\n      dup3\n      add\n        /* \"#utility.yul\":22529:22563   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":22429:22433   */\n      0x00\n      swap1\n        /* \"#utility.yul\":22572:22623   */\n      tag_763\n        /* \"#utility.yul\":22619:22621   */\n      0x40\n        /* \"#utility.yul\":22604:22622   */\n      dup5\n      add\n        /* \"#utility.yul\":22596:22602   */\n      dup9\n        /* \"#utility.yul\":22572:22623   */\n      tag_586\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":22671:22673   */\n      dup1\n        /* \"#utility.yul\":22663:22669   */\n      dup7\n        /* \"#utility.yul\":22659:22674   */\n      and\n        /* \"#utility.yul\":22654:22656   */\n      0x60\n        /* \"#utility.yul\":22643:22652   */\n      dup5\n        /* \"#utility.yul\":22639:22657   */\n      add\n        /* \"#utility.yul\":22632:22675   */\n      mstore\n      pop\n        /* \"#utility.yul\":22712:22715   */\n      0xa0\n        /* \"#utility.yul\":22706:22709   */\n      0x80\n        /* \"#utility.yul\":22695:22704   */\n      dup4\n        /* \"#utility.yul\":22691:22710   */\n      add\n        /* \"#utility.yul\":22684:22716   */\n      mstore\n        /* \"#utility.yul\":22753:22759   */\n      dup3\n        /* \"#utility.yul\":22747:22750   */\n      0xa0\n        /* \"#utility.yul\":22736:22745   */\n      dup4\n        /* \"#utility.yul\":22732:22751   */\n      add\n        /* \"#utility.yul\":22725:22760   */\n      mstore\n        /* \"#utility.yul\":22811:22817   */\n      dup3\n        /* \"#utility.yul\":22803:22809   */\n      dup5\n        /* \"#utility.yul\":22797:22800   */\n      0xc0\n        /* \"#utility.yul\":22786:22795   */\n      dup5\n        /* \"#utility.yul\":22782:22801   */\n      add\n        /* \"#utility.yul\":22769:22818   */\n      calldatacopy\n        /* \"#utility.yul\":22868:22869   */\n      0x00\n        /* \"#utility.yul\":22862:22865   */\n      0xc0\n        /* \"#utility.yul\":22853:22859   */\n      dup5\n        /* \"#utility.yul\":22842:22851   */\n      dup5\n        /* \"#utility.yul\":22838:22860   */\n      add\n        /* \"#utility.yul\":22834:22866   */\n      add\n        /* \"#utility.yul\":22827:22870   */\n      mstore\n        /* \"#utility.yul\":22938:22941   */\n      0xc0\n        /* \"#utility.yul\":22931:22933   */\n      0x1f\n        /* \"#utility.yul\":22927:22934   */\n      not\n        /* \"#utility.yul\":22922:22924   */\n      0x1f\n        /* \"#utility.yul\":22914:22920   */\n      dup6\n        /* \"#utility.yul\":22910:22925   */\n      add\n        /* \"#utility.yul\":22906:22935   */\n      and\n        /* \"#utility.yul\":22895:22904   */\n      dup4\n        /* \"#utility.yul\":22891:22936   */\n      add\n        /* \"#utility.yul\":22887:22942   */\n      add\n        /* \"#utility.yul\":22879:22942   */\n      swap1\n      pop\n        /* \"#utility.yul\":22173:22948   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23856:24810   */\n    tag_485:\n        /* \"#utility.yul\":23951:23957   */\n      0x00\n        /* \"#utility.yul\":23982:23984   */\n      0x20\n        /* \"#utility.yul\":24025:24027   */\n      dup1\n        /* \"#utility.yul\":24013:24022   */\n      dup4\n        /* \"#utility.yul\":24004:24011   */\n      dup6\n        /* \"#utility.yul\":24000:24023   */\n      sub\n        /* \"#utility.yul\":23996:24028   */\n      slt\n        /* \"#utility.yul\":23993:24045   */\n      iszero\n      tag_768\n      jumpi\n        /* \"#utility.yul\":24041:24042   */\n      0x00\n        /* \"#utility.yul\":24038:24039   */\n      dup1\n        /* \"#utility.yul\":24031:24043   */\n      revert\n        /* \"#utility.yul\":23993:24045   */\n    tag_768:\n        /* \"#utility.yul\":24074:24083   */\n      dup3\n        /* \"#utility.yul\":24068:24084   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":24099:24105   */\n      dup2\n        /* \"#utility.yul\":24096:24126   */\n      gt\n        /* \"#utility.yul\":24093:24143   */\n      iszero\n      tag_769\n      jumpi\n        /* \"#utility.yul\":24139:24140   */\n      0x00\n        /* \"#utility.yul\":24136:24137   */\n      dup1\n        /* \"#utility.yul\":24129:24141   */\n      revert\n        /* \"#utility.yul\":24093:24143   */\n    tag_769:\n        /* \"#utility.yul\":24162:24184   */\n      dup4\n      add\n        /* \"#utility.yul\":24215:24219   */\n      0x1f\n        /* \"#utility.yul\":24207:24220   */\n      dup2\n      add\n        /* \"#utility.yul\":24203:24230   */\n      dup6\n      sgt\n        /* \"#utility.yul\":24193:24248   */\n      tag_770\n      jumpi\n        /* \"#utility.yul\":24244:24245   */\n      0x00\n        /* \"#utility.yul\":24241:24242   */\n      dup1\n        /* \"#utility.yul\":24234:24246   */\n      revert\n        /* \"#utility.yul\":24193:24248   */\n    tag_770:\n        /* \"#utility.yul\":24273:24275   */\n      dup1\n        /* \"#utility.yul\":24267:24276   */\n      mload\n        /* \"#utility.yul\":24296:24354   */\n      tag_771\n        /* \"#utility.yul\":24312:24353   */\n      tag_602\n        /* \"#utility.yul\":24350:24352   */\n      dup3\n        /* \"#utility.yul\":24312:24353   */\n      tag_583\n      jump\t// in\n        /* \"#utility.yul\":24296:24354   */\n    tag_771:\n        /* \"#utility.yul\":24388:24403   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":24470:24471   */\n      0x05\n        /* \"#utility.yul\":24466:24476   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":24458:24477   */\n      dup3\n      add\n        /* \"#utility.yul\":24454:24482   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":24419:24431   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":24494:24513   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":24491:24530   */\n      iszero\n      tag_773\n      jumpi\n        /* \"#utility.yul\":24526:24527   */\n      0x00\n        /* \"#utility.yul\":24523:24524   */\n      dup1\n        /* \"#utility.yul\":24516:24528   */\n      revert\n        /* \"#utility.yul\":24491:24530   */\n    tag_773:\n        /* \"#utility.yul\":24550:24561   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":24570:24780   */\n    tag_774:\n        /* \"#utility.yul\":24586:24592   */\n      dup3\n        /* \"#utility.yul\":24581:24584   */\n      dup5\n        /* \"#utility.yul\":24578:24593   */\n      lt\n        /* \"#utility.yul\":24570:24780   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":24659:24662   */\n      dup4\n        /* \"#utility.yul\":24653:24663   */\n      mload\n        /* \"#utility.yul\":24676:24707   */\n      tag_777\n        /* \"#utility.yul\":24701:24706   */\n      dup2\n        /* \"#utility.yul\":24676:24707   */\n      tag_579\n      jump\t// in\n    tag_777:\n        /* \"#utility.yul\":24720:24738   */\n      dup3\n      mstore\n        /* \"#utility.yul\":24603:24615   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":24758:24770   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":24570:24780   */\n      jump(tag_774)\n        /* \"#utility.yul\":24815:25276   */\n    tag_587:\n        /* \"#utility.yul\":24868:24871   */\n      0x00\n        /* \"#utility.yul\":24906:24911   */\n      dup2\n        /* \"#utility.yul\":24900:24912   */\n      mload\n        /* \"#utility.yul\":24933:24939   */\n      dup1\n        /* \"#utility.yul\":24928:24931   */\n      dup5\n        /* \"#utility.yul\":24921:24940   */\n      mstore\n        /* \"#utility.yul\":24959:24963   */\n      0x20\n        /* \"#utility.yul\":24988:24990   */\n      dup1\n        /* \"#utility.yul\":24983:24986   */\n      dup6\n        /* \"#utility.yul\":24979:24991   */\n      add\n        /* \"#utility.yul\":24972:24991   */\n      swap5\n      pop\n        /* \"#utility.yul\":25025:25027   */\n      dup1\n        /* \"#utility.yul\":25018:25023   */\n      dup5\n        /* \"#utility.yul\":25014:25028   */\n      add\n        /* \"#utility.yul\":25046:25047   */\n      0x00\n        /* \"#utility.yul\":25056:25251   */\n    tag_779:\n        /* \"#utility.yul\":25070:25076   */\n      dup4\n        /* \"#utility.yul\":25067:25068   */\n      dup2\n        /* \"#utility.yul\":25064:25077   */\n      lt\n        /* \"#utility.yul\":25056:25251   */\n      iszero\n      tag_781\n      jumpi\n        /* \"#utility.yul\":25135:25148   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":25131:25170   */\n      and\n        /* \"#utility.yul\":25119:25171   */\n      dup8\n      mstore\n        /* \"#utility.yul\":25191:25203   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":25226:25241   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":25167:25168   */\n      0x01\n        /* \"#utility.yul\":25085:25094   */\n      add\n        /* \"#utility.yul\":25056:25251   */\n      jump(tag_779)\n    tag_781:\n      pop\n        /* \"#utility.yul\":25267:25270   */\n      swap5\n      swap6\n        /* \"#utility.yul\":24815:25276   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25281:25613   */\n    tag_487:\n        /* \"#utility.yul\":25488:25494   */\n      dup3\n        /* \"#utility.yul\":25477:25486   */\n      dup2\n        /* \"#utility.yul\":25470:25495   */\n      mstore\n        /* \"#utility.yul\":25531:25533   */\n      0x40\n        /* \"#utility.yul\":25526:25528   */\n      0x20\n        /* \"#utility.yul\":25515:25524   */\n      dup3\n        /* \"#utility.yul\":25511:25529   */\n      add\n        /* \"#utility.yul\":25504:25534   */\n      mstore\n        /* \"#utility.yul\":25451:25455   */\n      0x00\n        /* \"#utility.yul\":25551:25607   */\n      tag_783\n        /* \"#utility.yul\":25603:25605   */\n      0x40\n        /* \"#utility.yul\":25592:25601   */\n      dup4\n        /* \"#utility.yul\":25588:25606   */\n      add\n        /* \"#utility.yul\":25580:25586   */\n      dup5\n        /* \"#utility.yul\":25551:25607   */\n      tag_587\n      jump\t// in\n    tag_783:\n        /* \"#utility.yul\":25543:25607   */\n      swap5\n        /* \"#utility.yul\":25281:25613   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25618:26497   */\n    tag_491:\n        /* \"#utility.yul\":25713:25719   */\n      0x00\n        /* \"#utility.yul\":25744:25746   */\n      0x20\n        /* \"#utility.yul\":25787:25789   */\n      dup1\n        /* \"#utility.yul\":25775:25784   */\n      dup4\n        /* \"#utility.yul\":25766:25773   */\n      dup6\n        /* \"#utility.yul\":25762:25785   */\n      sub\n        /* \"#utility.yul\":25758:25790   */\n      slt\n        /* \"#utility.yul\":25755:25807   */\n      iszero\n      tag_785\n      jumpi\n        /* \"#utility.yul\":25803:25804   */\n      0x00\n        /* \"#utility.yul\":25800:25801   */\n      dup1\n        /* \"#utility.yul\":25793:25805   */\n      revert\n        /* \"#utility.yul\":25755:25807   */\n    tag_785:\n        /* \"#utility.yul\":25836:25845   */\n      dup3\n        /* \"#utility.yul\":25830:25846   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":25861:25867   */\n      dup2\n        /* \"#utility.yul\":25858:25888   */\n      gt\n        /* \"#utility.yul\":25855:25905   */\n      iszero\n      tag_786\n      jumpi\n        /* \"#utility.yul\":25901:25902   */\n      0x00\n        /* \"#utility.yul\":25898:25899   */\n      dup1\n        /* \"#utility.yul\":25891:25903   */\n      revert\n        /* \"#utility.yul\":25855:25905   */\n    tag_786:\n        /* \"#utility.yul\":25924:25946   */\n      dup4\n      add\n        /* \"#utility.yul\":25977:25981   */\n      0x1f\n        /* \"#utility.yul\":25969:25982   */\n      dup2\n      add\n        /* \"#utility.yul\":25965:25992   */\n      dup6\n      sgt\n        /* \"#utility.yul\":25955:26010   */\n      tag_787\n      jumpi\n        /* \"#utility.yul\":26006:26007   */\n      0x00\n        /* \"#utility.yul\":26003:26004   */\n      dup1\n        /* \"#utility.yul\":25996:26008   */\n      revert\n        /* \"#utility.yul\":25955:26010   */\n    tag_787:\n        /* \"#utility.yul\":26035:26037   */\n      dup1\n        /* \"#utility.yul\":26029:26038   */\n      mload\n        /* \"#utility.yul\":26058:26116   */\n      tag_788\n        /* \"#utility.yul\":26074:26115   */\n      tag_602\n        /* \"#utility.yul\":26112:26114   */\n      dup3\n        /* \"#utility.yul\":26074:26115   */\n      tag_583\n      jump\t// in\n        /* \"#utility.yul\":26058:26116   */\n    tag_788:\n        /* \"#utility.yul\":26150:26165   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":26232:26233   */\n      0x05\n        /* \"#utility.yul\":26228:26238   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":26220:26239   */\n      dup3\n      add\n        /* \"#utility.yul\":26216:26244   */\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":26181:26193   */\n      dup4\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":26256:26275   */\n      dup8\n      dup4\n      gt\n        /* \"#utility.yul\":26253:26292   */\n      iszero\n      tag_790\n      jumpi\n        /* \"#utility.yul\":26288:26289   */\n      0x00\n        /* \"#utility.yul\":26285:26286   */\n      dup1\n        /* \"#utility.yul\":26278:26290   */\n      revert\n        /* \"#utility.yul\":26253:26292   */\n    tag_790:\n        /* \"#utility.yul\":26312:26323   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":26332:26467   */\n    tag_791:\n        /* \"#utility.yul\":26348:26354   */\n      dup3\n        /* \"#utility.yul\":26343:26346   */\n      dup5\n        /* \"#utility.yul\":26340:26355   */\n      lt\n        /* \"#utility.yul\":26332:26467   */\n      iszero\n      tag_718\n      jumpi\n        /* \"#utility.yul\":26414:26424   */\n      dup4\n      mload\n        /* \"#utility.yul\":26402:26425   */\n      dup3\n      mstore\n        /* \"#utility.yul\":26365:26377   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":26445:26457   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":26332:26467   */\n      jump(tag_791)\n        /* \"#utility.yul\":26502:27076   */\n    tag_502:\n        /* \"#utility.yul\":26793:26799   */\n      dup6\n        /* \"#utility.yul\":26782:26791   */\n      dup2\n        /* \"#utility.yul\":26775:26800   */\n      mstore\n        /* \"#utility.yul\":26836:26842   */\n      dup5\n        /* \"#utility.yul\":26831:26833   */\n      0x20\n        /* \"#utility.yul\":26820:26829   */\n      dup3\n        /* \"#utility.yul\":26816:26834   */\n      add\n        /* \"#utility.yul\":26809:26843   */\n      mstore\n        /* \"#utility.yul\":26879:26882   */\n      0xa0\n        /* \"#utility.yul\":26874:26876   */\n      0x40\n        /* \"#utility.yul\":26863:26872   */\n      dup3\n        /* \"#utility.yul\":26859:26877   */\n      add\n        /* \"#utility.yul\":26852:26883   */\n      mstore\n        /* \"#utility.yul\":26756:26760   */\n      0x00\n        /* \"#utility.yul\":26900:26957   */\n      tag_795\n        /* \"#utility.yul\":26952:26955   */\n      0xa0\n        /* \"#utility.yul\":26941:26950   */\n      dup4\n        /* \"#utility.yul\":26937:26956   */\n      add\n        /* \"#utility.yul\":26929:26935   */\n      dup7\n        /* \"#utility.yul\":26900:26957   */\n      tag_587\n      jump\t// in\n    tag_795:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":26993:27025   */\n      swap5\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":26988:26990   */\n      0x60\n        /* \"#utility.yul\":26973:26991   */\n      dup4\n      add\n        /* \"#utility.yul\":26966:27026   */\n      mstore\n      pop\n        /* \"#utility.yul\":27057:27060   */\n      0x80\n        /* \"#utility.yul\":27042:27061   */\n      add\n        /* \"#utility.yul\":27035:27070   */\n      mstore\n        /* \"#utility.yul\":26892:26957   */\n      swap4\n        /* \"#utility.yul\":26502:27076   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27081:27370   */\n    tag_510:\n        /* \"#utility.yul\":27256:27258   */\n      0x40\n        /* \"#utility.yul\":27245:27254   */\n      dup2\n        /* \"#utility.yul\":27238:27259   */\n      mstore\n        /* \"#utility.yul\":27219:27223   */\n      0x00\n        /* \"#utility.yul\":27276:27321   */\n      tag_797\n        /* \"#utility.yul\":27317:27319   */\n      0x40\n        /* \"#utility.yul\":27306:27315   */\n      dup4\n        /* \"#utility.yul\":27302:27320   */\n      add\n        /* \"#utility.yul\":27294:27300   */\n      dup6\n        /* \"#utility.yul\":27276:27321   */\n      tag_578\n      jump\t// in\n    tag_797:\n        /* \"#utility.yul\":27268:27321   */\n      swap1\n      pop\n        /* \"#utility.yul\":27357:27363   */\n      dup3\n        /* \"#utility.yul\":27352:27354   */\n      0x20\n        /* \"#utility.yul\":27341:27350   */\n      dup4\n        /* \"#utility.yul\":27337:27355   */\n      add\n        /* \"#utility.yul\":27330:27364   */\n      mstore\n        /* \"#utility.yul\":27081:27370   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27375:28026   */\n    tag_522:\n        /* \"#utility.yul\":27570:27572   */\n      0x20\n        /* \"#utility.yul\":27559:27568   */\n      dup2\n        /* \"#utility.yul\":27552:27573   */\n      mstore\n        /* \"#utility.yul\":27533:27537   */\n      0x00\n        /* \"#utility.yul\":27608:27614   */\n      dup3\n        /* \"#utility.yul\":27602:27615   */\n      mload\n        /* \"#utility.yul\":27651:27655   */\n      0xa0\n        /* \"#utility.yul\":27646:27648   */\n      0x20\n        /* \"#utility.yul\":27635:27644   */\n      dup5\n        /* \"#utility.yul\":27631:27649   */\n      add\n        /* \"#utility.yul\":27624:27656   */\n      mstore\n        /* \"#utility.yul\":27679:27731   */\n      tag_799\n        /* \"#utility.yul\":27726:27729   */\n      0xc0\n        /* \"#utility.yul\":27715:27724   */\n      dup5\n        /* \"#utility.yul\":27711:27730   */\n      add\n        /* \"#utility.yul\":27697:27709   */\n      dup3\n        /* \"#utility.yul\":27679:27731   */\n      tag_578\n      jump\t// in\n    tag_799:\n        /* \"#utility.yul\":27665:27731   */\n      swap1\n      pop\n        /* \"#utility.yul\":27812:27813   */\n      0x01\n        /* \"#utility.yul\":27808:27809   */\n      dup1\n        /* \"#utility.yul\":27803:27806   */\n      0xa0\n        /* \"#utility.yul\":27799:27810   */\n      shl\n        /* \"#utility.yul\":27795:27814   */\n      sub\n        /* \"#utility.yul\":27789:27791   */\n      0x20\n        /* \"#utility.yul\":27781:27787   */\n      dup6\n        /* \"#utility.yul\":27777:27792   */\n      add\n        /* \"#utility.yul\":27771:27793   */\n      mload\n        /* \"#utility.yul\":27767:27815   */\n      and\n        /* \"#utility.yul\":27762:27764   */\n      0x40\n        /* \"#utility.yul\":27751:27760   */\n      dup5\n        /* \"#utility.yul\":27747:27765   */\n      add\n        /* \"#utility.yul\":27740:27816   */\n      mstore\n        /* \"#utility.yul\":27870:27872   */\n      0x40\n        /* \"#utility.yul\":27862:27868   */\n      dup5\n        /* \"#utility.yul\":27858:27873   */\n      add\n        /* \"#utility.yul\":27852:27874   */\n      mload\n        /* \"#utility.yul\":27847:27849   */\n      0x60\n        /* \"#utility.yul\":27836:27845   */\n      dup5\n        /* \"#utility.yul\":27832:27850   */\n      add\n        /* \"#utility.yul\":27825:27875   */\n      mstore\n        /* \"#utility.yul\":27930:27932   */\n      0x60\n        /* \"#utility.yul\":27922:27928   */\n      dup5\n        /* \"#utility.yul\":27918:27933   */\n      add\n        /* \"#utility.yul\":27912:27934   */\n      mload\n        /* \"#utility.yul\":27906:27909   */\n      0x80\n        /* \"#utility.yul\":27895:27904   */\n      dup5\n        /* \"#utility.yul\":27891:27910   */\n      add\n        /* \"#utility.yul\":27884:27935   */\n      mstore\n        /* \"#utility.yul\":27991:27994   */\n      0x80\n        /* \"#utility.yul\":27983:27989   */\n      dup5\n        /* \"#utility.yul\":27979:27995   */\n      add\n        /* \"#utility.yul\":27973:27996   */\n      mload\n        /* \"#utility.yul\":27966:27970   */\n      0xa0\n        /* \"#utility.yul\":27955:27964   */\n      dup5\n        /* \"#utility.yul\":27951:27971   */\n      add\n        /* \"#utility.yul\":27944:27997   */\n      mstore\n        /* \"#utility.yul\":28014:28020   */\n      dup1\n        /* \"#utility.yul\":28006:28020   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":27375:28026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28411:28698   */\n    tag_530:\n        /* \"#utility.yul\":28540:28543   */\n      0x00\n        /* \"#utility.yul\":28578:28584   */\n      dup3\n        /* \"#utility.yul\":28572:28585   */\n      mload\n        /* \"#utility.yul\":28594:28660   */\n      tag_802\n        /* \"#utility.yul\":28653:28659   */\n      dup2\n        /* \"#utility.yul\":28648:28651   */\n      dup5\n        /* \"#utility.yul\":28641:28645   */\n      0x20\n        /* \"#utility.yul\":28633:28639   */\n      dup8\n        /* \"#utility.yul\":28629:28646   */\n      add\n        /* \"#utility.yul\":28594:28660   */\n      tag_577\n      jump\t// in\n    tag_802:\n        /* \"#utility.yul\":28676:28692   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":28411:28698   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ab8a5c674b37dce16c3645c864c042a2673fcf3aba024145aecd65f625b51f7b64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1295": {
									"entryPoint": null,
									"id": 1295,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_1963": {
									"entryPoint": null,
									"id": 1963,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 243,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address_fromMemory": {
									"entryPoint": 540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4791:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:17"
															},
															"nodeType": "YulIf",
															"src": "220:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:17"
															},
															"nodeType": "YulIf",
															"src": "353:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:17",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:17"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:17"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:17"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:17"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:17"
															},
															"nodeType": "YulIf",
															"src": "536:72:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:17"
															},
															"nodeType": "YulIf",
															"src": "698:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:17"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:17"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:17"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:17"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:17"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:17",
																"statements": []
															},
															"src": "779:133:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:17"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:17",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:17",
														"type": ""
													}
												],
												"src": "146:840:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1051:117:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1061:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1076:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1070:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1070:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1061:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1146:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1155:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1148:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1148:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1148:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1105:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1116:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1131:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1136:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1127:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1127:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1140:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1123:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1123:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1112:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1112:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1102:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1095:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1095:50:17"
															},
															"nodeType": "YulIf",
															"src": "1092:70:17"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1030:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1041:5:17",
														"type": ""
													}
												],
												"src": "991:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1342:650:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1389:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1398:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1401:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1391:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1391:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1391:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1384:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1355:33:17"
															},
															"nodeType": "YulIf",
															"src": "1352:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1414:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1434:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1428:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1428:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1418:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1453:28:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1471:2:17",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1475:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1467:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1467:10:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1479:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1463:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1463:18:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1457:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1508:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1517:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1520:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1510:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1510:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1510:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1496:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1504:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1493:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1493:14:17"
															},
															"nodeType": "YulIf",
															"src": "1490:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1533:71:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1572:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1596:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1543:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:61:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1613:41:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1639:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1650:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1635:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1635:18:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1629:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1629:25:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1617:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1683:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1692:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1695:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1685:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1685:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1685:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1669:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1679:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1666:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:16:17"
															},
															"nodeType": "YulIf",
															"src": "1663:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1708:73:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1751:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1762:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1747:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1747:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1773:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1718:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1718:63:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1790:59:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1834:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1845:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1800:29:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1800:49:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1790:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1858:59:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1902:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1913:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1898:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1898:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1868:29:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:49:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1858:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1926:60:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1981:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1966:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1966:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1936:29:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1936:50:17"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1926:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1276:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1287:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1299:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1307:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1315:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1323:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1331:6:17",
														"type": ""
													}
												],
												"src": "1173:819:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2120:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2116:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2116:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2108:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2150:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2165:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2181:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2186:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2177:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2177:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2190:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2173:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2173:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2161:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2161:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2143:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2067:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2078:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2089:4:17",
														"type": ""
													}
												],
												"src": "1997:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2260:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2270:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2284:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2287:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2280:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2270:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2301:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2331:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2337:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2327:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2327:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2305:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2378:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2380:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2394:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2402:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2390:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2390:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2380:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2358:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2351:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2351:26:17"
															},
															"nodeType": "YulIf",
															"src": "2348:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2468:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2489:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2496:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2501:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2492:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2492:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2482:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2482:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2533:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2536:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2526:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2526:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2526:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2561:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2564:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2554:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2554:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2554:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2424:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2444:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2421:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2421:38:17"
															},
															"nodeType": "YulIf",
															"src": "2418:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2240:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2249:6:17",
														"type": ""
													}
												],
												"src": "2205:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2646:65:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2663:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2666:3:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2656:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2656:14:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2656:14:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2679:26:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2700:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2687:9:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2687:18:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2679:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2629:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2637:4:17",
														"type": ""
													}
												],
												"src": "2590:121:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2797:464:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2830:425:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2844:11:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2854:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2848:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2875:2:17"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2879:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2868:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2868:17:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2868:17:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2898:31:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2920:2:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2924:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2910:9:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2910:19:17"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2902:4:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2942:57:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2965:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2975:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2982:10:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2994:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2978:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2978:19:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2971:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2971:27:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2961:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2961:38:17"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2946:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3036:23:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3038:19:17",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "3053:4:17"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "3038:11:17"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "3018:10:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3030:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3015:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3015:20:17"
																		},
																		"nodeType": "YulIf",
																		"src": "3012:47:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3072:41:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "3086:4:17"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3096:1:17",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "3103:3:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3108:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3099:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3099:12:17"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "3092:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3092:20:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3082:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3082:31:17"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "3076:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3126:24:17",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "3139:11:17"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "3130:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3224:21:17",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3233:5:17"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3240:2:17"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "3226:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3226:17:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3226:17:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3174:5:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3181:2:17"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "3171:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3171:13:17"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "3185:26:17",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3187:22:17",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "3200:5:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3207:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3196:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3196:13:17"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "3187:5:17"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "3167:3:17",
																			"statements": []
																		},
																		"src": "3163:82:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2813:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2818:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2810:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2810:11:17"
															},
															"nodeType": "YulIf",
															"src": "2807:448:17"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2769:5:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2776:3:17",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2781:10:17",
														"type": ""
													}
												],
												"src": "2716:545:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3351:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3361:65:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "3376:4:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3394:1:17",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "3397:3:17"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "3390:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3390:11:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3407:1:17",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "3403:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3403:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "3386:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3386:24:17"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "3382:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3382:29:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3372:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3372:40:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3418:1:17",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "3421:3:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3414:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3414:11:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3369:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3369:57:17"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "3361:4:17"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3328:4:17",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3334:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "3342:4:17",
														"type": ""
													}
												],
												"src": "3266:166:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3533:1256:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3543:24:17",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3563:3:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3557:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3557:10:17"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "3547:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3610:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3612:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3612:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3612:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3582:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3598:2:17",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3602:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3594:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3594:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3606:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3590:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3590:18:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3579:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3579:30:17"
															},
															"nodeType": "YulIf",
															"src": "3576:56:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3685:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3723:4:17"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3717:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3717:11:17"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3691:25:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3691:38:17"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3731:6:17"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "3641:43:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3641:97:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3641:97:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3747:18:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3764:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3751:9:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3774:23:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3793:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3778:11:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3806:24:17",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3819:11:17"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3806:9:17"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3876:656:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3890:35:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3909:6:17"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3921:2:17",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3917:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3917:7:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3905:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3905:20:17"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3894:7:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3938:49:17",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3982:4:17"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3952:29:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3952:35:17"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3942:6:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4000:10:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4009:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "4004:1:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4087:172:17",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4112:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "4130:3:17"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "4135:9:17"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4126:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4126:19:17"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4120:5:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4120:26:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4105:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4105:42:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4105:42:17"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4164:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4178:6:17"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4186:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4174:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4174:14:17"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "4164:6:17"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4205:40:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "4222:9:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4233:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4218:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4218:27:17"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "4205:9:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "4034:1:17"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4037:7:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4031:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4031:14:17"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4046:28:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4048:24:17",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "4057:1:17"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "4060:11:17"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4053:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4053:19:17"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "4048:1:17"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4027:3:17",
																					"statements": []
																				},
																				"src": "4023:236:17"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4307:166:17",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4325:43:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4352:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4357:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4348:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4348:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4342:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4342:26:17"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "4329:9:17",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "4392:6:17"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "4404:9:17"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "4431:1:17",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "4434:6:17"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "4427:3:17"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "4427:14:17"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4443:3:17",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "4423:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4423:24:17"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "4453:1:17",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "4449:3:17"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "4449:6:17"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "4419:3:17"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4419:37:17"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "4415:3:17"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4415:42:17"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "4400:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4400:58:17"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "4385:6:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4385:74:17"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4385:74:17"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "4278:7:17"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "4287:6:17"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4275:2:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4275:19:17"
																				},
																				"nodeType": "YulIf",
																				"src": "4272:201:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4493:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4507:1:17",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "4510:6:17"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4503:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4503:14:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4519:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4499:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4499:22:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4486:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4486:36:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4486:36:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3869:663:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3874:1:17",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4549:234:17",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4563:14:17",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4576:1:17",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "4567:5:17",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4612:67:17",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4630:35:17",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4649:3:17"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4654:9:17"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4645:3:17"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4645:19:17"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "4639:5:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4639:26:17"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4630:5:17"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "4593:6:17"
																				},
																				"nodeType": "YulIf",
																				"src": "4590:89:17"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4699:4:17"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4758:5:17"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4765:6:17"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4705:52:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4705:67:17"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4692:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4692:81:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4692:81:17"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4541:242:17",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3849:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3857:2:17",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3846:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3846:14:17"
															},
															"nodeType": "YulSwitch",
															"src": "3839:944:17"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3518:4:17",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3524:3:17",
														"type": ""
													}
												],
												"src": "3437:1352:17"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600e805460ff60201b191690553480156200001d575f80fd5b5060405162002ea038038062002ea083398101604081905262000040916200021c565b828282878733806200006b57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200007681620000f3565b50600462000085838262000344565b50600562000094828262000344565b5050600980546001600160a01b039586166001600160a01b031991821617909155600a80549486169482169490941790935550600b805491909316908216179091556103e86007556010805490911633179055506200040c9350505050565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f83011262000166575f80fd5b81516001600160401b038082111562000183576200018362000142565b604051601f8301601f19908116603f01168101908282118183101715620001ae57620001ae62000142565b81604052838152602092508683858801011115620001ca575f80fd5b5f91505b83821015620001ed5785820183015181830184015290820190620001ce565b5f93810190920192909252949350505050565b80516001600160a01b038116811462000217575f80fd5b919050565b5f805f805f60a0868803121562000231575f80fd5b85516001600160401b038082111562000248575f80fd5b6200025689838a0162000156565b965060208801519150808211156200026c575f80fd5b506200027b8882890162000156565b9450506200028c6040870162000200565b92506200029c6060870162000200565b9150620002ac6080870162000200565b90509295509295909350565b600181811c90821680620002cd57607f821691505b602082108103620002ec57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200033f575f81815260208120601f850160051c810160208610156200031a5750805b601f850160051c820191505b818110156200033b5782815560010162000326565b5050505b505050565b81516001600160401b0381111562000360576200036062000142565b6200037881620003718454620002b8565b84620002f2565b602080601f831160018114620003ae575f8415620003965750858301515b5f19600386901b1c1916600185901b1785556200033b565b5f85815260208120601f198616915b82811015620003de57888601518255948401946001909101908401620003bd565b5085821015620003fc57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b612a86806200041a5f395ff3fe6080604052600436106101c4575f3560e01c806367a52793116100f2578063945098db11610092578063c38cd0b511610062578063c38cd0b514610553578063d03153aa1461057e578063dd62ed3e14610593578063f2fde38b146105d7575f80fd5b8063945098db146104ee57806395d89b4114610501578063a738c7df14610515578063a9059cbb14610534575f80fd5b806374a66061116100cd57806374a660611461047857806381a06b73146104975780638bc7e8c4146104b85780638da5cb5b146104d2575f80fd5b806367a52793146103fd57806370a0823114610430578063715018a614610464575f80fd5b80632a5c792a1161016857806336a43f2b1161013857806336a43f2b1461034f578063378a653c1461037a5780633f595e29146103bf5780634d20d0f8146103de575f80fd5b80632a5c792a146102d55780632c76d7a6146102f65780633043d4d914610315578063313ce56714610334575f80fd5b8063117da1ee116101a3578063117da1ee146102425780631694505e1461026157806318160ddd1461029857806323b872dd146102b6575f80fd5b8062d06ddd146101c857806306fdde03146101e9578063095ea7b314610213575b5f80fd5b3480156101d3575f80fd5b506101e76101e236600461201a565b6105f6565b005b3480156101f4575f80fd5b506101fd6109c2565b60405161020a91906120aa565b60405180910390f35b34801561021e575f80fd5b5061023261022d3660046120d7565b610a52565b604051901515815260200161020a565b34801561024d575f80fd5b506101e761025c366004612101565b610a6b565b34801561026c575f80fd5b50600954610280906001600160a01b031681565b6040516001600160a01b03909116815260200161020a565b3480156102a3575f80fd5b506003545b60405190815260200161020a565b3480156102c1575f80fd5b506102326102d0366004612118565b610aab565b3480156102e0575f80fd5b506102e9610ace565b60405161020a9190612156565b348015610301575f80fd5b50600a54610280906001600160a01b031681565b348015610320575f80fd5b506101e761032f366004612101565b610b41565b34801561033f575f80fd5b506040516012815260200161020a565b34801561035a575f80fd5b506102a86103693660046121ad565b60086020525f908152604090205481565b348015610385575f80fd5b50610399610394366004612101565b610d33565b604080516001600160a01b0394851681529390921660208401529082015260600161020a565b3480156103ca575f80fd5b506101e76103d9366004612225565b610d71565b3480156103e9575f80fd5b50600b54610280906001600160a01b031681565b348015610408575f80fd5b50600e5461041d9062010000900461ffff1681565b60405161ffff909116815260200161020a565b34801561043b575f80fd5b506102a861044a3660046121ad565b6001600160a01b03165f9081526001602052604090205490565b34801561046f575f80fd5b506101e7610ffe565b348015610483575f80fd5b506102a86104923660046122ba565b611011565b3480156104a2575f80fd5b50600e5461023290640100000000900460ff1681565b3480156104c3575f80fd5b50600e5461041d9061ffff1681565b3480156104dd575f80fd5b505f546001600160a01b0316610280565b6101e76104fc366004612333565b611099565b34801561050c575f80fd5b506101fd6114db565b348015610520575f80fd5b506101e761052f3660046121ad565b6114ea565b34801561053f575f80fd5b5061023261054e3660046120d7565b611593565b34801561055e575f80fd5b506102a861056d3660046121ad565b600f6020525f908152604090205481565b348015610589575f80fd5b506102a860075481565b34801561059e575f80fd5b506102a86105ad366004612369565b6001600160a01b039182165f90815260026020908152604080832093909416825291909152205490565b3480156105e2575f80fd5b506101e76105f13660046121ad565b6115a0565b5f821161062f5760405162461bcd60e51b815260206004820152600260248201526103e360f41b60448201526064015b60405180910390fd5b6040516370a0823160e01b8152336004820152829030906370a0823190602401602060405180830381865afa15801561066a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068e91906123a0565b10156106cc5760405162461bcd60e51b815260206004820152600d60248201526c08525b9cdd59999a58da595b9d609a1b6044820152606401610626565b5f818060200190518101906106e191906123e4565b90505f6106ed60035490565b6106f98561271061251e565b6107039190612535565b90505f60095f9054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610756573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077a9190612554565b90505f805b600c548110156108f1575f600c828154811061079d5761079d61256f565b5f918252602082206002919091020180546040516370a0823160e01b81523060048201529193506127109188916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061081c91906123a0565b610826919061251e565b6108309190612535565b825460408901518951805193945030936374a66061936001600160a01b031692869290913391908a9081106108675761086761256f565b60200260200101516040518663ffffffff1660e01b815260040161088f9594939291906125b7565b6020604051808303815f875af19250505080156108c9575060408051601f3d908101601f191682019092526108c6918101906123a0565b60015b156108dc576108d88186612602565b9450505b505080806108e990612615565b91505061077f565b506108fc33876115da565b80156109ba57600e545f90612710906109199061ffff168461251e565b6109239190612535565b90505f610930828461262d565b905081600d5f8282546109439190612602565b909155505060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0385169063a9059cbb906044016020604051808303815f875af1158015610992573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b69190612640565b5050505b505050505050565b6060600480546109d19061265f565b80601f01602080910402602001604051908101604052809291908181526020018280546109fd9061265f565b8015610a485780601f10610a1f57610100808354040283529160200191610a48565b820191905f5260205f20905b815481529060010190602001808311610a2b57829003601f168201915b5050505050905090565b5f33610a5f818585611612565b60019150505b92915050565b612710811115610aa65760405162461bcd60e51b815260040161062690602080825260049082015263021534c560e41b604082015260600190565b600755565b5f33610ab885828561161f565b610ac3858585611694565b506001949350505050565b6060600c805480602002602001604051908101604052809291908181526020015f905b82821015610b38575f848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610af1565b50505050905090565b5f8111610b765760405162461bcd60e51b81526020600482015260036024820152620573e360ec1b6044820152606401610626565b335f90815260016020526040902054811115610bbf5760405162461bcd60e51b81526020600482015260086024820152672162616c616e636560c01b6044820152606401610626565b5f610bc960035490565b610bd58361271061251e565b610bdf9190612535565b9050610beb33836115da565b5f5b600c54811015610d2e575f600c8281548110610c0b57610c0b61256f565b5f918252602082206002919091020180546040516370a0823160e01b81523060048201529193506127109186916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8a91906123a0565b610c94919061251e565b610c9e9190612535565b90508015610d1957815460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610cf3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d179190612640565b505b50508080610d2690612615565b915050610bed565b505050565b60068181548110610d42575f80fd5b5f9182526020909120600390910201805460018201546002909201546001600160a01b03918216935091169083565b610d796116f1565b600e54640100000000900460ff1615610dc25760405162461bcd60e51b815260206004820152600b60248201526a1a5b9a5d1a585b1a5e995960aa1b6044820152606401610626565b848314610e065760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b6044820152606401610626565b600e805461ffff838116620100000263ffffffff19909216908516171790555f805b86811015610f6657612710868683818110610e4557610e4561256f565b905060200201351115610e8e5760405162461bcd60e51b8152602060048201526011602482015270496e76616c696450657263656e7461676560781b6044820152606401610626565b858582818110610ea057610ea061256f565b9050602002013582610eb29190612602565b9150600c60405180604001604052808a8a85818110610ed357610ed361256f565b9050602002016020810190610ee891906121ad565b6001600160a01b03168152602001888885818110610f0857610f0861256f565b602090810292909201359092528354600180820186555f95865294829020845160029092020180546001600160a01b0319166001600160a01b0390921691909117815592015191909201555080610f5e81612615565b915050610e28565b508061271014610fa25760405162461bcd60e51b81526020600482015260076024820152660743d31303030360cc1b6044820152606401610626565b600e805464ff0000000019166401000000001790556040517fa6413c453391b24b1553ee2908b9fdb9d8528511a0b9983f82d823531cea38b890610fed908990899089908990612697565b60405180910390a150505050505050565b6110066116f1565b61100f5f61171d565b565b5f8084600181111561102557611025612583565b0361103d576110368686858561176c565b9050611090565b600184600181111561105157611051612583565b03611062576110368686858561195b565b60405162461bcd60e51b815260206004820152600360248201526210aaab60e91b6044820152606401610626565b95945050505050565b5f8160200135116110d25760405162461bcd60e51b81526020600482015260036024820152620213e360ec1b6044820152606401610626565b600e545f90612710906110f39062010000900461ffff16602085013561251e565b6110fd9190612535565b90505f61110e82602085013561262d565b905081600d5f8282546111219190612602565b9091555050806111595760405162461bcd60e51b81526020600482015260036024820152620213e360ec1b6044820152606401610626565b600954604080516315ab88c960e31b815290516111d2926001600160a01b03169163ad5c46489160048083019260209291908290030181865afa1580156111a2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111c69190612554565b33308660200135611b16565b600954604080516315ab88c960e31b81529051611255926001600160a01b03169163ad5c46489160048083019260209291908290030181865afa15801561121b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123f9190612554565b600a546001600160a01b03166020860135611c13565b61125f3382611d0e565b5f5b600c548110156114d5575f600c828154811061127f5761127f61256f565b905f5260205f20906002020190505f6127108260010154856112a1919061251e565b6112ab9190612535565b9050838111156112f55760405162461bcd60e51b815260206004820152601560248201527421657468416d6f756e743c3d616d6f756e7466656560581b6044820152606401610626565b80156114c057815430906374a66061906001600160a01b03168361131f60608b0160408c01612713565b3061132a8c8061272e565b8a81811061133a5761133a61256f565b905060200281019061134c9190612773565b6040518763ffffffff1660e01b815260040161136d969594939291906127b5565b6020604051808303815f875af19250505080156113a7575060408051601f3d908101601f191682019092526113a4918101906123a0565b60015b6114be57335f908152600f6020526040812080548392906113c9908490612602565b9091555050604080516060810182523380825284546001600160a01b039081166020808501918252848601878152600680546001810182555f918252965160039097027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810180549887166001600160a01b0319998a1617905593517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40850180549190961697169690961790935591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4190910155908252600890529081208054916114b483612615565b91905055506114c0565b505b505080806114cd90612615565b915050611261565b50505050565b6060600580546109d19061265f565b6114f26116f1565b600d541561159057600d546040515f916001600160a01b038416918381818185875af1925050503d805f8114611543576040519150601f19603f3d011682016040523d82523d5f602084013e611548565b606091505b505090508061158a5760405162461bcd60e51b815260206004820152600e60248201526d1d1c985b9cd9995c91985a5b195960921b6044820152606401610626565b505f600d555b50565b5f33610a5f818585611694565b6115a86116f1565b6001600160a01b0381166115d157604051631e4fbdf760e01b81525f6004820152602401610626565b6115908161171d565b6001600160a01b03821661160357604051634b637e8f60e11b81525f6004820152602401610626565b61160e825f83611d3e565b5050565b610d2e8383836001611e64565b6001600160a01b038381165f908152600260209081526040808320938616835292905220545f1981146114d5578181101561168657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610626565b6114d584848484035f611e64565b6001600160a01b0383166116bd57604051634b637e8f60e11b81525f6004820152602401610626565b6001600160a01b0382166116e65760405163ec442f0560e01b81525f6004820152602401610626565b610d2e838383611d3e565b5f546001600160a01b0316331461100f5760405163118cdaa760e01b8152336004820152602401610626565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f80828060200190518101906117829190612817565b60095460405163d06ca61f60e01b81529192505f916001600160a01b039091169063d06ca61f906117b990899086906004016128e2565b5f60405180830381865afa1580156117d3573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526117fa9190810190612902565b90505f612710600754612710611810919061262d565b836001815181106118235761182361256f565b6020026020010151611835919061251e565b61183f9190612535565b60095460405163095ea7b360e01b81526001600160a01b039182166004820152602481018a905291925089169063095ea7b3906044016020604051808303815f875af1158015611891573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118b59190612640565b506009546040516318cbafe560e01b81525f916001600160a01b0316906318cbafe5906118ee908b90869089908d904290600401612982565b5f604051808303815f875af1158015611909573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526119309190810190612902565b9050806001815181106119455761194561256f565b6020026020010151945050505050949350505050565b600b5460405163cdca175360e01b81525f9182916001600160a01b039091169063cdca17539061199190869089906004016129bd565b6020604051808303815f875af11580156119ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119d191906123a0565b90505f6127106007546127106119e7919061262d565b6119f1908461251e565b6119fb9190612535565b6040805160a0810182528681526001600160a01b0388811660208301524282840152606082018a905260808201849052600a54925163095ea7b360e01b81529281166004840152602483018a90529293509189169063095ea7b3906044016020604051808303815f875af1158015611a75573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a999190612640565b50600a5460405163c04b8d5960e01b81526001600160a01b039091169063c04b8d5990611aca9084906004016129de565b6020604051808303815f875af1158015611ae6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b0a91906123a0565b98975050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291515f92839290881691611b799190612a35565b5f604051808303815f865af19150503d805f8114611bb2576040519150601f19603f3d011682016040523d82523d5f602084013e611bb7565b606091505b5091509150818015611be1575080511580611be1575080806020019051810190611be19190612640565b6109ba5760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606401610626565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291515f92839290871691611c6e9190612a35565b5f604051808303815f865af19150503d805f8114611ca7576040519150601f19603f3d011682016040523d82523d5f602084013e611cac565b606091505b5091509150818015611cd6575080511580611cd6575080806020019051810190611cd69190612640565b611d075760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606401610626565b5050505050565b6001600160a01b038216611d375760405163ec442f0560e01b81525f6004820152602401610626565b61160e5f83835b6001600160a01b038316611d68578060035f828254611d5d9190612602565b90915550611dd89050565b6001600160a01b0383165f9081526001602052604090205481811015611dba5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610626565b6001600160a01b0384165f9081526001602052604090209082900390555b6001600160a01b038216611df457600380548290039055611e12565b6001600160a01b0382165f9081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e5791815260200190565b60405180910390a3505050565b6001600160a01b038416611e8d5760405163e602df0560e01b81525f6004820152602401610626565b6001600160a01b038316611eb657604051634a1406b160e11b81525f6004820152602401610626565b6001600160a01b038085165f90815260026020908152604080832093871683529290522082905580156114d557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611f2891815260200190565b60405180910390a350505050565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b0381118282101715611f6c57611f6c611f36565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611f9a57611f9a611f36565b604052919050565b5f6001600160401b03821115611fba57611fba611f36565b50601f01601f191660200190565b5f82601f830112611fd7575f80fd5b8135611fea611fe582611fa2565b611f72565b818152846020838601011115611ffe575f80fd5b816020850160208301375f918101602001919091529392505050565b5f806040838503121561202b575f80fd5b8235915060208301356001600160401b03811115612047575f80fd5b61205385828601611fc8565b9150509250929050565b5f5b8381101561207757818101518382015260200161205f565b50505f910152565b5f815180845261209681602086016020860161205d565b601f01601f19169290920160200192915050565b602081525f6120bc602083018461207f565b9392505050565b6001600160a01b0381168114611590575f80fd5b5f80604083850312156120e8575f80fd5b82356120f3816120c3565b946020939093013593505050565b5f60208284031215612111575f80fd5b5035919050565b5f805f6060848603121561212a575f80fd5b8335612135816120c3565b92506020840135612145816120c3565b929592945050506040919091013590565b602080825282518282018190525f919060409081850190868401855b828110156121a057815180516001600160a01b03168552860151868501529284019290850190600101612172565b5091979650505050505050565b5f602082840312156121bd575f80fd5b81356120bc816120c3565b5f8083601f8401126121d8575f80fd5b5081356001600160401b038111156121ee575f80fd5b6020830191508360208260051b8501011115612208575f80fd5b9250929050565b803561ffff81168114612220575f80fd5b919050565b5f805f805f806080878903121561223a575f80fd5b86356001600160401b0380821115612250575f80fd5b61225c8a838b016121c8565b90985096506020890135915080821115612274575f80fd5b5061228189828a016121c8565b909550935061229490506040880161220f565b91506122a26060880161220f565b90509295509295509295565b60028110611590575f80fd5b5f805f805f60a086880312156122ce575f80fd5b85356122d9816120c3565b94506020860135935060408601356122f0816122ae565b92506060860135612300816120c3565b915060808601356001600160401b0381111561231a575f80fd5b61232688828901611fc8565b9150509295509295909350565b5f60208284031215612343575f80fd5b81356001600160401b03811115612358575f80fd5b8201606081850312156120bc575f80fd5b5f806040838503121561237a575f80fd5b8235612385816120c3565b91506020830135612395816120c3565b809150509250929050565b5f602082840312156123b0575f80fd5b5051919050565b5f6001600160401b038211156123cf576123cf611f36565b5060051b60200190565b8051612220816122ae565b5f60208083850312156123f5575f80fd5b82516001600160401b038082111561240b575f80fd5b908401906060828703121561241e575f80fd5b612426611f4a565b825182811115612434575f80fd5b8301601f81018813612444575f80fd5b8051612452611fe5826123b7565b81815260059190911b8201860190868101908a831115612470575f80fd5b8784015b838110156124e15780518781111561248b575f8081fd5b8501603f81018d1361249c575f8081fd5b8981015160406124ae611fe583611fa2565b8281528f828486010111156124c2575f8081fd5b6124d1838e830184870161205d565b8652505050918801918801612474565b50845250505082840151848201526124fb604084016123d9565b60408201529695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610a6557610a6561250a565b5f8261254f57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612564575f80fd5b81516120bc816120c3565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b600281106125b357634e487b7160e01b5f52602160045260245ffd5b9052565b6001600160a01b038681168252602082018690525f906125da6040840187612597565b80851660608401525060a060808301526125f760a083018461207f565b979650505050505050565b80820180821115610a6557610a6561250a565b5f600182016126265761262661250a565b5060010190565b81810381811115610a6557610a6561250a565b5f60208284031215612650575f80fd5b815180151581146120bc575f80fd5b600181811c9082168061267357607f821691505b60208210810361269157634e487b7160e01b5f52602260045260245ffd5b50919050565b604080825281018490525f8560608301825b878110156126d95782356126bc816120c3565b6001600160a01b03168252602092830192909101906001016126a9565b5083810360208501528481526001600160fb1b038511156126f8575f80fd5b8460051b915081866020830137016020019695505050505050565b5f60208284031215612723575f80fd5b81356120bc816122ae565b5f808335601e19843603018112612743575f80fd5b8301803591506001600160401b0382111561275c575f80fd5b6020019150600581901b3603821315612208575f80fd5b5f808335601e19843603018112612788575f80fd5b8301803591506001600160401b038211156127a1575f80fd5b602001915036819003821315612208575f80fd5b6001600160a01b038781168252602082018790525f906127d86040840188612597565b80861660608401525060a060808301528260a0830152828460c08401375f60c0848401015260c0601f19601f8501168301019050979650505050505050565b5f6020808385031215612828575f80fd5b82516001600160401b0381111561283d575f80fd5b8301601f8101851361284d575f80fd5b805161285b611fe5826123b7565b81815260059190911b82018301908381019087831115612879575f80fd5b928401925b828410156125f7578351612891816120c3565b8252928401929084019061287e565b5f8151808452602080850194508084015f5b838110156128d75781516001600160a01b0316875295820195908201906001016128b2565b509495945050505050565b828152604060208201525f6128fa60408301846128a0565b949350505050565b5f6020808385031215612913575f80fd5b82516001600160401b03811115612928575f80fd5b8301601f81018513612938575f80fd5b8051612946611fe5826123b7565b81815260059190911b82018301908381019087831115612964575f80fd5b928401925b828410156125f757835182529284019290840190612969565b85815284602082015260a060408201525f6129a060a08301866128a0565b6001600160a01b0394909416606083015250608001529392505050565b604081525f6129cf604083018561207f565b90508260208301529392505050565b602081525f825160a060208401526129f960c084018261207f565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b5f8251612a4681846020870161205d565b919091019291505056fea2646970667358221220ab8a5c674b37dce16c3645c864c042a2673fcf3aba024145aecd65f625b51f7b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xE DUP1 SLOAD PUSH1 0xFF PUSH1 0x20 SHL NOT AND SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2EA0 CODESIZE SUB DUP1 PUSH3 0x2EA0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x40 SWAP2 PUSH3 0x21C JUMP JUMPDEST DUP3 DUP3 DUP3 DUP8 DUP8 CALLER DUP1 PUSH3 0x6B JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76 DUP2 PUSH3 0xF3 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x85 DUP4 DUP3 PUSH3 0x344 JUMP JUMPDEST POP PUSH1 0x5 PUSH3 0x94 DUP3 DUP3 PUSH3 0x344 JUMP JUMPDEST POP POP PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0xA DUP1 SLOAD SWAP5 DUP7 AND SWAP5 DUP3 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE POP PUSH1 0xB DUP1 SLOAD SWAP2 SWAP1 SWAP4 AND SWAP1 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH2 0x3E8 PUSH1 0x7 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP2 AND CALLER OR SWAP1 SSTORE POP PUSH3 0x40C SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x166 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x183 JUMPI PUSH3 0x183 PUSH3 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AE PUSH3 0x142 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x1CA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1ED JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x1CE JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x217 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x248 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x256 DUP10 DUP4 DUP11 ADD PUSH3 0x156 JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x27B DUP9 DUP3 DUP10 ADD PUSH3 0x156 JUMP JUMPDEST SWAP5 POP POP PUSH3 0x28C PUSH1 0x40 DUP8 ADD PUSH3 0x200 JUMP JUMPDEST SWAP3 POP PUSH3 0x29C PUSH1 0x60 DUP8 ADD PUSH3 0x200 JUMP JUMPDEST SWAP2 POP PUSH3 0x2AC PUSH1 0x80 DUP8 ADD PUSH3 0x200 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2EC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x33F JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x31A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x33B JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x326 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x360 JUMPI PUSH3 0x360 PUSH3 0x142 JUMP JUMPDEST PUSH3 0x378 DUP2 PUSH3 0x371 DUP5 SLOAD PUSH3 0x2B8 JUMP JUMPDEST DUP5 PUSH3 0x2F2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3AE JUMPI PUSH0 DUP5 ISZERO PUSH3 0x396 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x33B JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3DE JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x3BD JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x3FC JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2A86 DUP1 PUSH3 0x41A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67A52793 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x945098DB GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xC38CD0B5 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xC38CD0B5 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xD03153AA EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x945098DB EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xA738C7DF EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x74A66061 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x74A66061 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x81A06B73 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67A52793 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x464 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A5C792A GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x36A43F2B GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x36A43F2B EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x378A653C EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x3F595E29 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x4D20D0F8 EQ PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A5C792A EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x2C76D7A6 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x3043D4D9 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x117DA1EE GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x117DA1EE EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD06DDD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x201A JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2118 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x2156 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2225 JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x41D SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0xFFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x1011 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x232 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x41D SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2333 JUMP JUMPDEST PUSH2 0x1099 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x14DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH2 0x14EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x1593 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH2 0x15A0 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x3E3 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 ADDRESS SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x8525B9CDD59999A58DA595B9D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6ED PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6F9 DUP6 PUSH2 0x2710 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x756 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x8F1 JUMPI PUSH0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x79D JUMPI PUSH2 0x79D PUSH2 0x256F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP4 POP PUSH2 0x2710 SWAP2 DUP9 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 DUP10 ADD MLOAD DUP10 MLOAD DUP1 MLOAD SWAP4 SWAP5 POP ADDRESS SWAP4 PUSH4 0x74A66061 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP7 SWAP3 SWAP1 SWAP2 CALLER SWAP2 SWAP1 DUP11 SWAP1 DUP2 LT PUSH2 0x867 JUMPI PUSH2 0x867 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8C9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8C6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8D8 DUP2 DUP7 PUSH2 0x2602 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x8E9 SWAP1 PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x77F JUMP JUMPDEST POP PUSH2 0x8FC CALLER DUP8 PUSH2 0x15DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BA JUMPI PUSH1 0xE SLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x919 SWAP1 PUSH2 0xFFFF AND DUP5 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x930 DUP3 DUP5 PUSH2 0x262D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9D1 SWAP1 PUSH2 0x265F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FD SWAP1 PUSH2 0x265F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA48 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA48 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA5F DUP2 DUP6 DUP6 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x21534C5 PUSH1 0xE4 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0xAB8 DUP6 DUP3 DUP6 PUSH2 0x161F JUMP JUMPDEST PUSH2 0xAC3 DUP6 DUP6 DUP6 PUSH2 0x1694 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB38 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xAF1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x573E3 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2162616C616E6365 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH0 PUSH2 0xBC9 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD5 DUP4 PUSH2 0x2710 PUSH2 0x251E JUMP JUMPDEST PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP PUSH2 0xBEB CALLER DUP4 PUSH2 0x15DA JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xD2E JUMPI PUSH0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC0B JUMPI PUSH2 0xC0B PUSH2 0x256F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP4 POP PUSH2 0x2710 SWAP2 DUP7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST PUSH2 0xC9E SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD19 JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xD26 SWAP1 PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD42 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP SWAP2 AND SWAP1 DUP4 JUMP JUMPDEST PUSH2 0xD79 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1A5B9A5D1A585B1A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST DUP5 DUP4 EQ PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4D69736D617463686564206C656E67746873 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xFFFF DUP4 DUP2 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP1 DUP6 AND OR OR SWAP1 SSTORE PUSH0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xF66 JUMPI PUSH2 0x2710 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0x256F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696450657263656E74616765 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0xEA0 JUMPI PUSH2 0xEA0 PUSH2 0x256F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP2 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP11 DUP6 DUP2 DUP2 LT PUSH2 0xED3 JUMPI PUSH2 0xED3 PUSH2 0x256F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEE8 SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0xF08 JUMPI PUSH2 0xF08 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP3 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE PUSH0 SWAP6 DUP7 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP3 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD SSTORE POP DUP1 PUSH2 0xF5E DUP2 PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE28 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0xFA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x743D313030303 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH5 0x100000000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA6413C453391B24B1553EE2908B9FDB9D8528511A0B9983F82D823531CEA38B8 SWAP1 PUSH2 0xFED SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1006 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x100F PUSH0 PUSH2 0x171D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1025 JUMPI PUSH2 0x1025 PUSH2 0x2583 JUMP JUMPDEST SUB PUSH2 0x103D JUMPI PUSH2 0x1036 DUP7 DUP7 DUP6 DUP6 PUSH2 0x176C JUMP JUMPDEST SWAP1 POP PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1051 PUSH2 0x2583 JUMP JUMPDEST SUB PUSH2 0x1062 JUMPI PUSH2 0x1036 DUP7 DUP7 DUP6 DUP6 PUSH2 0x195B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x10AAAB PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD CALLDATALOAD GT PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x213E3 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x10F3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x251E JUMP JUMPDEST PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x110E DUP3 PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x262D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x213E3 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x11D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xAD5C4648 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C6 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST CALLER ADDRESS DUP7 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1B16 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x1255 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xAD5C4648 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x121B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123F SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x125F CALLER DUP3 PUSH2 0x1D0E JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x14D5 JUMPI PUSH0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x127F JUMPI PUSH2 0x127F PUSH2 0x256F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x12AB SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21657468416D6F756E743C3D616D6F756E74666565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14C0 JUMPI DUP2 SLOAD ADDRESS SWAP1 PUSH4 0x74A66061 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x131F PUSH1 0x60 DUP12 ADD PUSH1 0x40 DUP13 ADD PUSH2 0x2713 JUMP JUMPDEST ADDRESS PUSH2 0x132A DUP13 DUP1 PUSH2 0x272E JUMP JUMPDEST DUP11 DUP2 DUP2 LT PUSH2 0x133A JUMPI PUSH2 0x133A PUSH2 0x256F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x134C SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13A7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13A4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14BE JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13C9 SWAP1 DUP5 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP5 DUP7 ADD DUP8 DUP2 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE SWAP7 MLOAD PUSH1 0x3 SWAP1 SWAP8 MUL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F DUP2 ADD DUP1 SLOAD SWAP9 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP10 DUP11 AND OR SWAP1 SSTORE SWAP4 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP6 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP7 AND SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 SWAP1 SWAP2 ADD SSTORE SWAP1 DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x14B4 DUP4 PUSH2 0x2615 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x14C0 JUMP JUMPDEST POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x14CD SWAP1 PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1261 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x9D1 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0x14F2 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0xD SLOAD ISZERO PUSH2 0x1590 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1D1C985B9CD9995C91985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST POP PUSH0 PUSH1 0xD SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA5F DUP2 DUP6 DUP6 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0x1590 DUP2 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1603 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0x160E DUP3 PUSH0 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD2E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x14D5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0x14D5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x16BD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0xD2E DUP4 DUP4 DUP4 PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x17B9 SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x28E2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17FA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x7 SLOAD PUSH2 0x2710 PUSH2 0x1810 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1823 JUMPI PUSH2 0x1823 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1835 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x183F SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE SWAP2 SWAP3 POP DUP10 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1891 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B5 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x18CBAFE5 SWAP1 PUSH2 0x18EE SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP10 SWAP1 DUP14 SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2982 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1909 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1930 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1945 JUMPI PUSH2 0x1945 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xCDCA1753 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xCDCA1753 SWAP1 PUSH2 0x1991 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x29BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D1 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x7 SLOAD PUSH2 0x2710 PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x19F1 SWAP1 DUP5 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA SLOAD SWAP3 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP2 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP11 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 DUP10 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A99 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC04B8D59 SWAP1 PUSH2 0x1ACA SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x29DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B0A SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1B79 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1BB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1BE1 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1BE1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BE1 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1C6E SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1CA7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1CD6 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1CD6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CD6 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D37 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0x160E PUSH0 DUP4 DUP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D68 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D5D SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1DD8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DF4 JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E57 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1E8D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x14D5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F28 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6C PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F9A JUMPI PUSH2 0x1F9A PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1FBA PUSH2 0x1F36 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FEA PUSH2 0x1FE5 DUP3 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x1F72 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1FFE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2047 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2053 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2077 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x205F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2096 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x205D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x20BC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x207F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1590 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20F3 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2111 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2135 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2145 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21A0 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2172 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20BC DUP2 PUSH2 0x20C3 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x21D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x21EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2208 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2220 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x223A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2250 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x225C DUP11 DUP4 DUP12 ADD PUSH2 0x21C8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2281 DUP10 DUP3 DUP11 ADD PUSH2 0x21C8 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x2294 SWAP1 POP PUSH1 0x40 DUP9 ADD PUSH2 0x220F JUMP JUMPDEST SWAP2 POP PUSH2 0x22A2 PUSH1 0x60 DUP9 ADD PUSH2 0x220F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1590 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x22D9 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x22F0 DUP2 PUSH2 0x22AE JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x2300 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x231A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2326 DUP9 DUP3 DUP10 ADD PUSH2 0x1FC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2343 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2358 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x60 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x20BC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x237A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2385 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2395 DUP2 PUSH2 0x20C3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x23CF JUMPI PUSH2 0x23CF PUSH2 0x1F36 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2220 DUP2 PUSH2 0x22AE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x240B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0x60 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x241E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2426 PUSH2 0x1F4A JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x2434 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x2444 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2452 PUSH2 0x1FE5 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP7 ADD SWAP1 DUP7 DUP2 ADD SWAP1 DUP11 DUP4 GT ISZERO PUSH2 0x2470 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24E1 JUMPI DUP1 MLOAD DUP8 DUP2 GT ISZERO PUSH2 0x248B JUMPI PUSH0 DUP1 DUP2 REVERT JUMPDEST DUP6 ADD PUSH1 0x3F DUP2 ADD DUP14 SGT PUSH2 0x249C JUMPI PUSH0 DUP1 DUP2 REVERT JUMPDEST DUP10 DUP2 ADD MLOAD PUSH1 0x40 PUSH2 0x24AE PUSH2 0x1FE5 DUP4 PUSH2 0x1FA2 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP16 DUP3 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x24C2 JUMPI PUSH0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x24D1 DUP4 DUP15 DUP4 ADD DUP5 DUP8 ADD PUSH2 0x205D JUMP JUMPDEST DUP7 MSTORE POP POP POP SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0x2474 JUMP JUMPDEST POP DUP5 MSTORE POP POP POP DUP3 DUP5 ADD MLOAD DUP5 DUP3 ADD MSTORE PUSH2 0x24FB PUSH1 0x40 DUP5 ADD PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0x250A JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x254F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2564 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x20BC DUP2 PUSH2 0x20C3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x25B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x25DA PUSH1 0x40 DUP5 ADD DUP8 PUSH2 0x2597 JUMP JUMPDEST DUP1 DUP6 AND PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x25F7 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x207F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0x250A JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2626 JUMPI PUSH2 0x2626 PUSH2 0x250A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0x250A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2650 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20BC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2673 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2691 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 DUP6 PUSH1 0x60 DUP4 ADD DUP3 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x26D9 JUMPI DUP3 CALLDATALOAD PUSH2 0x26BC DUP2 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26A9 JUMP JUMPDEST POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0x26F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x5 SHL SWAP2 POP DUP2 DUP7 PUSH1 0x20 DUP4 ADD CALLDATACOPY ADD PUSH1 0x20 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2723 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20BC DUP2 PUSH2 0x22AE JUMP JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2743 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x275C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x2208 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2788 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x27A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x2208 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x27D8 PUSH1 0x40 DUP5 ADD DUP9 PUSH2 0x2597 JUMP JUMPDEST DUP1 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0xC0 DUP5 ADD CALLDATACOPY PUSH0 PUSH1 0xC0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2828 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x283D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x284D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x285B PUSH2 0x1FE5 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x2879 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x25F7 JUMPI DUP4 MLOAD PUSH2 0x2891 DUP2 PUSH2 0x20C3 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D7 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x28B2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x28FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x28A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2913 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2928 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2938 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2946 PUSH2 0x1FE5 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x2964 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x25F7 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x2969 JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x29A0 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x29CF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x207F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH1 0xA0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x29F9 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x207F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x2A46 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x205D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB DUP11 0x5C PUSH8 0x4B37DCE16C3645C8 PUSH5 0xC042A2673F 0xCF GASPRICE 0xBA MUL COINBASE GASLIMIT 0xAE 0xCD PUSH6 0xF625B51F7B64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "399:5314:9:-:0;;;615:35;;;-1:-1:-1;;;;615:35:9;;;816:362;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1083:16;1101;1119;1038:5;1045:7;1012:10;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;2143:51:17;2116:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1962:5:2;:13;1970:5;1962;:13;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;855:15:11;:54;;-1:-1:-1;;;;;855:54:11;;;-1:-1:-1;;;;;;855:54:11;;;;;;;919:15;:47;;;;;;;;;;;;;;;-1:-1:-1;976:15:11;:52;;;;;;;;;;;;;1058:4;1038:17;:24;1151:7:9::3;:20:::0;;;;::::3;1161:10;1151:20;::::0;;-1:-1:-1;399:5314:9;;-1:-1:-1;;;;399:5314:9;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:127:17:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:17;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:17;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:17:o;991:177::-;1070:13;;-1:-1:-1;;;;;1112:31:17;;1102:42;;1092:70;;1158:1;1155;1148:12;1092:70;991:177;;;:::o;1173:819::-;1299:6;1307;1315;1323;1331;1384:3;1372:9;1363:7;1359:23;1355:33;1352:53;;;1401:1;1398;1391:12;1352:53;1428:16;;-1:-1:-1;;;;;1493:14:17;;;1490:34;;;1520:1;1517;1510:12;1490:34;1543:61;1596:7;1587:6;1576:9;1572:22;1543:61;:::i;:::-;1533:71;;1650:2;1639:9;1635:18;1629:25;1613:41;;1679:2;1669:8;1666:16;1663:36;;;1695:1;1692;1685:12;1663:36;;1718:63;1773:7;1762:8;1751:9;1747:24;1718:63;:::i;:::-;1708:73;;;1800:49;1845:2;1834:9;1830:18;1800:49;:::i;:::-;1790:59;;1868:49;1913:2;1902:9;1898:18;1868:49;:::i;:::-;1858:59;;1936:50;1981:3;1970:9;1966:19;1936:50;:::i;:::-;1926:60;;1173:819;;;;;;;;:::o;2205:380::-;2284:1;2280:12;;;;2327;;;2348:61;;2402:4;2394:6;2390:17;2380:27;;2348:61;2455:2;2447:6;2444:14;2424:18;2421:38;2418:161;;2501:10;2496:3;2492:20;2489:1;2482:31;2536:4;2533:1;2526:15;2564:4;2561:1;2554:15;2418:161;;2205:380;;;:::o;2716:545::-;2818:2;2813:3;2810:11;2807:448;;;2854:1;2879:5;2875:2;2868:17;2924:4;2920:2;2910:19;2994:2;2982:10;2978:19;2975:1;2971:27;2965:4;2961:38;3030:4;3018:10;3015:20;3012:47;;;-1:-1:-1;3053:4:17;3012:47;3108:2;3103:3;3099:12;3096:1;3092:20;3086:4;3082:31;3072:41;;3163:82;3181:2;3174:5;3171:13;3163:82;;;3226:17;;;3207:1;3196:13;3163:82;;;3167:3;;;2807:448;2716:545;;;:::o;3437:1352::-;3557:10;;-1:-1:-1;;;;;3579:30:17;;3576:56;;;3612:18;;:::i;:::-;3641:97;3731:6;3691:38;3723:4;3717:11;3691:38;:::i;:::-;3685:4;3641:97;:::i;:::-;3793:4;;3857:2;3846:14;;3874:1;3869:663;;;;4576:1;4593:6;4590:89;;;-1:-1:-1;4645:19:17;;;4639:26;4590:89;-1:-1:-1;;3394:1:17;3390:11;;;3386:24;3382:29;3372:40;3418:1;3414:11;;;3369:57;4692:81;;3839:944;;3869:663;2663:1;2656:14;;;2700:4;2687:18;;-1:-1:-1;;3905:20:17;;;4023:236;4037:7;4034:1;4031:14;4023:236;;;4126:19;;;4120:26;4105:42;;4218:27;;;;4186:1;4174:14;;;;4053:19;;4023:236;;;4027:3;4287:6;4278:7;4275:19;4272:201;;;4348:19;;;4342:26;-1:-1:-1;;4431:1:17;4427:14;;;4443:3;4423:24;4419:37;4415:42;4400:58;4385:74;;4272:201;-1:-1:-1;;;;;4519:1:17;4503:14;;;4499:22;4486:36;;-1:-1:-1;3437:1352:17:o;:::-;399:5314:9;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 5650,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 7780,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 5594,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5873,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 7438,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": null,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 5663,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5917,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 5780,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 7486,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": null,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 2642,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": null,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": null,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@depositFee_1246": {
									"entryPoint": null,
									"id": 1246,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_1570": {
									"entryPoint": 4249,
									"id": 1570,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ethDepositedFailed_1253": {
									"entryPoint": null,
									"id": 1253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@failedSwaps_1916": {
									"entryPoint": 3379,
									"id": 1916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAllTokens_1858": {
									"entryPoint": 2766,
									"id": 1858,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialedTokens_1249": {
									"entryPoint": null,
									"id": 1249,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@initializeTokens_1397": {
									"entryPoint": 3441,
									"id": 1397,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 2498,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 4094,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeApprove_1191": {
									"entryPoint": 7187,
									"id": 1191,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1099": {
									"entryPoint": 6934,
									"id": 1099,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setSlippageTolerance_2229": {
									"entryPoint": 2667,
									"id": 2229,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@slippageTolerance_1918": {
									"entryPoint": null,
									"id": 1918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@swapTokenForTokenV2_2095": {
									"entryPoint": 5996,
									"id": 2095,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@swapTokenForTokenV3_2160": {
									"entryPoint": 6491,
									"id": 2160,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@swapTokenForToken_2012": {
									"entryPoint": 4113,
									"id": 2012,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@symbol_354": {
									"entryPoint": 5339,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": null,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2731,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5536,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 5523,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uniswapV2Router_1925": {
									"entryPoint": null,
									"id": 1925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV3Quoter_1931": {
									"entryPoint": null,
									"id": 1931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uniswapV3Router_1928": {
									"entryPoint": null,
									"id": 1928,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userFailedSwaps_1922": {
									"entryPoint": null,
									"id": 1922,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFeesByOwner_1848": {
									"entryPoint": 5354,
									"id": 1848,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawInKind_1817": {
									"entryPoint": 2881,
									"id": 1817,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawToETH_1727": {
									"entryPoint": 1526,
									"id": 1727,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawalFee_1244": {
									"entryPoint": null,
									"id": 1244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 8648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes": {
									"entryPoint": 8136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_enum_Version_fromMemory": {
									"entryPoint": 9177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 9556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_uint16t_uint16": {
									"entryPoint": 8741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 10263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 10498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$877t_uint256t_enum$_Version_$1865t_addresst_bytes_memory_ptr": {
									"entryPoint": 8890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_enum$_Version_$1865": {
									"entryPoint": 10003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_SwapPath_$1900_calldata_ptr": {
									"entryPoint": 9011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_struct$_SwapPath_$1900_memory_ptr_fromMemory": {
									"entryPoint": 9188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_uint16": {
									"entryPoint": 8719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 10400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_enum_Version": {
									"entryPoint": 9623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 8319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_contract$_IERC20_$877_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9879,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_TokenInfo_$1871_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenInfo_$1871_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 10685,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877_t_uint256_t_enum$_Version_$1865_t_address_t_bytes_calldata_ptr__to_t_address_t_uint256_t_uint8_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10165,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$877_t_uint256_t_enum$_Version_$1865_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint8_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9655,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ISwapRouter_$1047__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV2Router02_$2671__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IUniswapV3Quoter_$2692__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_03cd8ddb0f56ae8e724df2ee9750f66f180ef94d04bf0718d8903fc8c8f5f1ec__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b46fc9d5659517d54d1e91f95e643694e5a270c6fbbe576541c1244cf2a3773__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d049238120a0ead2f12b121417834a966421a889b7828d4d078494dc558b5db__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45c812600051f1bbf52d9a900a60b3f44a3af7878f1b088ff787de8ce9ff1548__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63019b35170fc46b0653deddaf6c6d426aea885c2c4cc93a67343c32f6af17a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79e50942b282b0c50e592a4c6bb3d553d7b124a11f03f0e3e532c259348c5ee0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_79e957a474f31b7d225f956dfbdfc2f074a8dc53d0329af3ba3119fb1da596ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c3ba50bb259e05ba80912d6b9c2a543dbf8edeb465a7af7526c9fd468e77eb9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93c0ba99f1a18bcdc81fcbcb6b4f15a9a6725f937075aed6fac107ffcb147068__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d0cd31a152fc6340b4f40e732c591a32b341e7f9a91088685c16c2b9bdfaa7eb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e440fb5c535f127aabfe89bbeeeccc3cd56c363beddc60d926cbf5d8efc7e1c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f4a497c7de4c60310745be8aea0933bf35943d3cb64819d72af166af33d8182a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fba75e6924a64c3df8a8071c74ed6388accffd70fa19b24ac68c01b18965425e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputParams_$991_memory_ptr__to_t_struct$_ExactInputParams_$991_memory_ptr__fromStack_reversed": {
									"entryPoint": 10718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10466,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10626,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"access_calldata_tail_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 10030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"access_calldata_tail_t_bytes_calldata_ptr": {
									"entryPoint": 10099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 8050,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_4293": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_bytes_dyn": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 8098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9823,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 9603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_enum_Version": {
									"entryPoint": 8878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:29361:17",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "192:207:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "202:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "218:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "212:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "212:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "230:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "252:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:4:17",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "248:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:17:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "234:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "342:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "283:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "295:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "280:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "280:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "319:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "331:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "316:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "316:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "277:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "277:62:17"
															},
															"nodeType": "YulIf",
															"src": "274:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "378:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "382:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "371:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "371:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "371:22:17"
														}
													]
												},
												"name": "allocate_memory_4293",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "181:6:17",
														"type": ""
													}
												],
												"src": "146:253:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "449:230:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "459:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "475:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "469:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "469:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "487:58:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "509:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "525:4:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "531:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:13:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "540:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "536:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "536:7:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "517:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "517:27:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "505:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "505:40:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "491:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "620:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "622:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "622:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "622:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "563:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "575:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "560:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "599:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "611:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "596:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "557:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "557:62:17"
															},
															"nodeType": "YulIf",
															"src": "554:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "658:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "662:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "651:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "651:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "651:22:17"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "429:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "438:6:17",
														"type": ""
													}
												],
												"src": "404:275:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:129:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "785:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "787:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "787:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "787:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "757:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "765:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "754:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "754:30:17"
															},
															"nodeType": "YulIf",
															"src": "751:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "816:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "836:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "844:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "832:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "832:15:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "853:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "849:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "849:7:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "828:29:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "859:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:40:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "816:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "721:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "732:4:17",
														"type": ""
													}
												],
												"src": "684:186:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "927:410:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "976:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "985:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "988:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "978:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "978:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "978:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "955:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "963:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "951:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "951:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "970:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "947:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "947:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "940:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "940:35:17"
															},
															"nodeType": "YulIf",
															"src": "937:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1001:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1024:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1011:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1011:20:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1005:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1040:63:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1099:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_bytes",
																			"nodeType": "YulIdentifier",
																			"src": "1071:27:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1071:31:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1055:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1055:48:17"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "1044:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "1119:7:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1128:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1112:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1112:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1112:19:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1179:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1188:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1191:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1181:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1154:6:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1150:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1150:15:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1167:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:26:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1174:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1143:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1143:35:17"
															},
															"nodeType": "YulIf",
															"src": "1140:55:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "1221:7:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1230:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1241:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1249:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1237:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1237:17:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1256:2:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1204:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1204:55:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1204:55:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "1283:7:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "1292:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1279:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1279:16:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1297:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1275:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:27:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1304:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1268:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1268:38:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1315:16:17",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "1324:7:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1315:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "901:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "909:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "917:5:17",
														"type": ""
													}
												],
												"src": "875:462:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1438:292:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1484:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1493:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1496:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1486:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1486:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1486:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1459:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1468:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1455:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1455:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1480:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1451:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1451:32:17"
															},
															"nodeType": "YulIf",
															"src": "1448:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1509:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1532:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1519:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1519:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1509:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1551:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1582:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1593:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1578:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1578:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1565:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1565:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1555:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1640:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1649:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1652:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1642:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1642:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1642:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1612:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1609:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1609:30:17"
															},
															"nodeType": "YulIf",
															"src": "1606:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1665:59:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1696:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1707:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1692:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1692:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1716:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1675:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:49:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1665:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1396:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1407:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1419:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1427:6:17",
														"type": ""
													}
												],
												"src": "1342:388:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1801:184:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1811:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1820:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1815:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1880:63:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1905:3:17"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1910:1:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1901:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1901:11:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1924:3:17"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1929:1:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1920:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1920:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1914:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1914:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1894:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1894:39:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1894:39:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1841:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1844:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1838:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1838:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1852:19:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1854:15:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1863:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1866:2:17",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1859:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1859:10:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1854:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1834:3:17",
																"statements": []
															},
															"src": "1830:113:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1963:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1968:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1959:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1959:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1977:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1952:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:27:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1952:27:17"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1779:3:17",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1784:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1789:6:17",
														"type": ""
													}
												],
												"src": "1735:250:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2040:221:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2050:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2070:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2064:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2064:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2054:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2092:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2097:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2085:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2085:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2085:19:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2152:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2159:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2148:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2148:16:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2170:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2175:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2166:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2166:14:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2182:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2113:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2113:76:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2113:76:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2198:57:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2213:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2226:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2234:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2222:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2222:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2243:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2239:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2239:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2218:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2218:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2209:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2209:39:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2250:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2205:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:50:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2198:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2017:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2024:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2032:3:17",
														"type": ""
													}
												],
												"src": "1990:271:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2387:99:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2404:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2415:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2397:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2397:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2397:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2427:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2453:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2465:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2476:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2461:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2461:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "2435:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2435:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2427:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2356:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2367:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2378:4:17",
														"type": ""
													}
												],
												"src": "2266:220:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2536:86:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2600:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2609:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2612:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2602:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2602:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2602:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2559:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2570:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2585:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2590:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2581:3:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2581:11:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2594:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "2577:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2577:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2566:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2566:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2556:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2556:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:50:17"
															},
															"nodeType": "YulIf",
															"src": "2546:70:17"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2525:5:17",
														"type": ""
													}
												],
												"src": "2491:131:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2714:228:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2760:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2769:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2772:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2762:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2762:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2762:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2735:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2744:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2756:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2727:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2727:32:17"
															},
															"nodeType": "YulIf",
															"src": "2724:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2785:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2811:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2798:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2798:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2789:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2855:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2830:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2830:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2830:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2870:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2880:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2870:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2894:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2921:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2932:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2917:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2917:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2904:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2904:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2894:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2672:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2683:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2695:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2703:6:17",
														"type": ""
													}
												],
												"src": "2627:315:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3042:92:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3052:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3064:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3075:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3060:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3060:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3052:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3094:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3119:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3112:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3112:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3105:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3105:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3087:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3087:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3087:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3011:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3022:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3033:4:17",
														"type": ""
													}
												],
												"src": "2947:187:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3209:110:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3255:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3264:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3267:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3257:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3257:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3257:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3230:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3239:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3226:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3251:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3222:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3222:32:17"
															},
															"nodeType": "YulIf",
															"src": "3219:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3280:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3303:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3290:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3290:23:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3280:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3175:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3186:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3198:6:17",
														"type": ""
													}
												],
												"src": "3139:180:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3452:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3462:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3474:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3485:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3470:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3470:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3462:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3504:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3519:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3535:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3540:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3531:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3531:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3544:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3527:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3527:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3515:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3515:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3497:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$2671__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3421:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3432:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3443:4:17",
														"type": ""
													}
												],
												"src": "3324:230:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3660:76:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3670:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3682:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3693:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3678:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3670:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3712:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3723:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3705:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3705:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3629:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3640:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3651:4:17",
														"type": ""
													}
												],
												"src": "3559:177:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3845:352:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3891:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3900:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3903:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3893:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3893:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3866:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3875:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3862:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3862:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3887:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3858:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3858:32:17"
															},
															"nodeType": "YulIf",
															"src": "3855:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3916:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3942:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3929:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3929:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3920:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3986:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "3961:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3961:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3961:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4001:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4011:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4001:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4025:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4057:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4068:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4053:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4053:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4040:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4040:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "4029:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "4106:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "4081:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4081:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4123:17:17",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "4133:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4123:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4176:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4187:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4172:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4172:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4159:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4159:32:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4149:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3795:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3806:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3818:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3826:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3834:6:17",
														"type": ""
													}
												],
												"src": "3741:456:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4407:613:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4417:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4427:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4421:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4438:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4456:9:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4467:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4452:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4452:18:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "4442:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4486:9:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4497:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4479:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4509:17:17",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "4520:6:17"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "4513:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4535:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4555:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4549:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4549:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4539:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "4578:6:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4586:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4571:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4571:22:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4602:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4612:2:17",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4606:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4623:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4634:9:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4645:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4630:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4630:18:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4623:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4657:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4675:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4683:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4671:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:15:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4661:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4695:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4704:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "4699:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4763:231:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4777:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4793:6:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "4787:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4787:13:17"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "4781:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4820:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "4835:2:17"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "4829:5:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4829:9:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4848:3:17",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4853:1:17",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "4844:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4844:11:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "4857:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "4840:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4840:19:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "4825:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4825:35:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4813:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4813:48:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4813:48:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "4885:3:17"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "4890:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4881:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4881:12:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "4905:2:17"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "4909:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "4901:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4901:11:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4895:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4895:18:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4874:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4874:40:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4874:40:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4927:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "4938:3:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "4943:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4934:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4934:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4927:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4959:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "4973:6:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "4981:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4969:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4969:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4959:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4725:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4728:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4722:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4722:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4736:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4738:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4747:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4750:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4743:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4743:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4738:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4718:3:17",
																"statements": []
															},
															"src": "4714:280:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5003:11:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5011:3:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5003:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_TokenInfo_$1871_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenInfo_$1871_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4376:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4387:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4398:4:17",
														"type": ""
													}
												],
												"src": "4202:818:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5146:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5156:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5168:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5179:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5164:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5164:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5156:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5198:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5213:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5229:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5234:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5225:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5225:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5238:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5221:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5221:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5209:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5209:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5191:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5191:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5191:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ISwapRouter_$1047__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5115:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5126:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5137:4:17",
														"type": ""
													}
												],
												"src": "5025:223:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5350:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5360:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5372:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5383:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5368:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5360:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5402:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5417:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5425:4:17",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5413:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5413:17:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5395:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5395:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5395:36:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5319:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5330:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5341:4:17",
														"type": ""
													}
												],
												"src": "5253:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5512:177:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5558:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5567:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5570:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5560:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5560:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5560:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5533:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5542:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5529:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5529:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5554:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5525:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5525:32:17"
															},
															"nodeType": "YulIf",
															"src": "5522:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5583:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5609:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5596:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5596:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5587:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5653:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5628:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5628:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5628:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5668:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5678:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5668:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5478:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5489:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5501:6:17",
														"type": ""
													}
												],
												"src": "5442:247:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5865:218:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5875:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5887:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5898:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5883:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5875:4:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5910:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5928:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5933:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5924:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5924:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5937:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5920:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5920:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5914:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5955:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5970:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5978:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5966:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5966:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5948:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5948:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5948:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6002:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6013:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5998:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6022:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6030:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6018:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6018:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5991:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5991:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6054:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6065:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6050:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6050:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6070:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6043:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6043:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6043:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_contract$_IERC20_$877_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5818:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5829:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5837:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5845:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5856:4:17",
														"type": ""
													}
												],
												"src": "5694:389:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6172:283:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6221:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6230:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6233:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6223:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6223:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6223:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6200:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6208:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6196:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6196:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6215:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6192:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6185:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6185:35:17"
															},
															"nodeType": "YulIf",
															"src": "6182:55:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6246:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6269:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6256:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6256:20:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6319:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6328:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6331:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6321:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6321:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6321:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6291:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6299:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6288:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6288:30:17"
															},
															"nodeType": "YulIf",
															"src": "6285:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6344:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6360:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6368:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6356:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6356:17:17"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "6344:8:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6433:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6442:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6445:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6435:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6435:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6435:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6396:6:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6408:1:17",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6411:6:17"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6404:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6404:14:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6392:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6392:27:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6421:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6388:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6388:38:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "6428:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6385:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:47:17"
															},
															"nodeType": "YulIf",
															"src": "6382:67:17"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6135:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6143:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "6151:8:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6161:6:17",
														"type": ""
													}
												],
												"src": "6088:367:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6508:111:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6518:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6540:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6527:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6518:5:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6597:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6606:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6609:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6599:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6599:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6599:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6569:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6580:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6587:6:17",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6576:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6576:18:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6566:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6566:29:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6559:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6559:37:17"
															},
															"nodeType": "YulIf",
															"src": "6556:57:17"
														}
													]
												},
												"name": "abi_decode_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6487:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6498:5:17",
														"type": ""
													}
												],
												"src": "6460:159:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6813:729:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6860:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6869:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6872:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6862:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6862:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6862:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6834:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6843:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6830:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6830:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6855:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6826:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6826:33:17"
															},
															"nodeType": "YulIf",
															"src": "6823:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6885:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6912:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6899:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6899:23:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6889:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6931:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6941:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6935:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6986:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6995:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6998:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6988:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6988:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6988:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6974:6:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6982:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6971:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6971:14:17"
															},
															"nodeType": "YulIf",
															"src": "6968:34:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7011:96:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7079:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7090:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7075:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7075:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7099:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "7037:37:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:70:17"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "7015:8:17",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "7025:8:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7116:18:17",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "7126:8:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7116:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7143:18:17",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "7153:8:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7170:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7203:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7214:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7199:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7199:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7186:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:32:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7174:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7247:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7256:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7259:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7249:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7249:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7249:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7233:8:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7243:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7230:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:16:17"
															},
															"nodeType": "YulIf",
															"src": "7227:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7272:98:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7340:9:17"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7351:8:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7336:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7336:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7362:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "7298:37:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:72:17"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "7276:8:17",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "7286:8:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7379:18:17",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "7389:8:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7379:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7406:18:17",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "7416:8:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7406:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7433:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7465:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7476:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7461:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "7443:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7443:37:17"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7489:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7521:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7532:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7517:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7517:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "7499:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7499:37:17"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "7489:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_uint16t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6739:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6750:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6762:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6770:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6778:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6786:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6794:6:17",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "6802:6:17",
														"type": ""
													}
												],
												"src": "6624:918:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7673:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7683:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7695:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7706:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7691:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7691:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7683:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7725:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7740:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7756:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7761:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7752:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7752:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7765:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7748:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7748:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7736:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7736:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7718:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7718:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7718:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IUniswapV3Quoter_$2692__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7642:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7653:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7664:4:17",
														"type": ""
													}
												],
												"src": "7547:228:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7879:89:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7889:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7901:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7912:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7889:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7931:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7946:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7954:6:17",
																				"type": "",
																				"value": "0xffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7942:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7942:19:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7924:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7924:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7924:38:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7848:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7859:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7870:4:17",
														"type": ""
													}
												],
												"src": "7780:188:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8023:56:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8057:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8066:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8069:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8059:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8059:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8059:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8046:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8053:1:17",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8043:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8043:12:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8036:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8036:20:17"
															},
															"nodeType": "YulIf",
															"src": "8033:40:17"
														}
													]
												},
												"name": "validator_revert_enum_Version",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8012:5:17",
														"type": ""
													}
												],
												"src": "7973:106:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8257:665:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8304:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8313:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8316:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8306:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8306:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8306:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8278:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8287:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8274:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8299:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8270:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8270:33:17"
															},
															"nodeType": "YulIf",
															"src": "8267:53:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8329:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8355:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8342:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8342:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "8333:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8399:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8374:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8374:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8374:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8414:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8424:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8414:6:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8438:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8465:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8476:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8461:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8461:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8448:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8448:32:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8438:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8489:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8521:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8532:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8517:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8517:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8504:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8504:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "8493:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "8575:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_enum_Version",
																	"nodeType": "YulIdentifier",
																	"src": "8545:29:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8545:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8545:38:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8592:17:17",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "8602:7:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8592:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8618:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8650:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8661:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8646:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8646:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8633:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:32:17"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "8622:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "8699:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "8674:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8674:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8674:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8716:17:17",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "8726:7:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8716:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8742:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8773:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8784:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8769:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8769:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8756:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8756:33:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8746:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8832:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8841:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8844:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8834:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8834:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8834:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8804:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8812:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8801:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8801:30:17"
															},
															"nodeType": "YulIf",
															"src": "8798:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8857:59:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8888:9:17"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8899:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8884:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8884:22:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8908:7:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8867:16:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8867:49:17"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "8857:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$877t_uint256t_enum$_Version_$1865t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8191:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8202:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8214:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8222:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8230:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8238:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8246:6:17",
														"type": ""
													}
												],
												"src": "8084:838:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9028:102:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9038:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9050:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9061:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9046:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9046:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9038:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9080:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9095:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9111:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9116:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9107:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9107:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9120:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9103:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9103:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9091:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9091:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9073:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9073:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9073:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8997:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9008:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9019:4:17",
														"type": ""
													}
												],
												"src": "8927:203:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9233:289:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9279:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9288:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9291:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9281:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9281:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9281:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9254:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9263:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9250:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9250:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9275:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9246:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9246:32:17"
															},
															"nodeType": "YulIf",
															"src": "9243:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9304:37:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9331:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9318:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9318:23:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "9308:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9384:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9393:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9396:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9386:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9386:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9386:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9356:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9364:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9353:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9353:30:17"
															},
															"nodeType": "YulIf",
															"src": "9350:50:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9409:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9423:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9434:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9419:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9419:22:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9413:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9479:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9488:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9491:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9481:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9481:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9481:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9461:7:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9470:2:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9457:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9457:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9475:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9453:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9453:25:17"
															},
															"nodeType": "YulIf",
															"src": "9450:45:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9504:12:17",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "9514:2:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9504:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_SwapPath_$1900_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9199:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9210:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9222:6:17",
														"type": ""
													}
												],
												"src": "9135:387:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9614:301:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9660:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9669:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9672:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9662:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9662:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9662:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9635:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9644:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9631:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9631:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9656:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9627:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9627:32:17"
															},
															"nodeType": "YulIf",
															"src": "9624:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9685:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9711:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9698:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9698:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9689:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9755:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "9730:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9730:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9730:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9770:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9780:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9770:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9794:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9826:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9837:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9822:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9822:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9809:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9809:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "9798:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "9875:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "9850:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9850:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9850:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9892:17:17",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "9902:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9892:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9572:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9583:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9595:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9603:6:17",
														"type": ""
													}
												],
												"src": "9527:388:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10094:151:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10111:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10122:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10104:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10104:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10104:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10145:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10156:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10141:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10141:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10161:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10134:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10134:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10183:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10194:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10179:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10179:18:17"
																	},
																	{
																		"hexValue": "3e30",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10199:4:17",
																		"type": "",
																		"value": ">0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10172:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10172:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10172:32:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10213:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10225:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10236:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10221:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10221:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10213:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79e957a474f31b7d225f956dfbdfc2f074a8dc53d0329af3ba3119fb1da596ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10071:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10085:4:17",
														"type": ""
													}
												],
												"src": "9920:325:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10331:103:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10377:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10386:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10389:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10379:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10379:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10379:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10352:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10361:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10348:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10348:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10373:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10344:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10344:32:17"
															},
															"nodeType": "YulIf",
															"src": "10341:52:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10402:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10418:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10412:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10412:16:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10402:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10297:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10308:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10320:6:17",
														"type": ""
													}
												],
												"src": "10250:184:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10613:163:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10630:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10641:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10623:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10623:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10623:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10664:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10675:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10660:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10660:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10680:2:17",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10653:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10653:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10653:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10703:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10714:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10699:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10699:18:17"
																	},
																	{
																		"hexValue": "21496e73756666696369656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10719:15:17",
																		"type": "",
																		"value": "!Insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10692:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10692:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10692:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10744:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10756:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10767:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10752:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10752:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10744:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fba75e6924a64c3df8a8071c74ed6388accffd70fa19b24ac68c01b18965425e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10590:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10604:4:17",
														"type": ""
													}
												],
												"src": "10439:337:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10848:114:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10892:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "10894:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10894:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10894:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10864:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10872:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10861:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10861:30:17"
															},
															"nodeType": "YulIf",
															"src": "10858:56:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10923:33:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10939:1:17",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10942:6:17"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10935:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10935:14:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10951:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10931:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "10931:25:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "10923:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_bytes_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10828:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "10839:4:17",
														"type": ""
													}
												],
												"src": "10781:181:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11032:83:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11042:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11057:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11051:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11051:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11042:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11103:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_enum_Version",
																	"nodeType": "YulIdentifier",
																	"src": "11073:29:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11073:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11073:36:17"
														}
													]
												},
												"name": "abi_decode_enum_Version_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11011:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11022:5:17",
														"type": ""
													}
												],
												"src": "10967:148:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11227:1899:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11237:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11247:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11241:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11294:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11303:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11306:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11296:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11296:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11296:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11269:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11278:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11265:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11265:23:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11290:2:17"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11261:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11261:32:17"
															},
															"nodeType": "YulIf",
															"src": "11258:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11319:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11339:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11333:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11333:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "11323:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11358:28:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11368:18:17",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "11362:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11413:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11422:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11425:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11415:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11415:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11415:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11401:6:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11409:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11398:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11398:14:17"
															},
															"nodeType": "YulIf",
															"src": "11395:34:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11438:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11452:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11463:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11448:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:22:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "11442:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11510:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11519:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11522:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11512:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11512:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11512:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11490:7:17"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "11499:2:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11486:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11486:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11504:4:17",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11482:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11482:27:17"
															},
															"nodeType": "YulIf",
															"src": "11479:47:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11535:35:17",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_memory_4293",
																	"nodeType": "YulIdentifier",
																	"src": "11548:20:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11548:22:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11539:5:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11579:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "11601:2:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11595:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11595:9:17"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "11583:8:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11633:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11642:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11645:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11635:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11635:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11635:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "11619:8:17"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "11629:2:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11616:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11616:16:17"
															},
															"nodeType": "YulIf",
															"src": "11613:36:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11658:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "11672:2:17"
																	},
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "11676:8:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11668:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11668:17:17"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "11662:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11733:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11742:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11745:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11735:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11735:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11735:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "11712:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11716:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11708:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11708:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11723:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "11704:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11704:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11697:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11697:35:17"
															},
															"nodeType": "YulIf",
															"src": "11694:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11758:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "11774:2:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11768:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11768:9:17"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "11762:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11786:69:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "11851:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_bytes_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "11813:37:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11813:41:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "11797:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11797:58:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "11790:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11864:16:17",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "11877:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "11868:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11896:3:17"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "11901:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11889:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11889:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11889:15:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11913:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "11924:3:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11929:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11920:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11920:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "11913:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11941:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "11963:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11971:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "11974:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "11967:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11967:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11959:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11959:19:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11980:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11955:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:28:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "11945:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12015:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12024:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12027:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12017:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12017:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12017:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11998:6:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12006:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11995:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:19:17"
															},
															"nodeType": "YulIf",
															"src": "11992:39:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12040:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "12055:2:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12059:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12051:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12051:11:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "12044:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12127:809:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12141:29:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12166:3:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12160:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12160:10:17"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "12145:11:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12218:74:17",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "12236:11:17",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12246:1:17",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_6",
																							"nodeType": "YulTypedName",
																							"src": "12240:2:17",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_6",
																								"nodeType": "YulIdentifier",
																								"src": "12271:2:17"
																							},
																							{
																								"name": "_6",
																								"nodeType": "YulIdentifier",
																								"src": "12275:2:17"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "12264:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12264:14:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12264:14:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "12189:11:17"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "12202:2:17"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "12186:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12186:19:17"
																		},
																		"nodeType": "YulIf",
																		"src": "12183:109:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12305:30:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "12319:2:17"
																				},
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "12323:11:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12315:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12315:20:17"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "12309:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12397:74:17",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "12415:11:17",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12425:1:17",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_8",
																							"nodeType": "YulTypedName",
																							"src": "12419:2:17",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_8",
																								"nodeType": "YulIdentifier",
																								"src": "12450:2:17"
																							},
																							{
																								"name": "_8",
																								"nodeType": "YulIdentifier",
																								"src": "12454:2:17"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "12443:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12443:14:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12443:14:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_7",
																									"nodeType": "YulIdentifier",
																									"src": "12366:2:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12370:2:17",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12362:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12362:11:17"
																						},
																						{
																							"name": "dataEnd",
																							"nodeType": "YulIdentifier",
																							"src": "12375:7:17"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "12358:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12358:25:17"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "12351:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12351:33:17"
																		},
																		"nodeType": "YulIf",
																		"src": "12348:123:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12484:28:17",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "12504:2:17"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "12508:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12500:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12500:11:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "12494:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12494:18:17"
																		},
																		"variables": [
																			{
																				"name": "_9",
																				"nodeType": "YulTypedName",
																				"src": "12488:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12525:13:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "12536:2:17",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_10",
																				"nodeType": "YulTypedName",
																				"src": "12529:3:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12551:61:17",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_9",
																							"nodeType": "YulIdentifier",
																							"src": "12608:2:17"
																						}
																					],
																					"functionName": {
																						"name": "array_allocation_size_bytes",
																						"nodeType": "YulIdentifier",
																						"src": "12580:27:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12580:31:17"
																				}
																			],
																			"functionName": {
																				"name": "allocate_memory",
																				"nodeType": "YulIdentifier",
																				"src": "12564:15:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12564:48:17"
																		},
																		"variables": [
																			{
																				"name": "array",
																				"nodeType": "YulTypedName",
																				"src": "12555:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "12632:5:17"
																				},
																				{
																					"name": "_9",
																					"nodeType": "YulIdentifier",
																					"src": "12639:2:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12625:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12625:17:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12625:17:17"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12705:77:17",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "12723:12:17",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12734:1:17",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_11",
																							"nodeType": "YulTypedName",
																							"src": "12727:3:17",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_11",
																								"nodeType": "YulIdentifier",
																								"src": "12759:3:17"
																							},
																							{
																								"name": "_11",
																								"nodeType": "YulIdentifier",
																								"src": "12764:3:17"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "12752:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12752:16:17"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12752:16:17"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_7",
																									"nodeType": "YulIdentifier",
																									"src": "12669:2:17"
																								},
																								{
																									"name": "_9",
																									"nodeType": "YulIdentifier",
																									"src": "12673:2:17"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12665:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12665:11:17"
																						},
																						{
																							"name": "_10",
																							"nodeType": "YulIdentifier",
																							"src": "12678:3:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12661:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12661:21:17"
																				},
																				{
																					"name": "dataEnd",
																					"nodeType": "YulIdentifier",
																					"src": "12684:7:17"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "12658:2:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12658:34:17"
																		},
																		"nodeType": "YulIf",
																		"src": "12655:127:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "12834:2:17"
																						},
																						{
																							"name": "_10",
																							"nodeType": "YulIdentifier",
																							"src": "12838:3:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12830:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12830:12:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "array",
																							"nodeType": "YulIdentifier",
																							"src": "12848:5:17"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "12855:2:17"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12844:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12844:14:17"
																				},
																				{
																					"name": "_9",
																					"nodeType": "YulIdentifier",
																					"src": "12860:2:17"
																				}
																			],
																			"functionName": {
																				"name": "copy_memory_to_memory_with_cleanup",
																				"nodeType": "YulIdentifier",
																				"src": "12795:34:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12795:68:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12795:68:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12883:3:17"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "12888:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12876:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12876:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12876:18:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12907:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "12918:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12923:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12914:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12914:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "12907:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "12082:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12087:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12079:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12079:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12095:23:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12097:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "12108:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12113:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12104:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12104:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "12097:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12075:3:17",
																"statements": []
															},
															"src": "12071:865:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12952:5:17"
																	},
																	{
																		"name": "dst_1",
																		"nodeType": "YulIdentifier",
																		"src": "12959:5:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12945:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12945:20:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12945:20:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12985:5:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12992:2:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12981:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12981:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "13007:2:17"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "13011:2:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13003:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13003:11:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12997:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12997:18:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12974:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "12974:42:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12974:42:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13036:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13043:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13032:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13032:14:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "13087:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13091:2:17",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13083:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13083:11:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_enum_Version_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "13048:34:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13048:47:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13025:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13025:71:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13025:71:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13105:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13115:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13105:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_SwapPath_$1900_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11193:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11204:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11216:6:17",
														"type": ""
													}
												],
												"src": "11120:2006:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13163:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13180:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13187:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13192:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13183:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13183:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13173:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13173:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13173:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13220:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13223:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13213:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13213:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13244:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13247:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13237:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13237:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13237:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13131:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13315:116:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13325:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13340:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13343:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "13336:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13336:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "13325:7:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13403:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13405:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13405:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13405:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13374:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "13367:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13367:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13381:1:17"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "13388:7:17"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "13397:1:17"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "13384:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13384:15:17"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "13378:2:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13378:22:17"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "13364:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13364:37:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13357:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13357:45:17"
															},
															"nodeType": "YulIf",
															"src": "13354:71:17"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13294:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13297:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "13303:7:17",
														"type": ""
													}
												],
												"src": "13263:168:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13482:171:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13513:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13534:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13541:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13546:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "13537:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13537:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13527:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13527:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13527:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13578:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13581:4:17",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13571:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13571:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13571:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13606:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13609:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13599:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13599:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13599:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13502:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13495:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13495:9:17"
															},
															"nodeType": "YulIf",
															"src": "13492:132:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13633:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13642:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13645:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "13638:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13638:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13633:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13467:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13470:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13476:1:17",
														"type": ""
													}
												],
												"src": "13436:217:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13739:170:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13785:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13794:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13797:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13787:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13787:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13787:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13760:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13769:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13756:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13756:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13781:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13752:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13752:32:17"
															},
															"nodeType": "YulIf",
															"src": "13749:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13810:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13829:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13823:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13823:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13814:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13873:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "13848:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13848:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13848:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13888:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13898:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13888:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13705:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13716:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13728:6:17",
														"type": ""
													}
												],
												"src": "13658:251:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13946:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13963:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13970:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13975:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13966:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13966:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13956:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13956:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13956:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14003:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14006:4:17",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13996:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "13996:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13996:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14027:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14030:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14020:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14020:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14020:15:17"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "13914:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14078:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14095:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14102:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14107:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14098:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14098:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14088:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14088:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14088:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14135:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14138:4:17",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14128:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14128:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14128:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14159:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14162:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14152:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14152:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14152:15:17"
														}
													]
												},
												"name": "panic_error_0x21",
												"nodeType": "YulFunctionDefinition",
												"src": "14046:127:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14227:186:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14269:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14290:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14297:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14302:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "14293:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14293:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14283:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14283:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14283:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14334:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14337:4:17",
																					"type": "",
																					"value": "0x21"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14327:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14327:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14327:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14362:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14365:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14355:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14355:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14355:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14250:5:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14257:1:17",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "14247:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14247:12:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14240:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14240:20:17"
															},
															"nodeType": "YulIf",
															"src": "14237:143:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14396:3:17"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14401:5:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14389:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14389:18:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14389:18:17"
														}
													]
												},
												"name": "abi_encode_enum_Version",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14211:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14218:3:17",
														"type": ""
													}
												],
												"src": "14178:235:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14673:347:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14683:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14701:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14706:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14697:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14697:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14710:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14693:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14693:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14687:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14728:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14743:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14751:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14739:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14739:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14721:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14721:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14721:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14775:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14786:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14771:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14771:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14791:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14764:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14764:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14764:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14831:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14843:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14854:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14839:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14839:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_Version",
																	"nodeType": "YulIdentifier",
																	"src": "14807:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14807:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14807:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14878:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14889:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14874:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14874:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "14898:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14906:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14894:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14894:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14867:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14867:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14867:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14930:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14941:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14926:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14926:19:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14947:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14919:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14919:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14919:32:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14960:54:17",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14986:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14998:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15009:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14994:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14994:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "14968:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "14968:46:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14960:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877_t_uint256_t_enum$_Version_$1865_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint8_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14610:9:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14621:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14629:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14637:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14645:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14653:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14664:4:17",
														"type": ""
													}
												],
												"src": "14418:602:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15073:77:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15083:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15094:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15097:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15090:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15090:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "15083:3:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15122:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15124:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15124:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15124:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15114:1:17"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "15117:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15111:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15111:10:17"
															},
															"nodeType": "YulIf",
															"src": "15108:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15056:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15059:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "15065:3:17",
														"type": ""
													}
												],
												"src": "15025:125:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15202:88:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15233:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15235:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15235:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15235:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15218:5:17"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15229:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "15225:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15225:6:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "15215:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15215:17:17"
															},
															"nodeType": "YulIf",
															"src": "15212:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15264:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "15275:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15282:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15271:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15271:13:17"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "15264:3:17"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "15184:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "15194:3:17",
														"type": ""
													}
												],
												"src": "15155:135:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15344:79:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15354:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15366:1:17"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15369:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15362:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15362:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "15354:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15395:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15397:16:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15397:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15397:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "15386:4:17"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15392:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15383:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15383:11:17"
															},
															"nodeType": "YulIf",
															"src": "15380:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15326:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15329:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "15335:4:17",
														"type": ""
													}
												],
												"src": "15295:128:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15557:145:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15567:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15579:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15590:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15575:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15575:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15567:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15609:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15624:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15640:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15645:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "15636:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15636:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15649:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "15632:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15632:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15620:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15620:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15602:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15602:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15602:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15673:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15684:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15669:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15669:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15689:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15662:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15662:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15662:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15518:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15529:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15537:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15548:4:17",
														"type": ""
													}
												],
												"src": "15428:274:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15785:199:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15831:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15840:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15843:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15833:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15833:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15833:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "15806:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15815:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15802:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15802:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15827:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "15798:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15798:32:17"
															},
															"nodeType": "YulIf",
															"src": "15795:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15856:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15875:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15869:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15869:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "15860:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15938:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15947:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15950:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15940:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15940:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15940:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "15907:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "15928:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "15921:6:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15921:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15914:6:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15914:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15904:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15904:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15897:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "15897:40:17"
															},
															"nodeType": "YulIf",
															"src": "15894:60:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15963:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "15973:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "15963:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15751:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "15762:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15774:6:17",
														"type": ""
													}
												],
												"src": "15707:277:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16044:325:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16054:22:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16068:1:17",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16071:4:17"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "16064:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16064:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16054:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16085:38:17",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "16115:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16121:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "16111:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16111:12:17"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "16089:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16162:31:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "16164:27:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "16178:6:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16186:4:17",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "16174:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16174:17:17"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16164:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16142:18:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16135:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16135:26:17"
															},
															"nodeType": "YulIf",
															"src": "16132:61:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16252:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16273:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16280:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "16285:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "16276:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16276:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16266:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16266:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16266:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16317:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16320:4:17",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "16310:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16310:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16310:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16345:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16348:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16338:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16338:15:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16338:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "16208:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16231:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16239:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16228:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16228:14:17"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "16205:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16205:38:17"
															},
															"nodeType": "YulIf",
															"src": "16202:161:17"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "16024:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16033:6:17",
														"type": ""
													}
												],
												"src": "15989:380:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16548:153:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16565:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16576:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16558:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16558:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16558:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16599:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16610:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16595:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16595:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16615:1:17",
																		"type": "",
																		"value": "4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16588:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16588:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16588:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16637:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16648:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16633:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16633:18:17"
																	},
																	{
																		"hexValue": "21534c50",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16653:6:17",
																		"type": "",
																		"value": "!SLP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16626:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16626:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16626:34:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16669:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16681:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16692:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16677:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16677:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16669:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79e50942b282b0c50e592a4c6bb3d553d7b124a11f03f0e3e532c259348c5ee0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16525:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16539:4:17",
														"type": ""
													}
												],
												"src": "16374:327:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16880:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16897:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16908:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16890:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16890:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16890:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16931:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16942:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16927:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16927:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16947:1:17",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16920:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16920:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16920:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16969:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16980:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16965:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16965:18:17"
																	},
																	{
																		"hexValue": "573e30",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16985:5:17",
																		"type": "",
																		"value": "W>0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16958:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "16958:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16958:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17000:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17012:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17023:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17008:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17008:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17000:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c3ba50bb259e05ba80912d6b9c2a543dbf8edeb465a7af7526c9fd468e77eb9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16857:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16871:4:17",
														"type": ""
													}
												],
												"src": "16706:326:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17211:157:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17228:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17239:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17221:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17221:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17221:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17262:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17273:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17258:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17258:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17278:1:17",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17251:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17251:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17251:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17300:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17311:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17296:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17296:18:17"
																	},
																	{
																		"hexValue": "2162616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17316:10:17",
																		"type": "",
																		"value": "!balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17289:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17289:38:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17289:38:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17336:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17348:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17359:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17344:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17344:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17336:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d049238120a0ead2f12b121417834a966421a889b7828d4d078494dc558b5db__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17188:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17202:4:17",
														"type": ""
													}
												],
												"src": "17037:331:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17547:161:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17564:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17575:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17557:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17557:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17557:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17598:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17609:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17594:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17594:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17614:2:17",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17587:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17587:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17587:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17637:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17648:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17633:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17633:18:17"
																	},
																	{
																		"hexValue": "696e697469616c697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17653:13:17",
																		"type": "",
																		"value": "initialized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17626:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17626:41:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17626:41:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17676:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17688:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17699:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17684:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17684:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17676:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93c0ba99f1a18bcdc81fcbcb6b4f15a9a6725f937075aed6fac107ffcb147068__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17524:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17538:4:17",
														"type": ""
													}
												],
												"src": "17373:335:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17887:168:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17904:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17915:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17897:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17897:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17897:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17938:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17949:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17934:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17934:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17954:2:17",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17927:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17927:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17927:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17977:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17988:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17973:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17973:18:17"
																	},
																	{
																		"hexValue": "4d69736d617463686564206c656e67746873",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17993:20:17",
																		"type": "",
																		"value": "Mismatched lengths"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17966:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "17966:48:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17966:48:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18023:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18035:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18046:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18031:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18031:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18023:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d0cd31a152fc6340b4f40e732c591a32b341e7f9a91088685c16c2b9bdfaa7eb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17864:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17878:4:17",
														"type": ""
													}
												],
												"src": "17713:342:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18234:167:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18251:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18262:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18244:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18244:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18244:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18285:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18296:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18281:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18281:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18301:2:17",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18274:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18274:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18274:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18324:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18335:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18320:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18320:18:17"
																	},
																	{
																		"hexValue": "496e76616c696450657263656e74616765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18340:19:17",
																		"type": "",
																		"value": "InvalidPercentage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18313:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18313:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18313:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18369:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18381:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18392:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18377:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18377:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18369:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e440fb5c535f127aabfe89bbeeeccc3cd56c363beddc60d926cbf5d8efc7e1c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18211:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18225:4:17",
														"type": ""
													}
												],
												"src": "18060:341:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18580:156:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18597:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18608:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18590:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18590:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18590:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18631:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18642:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18627:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18627:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18647:1:17",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18620:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18620:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18620:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18669:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18680:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18665:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18665:18:17"
																	},
																	{
																		"hexValue": "743d3130303030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18685:9:17",
																		"type": "",
																		"value": "t=10000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18658:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18658:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18658:37:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18704:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18716:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18727:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18712:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "18712:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18704:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f4a497c7de4c60310745be8aea0933bf35943d3cb64819d72af166af33d8182a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18557:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18571:4:17",
														"type": ""
													}
												],
												"src": "18406:330:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18990:810:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19000:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19018:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19029:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19014:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19014:18:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "19004:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19048:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19059:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19041:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19041:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19041:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19071:17:17",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "19082:6:17"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "19075:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "19104:6:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19112:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19097:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19097:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19097:22:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19128:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19139:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19150:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19135:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19135:18:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19128:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19162:20:17",
															"value": {
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "19176:6:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "19166:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19191:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19200:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "19195:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19259:255:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19273:33:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "19299:6:17"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "19286:12:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19286:20:17"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "19277:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "19344:5:17"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "19319:24:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19319:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19319:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "19370:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nodeType": "YulIdentifier",
																							"src": "19379:5:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "19394:3:17",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "19399:1:17",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "19390:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "19390:11:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "19403:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "19386:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "19386:19:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "19375:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "19375:31:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "19363:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19363:44:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19363:44:17"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "19420:14:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "19430:4:17",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "19424:2:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "19447:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "19458:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "19463:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19454:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19454:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "19447:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "19479:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "19493:6:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "19501:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19489:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19489:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19479:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "19221:1:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19224:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19218:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19218:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "19232:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "19234:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "19243:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19246:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "19239:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19239:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "19234:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "19214:3:17",
																"statements": []
															},
															"src": "19210:304:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19534:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19545:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19530:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19530:20:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "19556:3:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19561:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19552:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19552:19:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19523:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19523:49:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19523:49:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19588:3:17"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "19593:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19581:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19581:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19581:19:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19644:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19653:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19656:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19646:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19646:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19646:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "19615:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19631:3:17",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19636:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "19627:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19627:11:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19640:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19623:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19623:19:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19612:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19612:31:17"
															},
															"nodeType": "YulIf",
															"src": "19609:51:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19669:28:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19687:1:17",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "19690:6:17"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "19683:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19683:14:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19673:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "19723:3:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19728:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19719:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19719:14:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19735:6:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19743:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "19706:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19706:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19706:44:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19759:35:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "19775:3:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19780:6:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19771:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19771:16:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19789:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19767:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19767:27:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19759:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18935:9:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18946:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18954:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18962:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18970:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18981:4:17",
														"type": ""
													}
												],
												"src": "18741:1059:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19979:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19996:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20007:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19989:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "19989:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19989:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20030:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20041:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20026:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20026:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20046:1:17",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20019:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20019:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20019:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20068:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20079:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20064:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20064:18:17"
																	},
																	{
																		"hexValue": "215556",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20084:5:17",
																		"type": "",
																		"value": "!UV"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20057:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20057:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20057:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20099:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20111:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20122:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20107:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20107:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20099:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_03cd8ddb0f56ae8e724df2ee9750f66f180ef94d04bf0718d8903fc8c8f5f1ec__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19956:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19970:4:17",
														"type": ""
													}
												],
												"src": "19805:326:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20310:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20327:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20338:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20320:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20320:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20320:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20361:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20372:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20357:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20357:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20377:1:17",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20350:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20350:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20350:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20399:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20410:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20395:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20395:18:17"
																	},
																	{
																		"hexValue": "213e30",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20415:5:17",
																		"type": "",
																		"value": "!>0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20388:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20388:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20388:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20430:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20442:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20453:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20438:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20438:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20430:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45c812600051f1bbf52d9a900a60b3f44a3af7878f1b088ff787de8ce9ff1548__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20287:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20301:4:17",
														"type": ""
													}
												],
												"src": "20136:326:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20641:171:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20658:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20669:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20651:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20651:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20651:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20692:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20703:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20688:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20688:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20708:2:17",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20681:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20681:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20681:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20731:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20742:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20727:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20727:18:17"
																	},
																	{
																		"hexValue": "21657468416d6f756e743c3d616d6f756e74666565",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20747:23:17",
																		"type": "",
																		"value": "!ethAmount<=amountfee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20720:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20720:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20720:51:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20780:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20792:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20803:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20788:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20788:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20780:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b46fc9d5659517d54d1e91f95e643694e5a270c6fbbe576541c1244cf2a3773__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20618:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20632:4:17",
														"type": ""
													}
												],
												"src": "20467:345:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20899:182:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20945:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20954:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20957:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20947:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20947:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20947:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20920:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20929:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20916:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20916:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20941:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20912:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20912:32:17"
															},
															"nodeType": "YulIf",
															"src": "20909:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20970:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20996:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "20983:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "20983:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "20974:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21045:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_enum_Version",
																	"nodeType": "YulIdentifier",
																	"src": "21015:29:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21015:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21015:36:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21060:15:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "21070:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "21060:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_enum$_Version_$1865",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20865:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20876:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20888:6:17",
														"type": ""
													}
												],
												"src": "20817:264:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21207:435:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21217:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "21256:11:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "21243:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21243:25:17"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "21221:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21357:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21366:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21369:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21359:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21359:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21359:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "21291:18:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "21319:12:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21319:14:17"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "21335:8:17"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "21315:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21315:29:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21350:2:17",
																								"type": "",
																								"value": "30"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "21346:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21346:7:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21311:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21311:43:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "21287:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21287:68:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21280:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21280:76:17"
															},
															"nodeType": "YulIf",
															"src": "21277:96:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21382:47:17",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "21400:8:17"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "21410:18:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21396:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21396:33:17"
															},
															"variables": [
																{
																	"name": "addr_1",
																	"nodeType": "YulTypedName",
																	"src": "21386:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21438:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "21461:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "21448:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21448:20:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21438:6:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21511:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21520:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21523:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21513:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21513:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21513:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21483:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21491:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21480:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21480:30:17"
															},
															"nodeType": "YulIf",
															"src": "21477:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21536:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "21548:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21556:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21544:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21544:17:17"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "21536:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21620:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21629:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21632:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21622:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21622:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21622:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "21577:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "21587:12:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21587:14:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "21607:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "21610:6:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "21603:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21603:14:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21583:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21583:35:17"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "21573:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21573:46:17"
															},
															"nodeType": "YulIf",
															"src": "21570:66:17"
														}
													]
												},
												"name": "access_calldata_tail_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "21164:8:17",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "21174:11:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "21190:4:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21196:6:17",
														"type": ""
													}
												],
												"src": "21086:556:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21741:427:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21751:51:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "21790:11:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "21777:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21777:25:17"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "21755:18:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21891:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21900:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21903:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21893:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21893:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21893:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "21825:18:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "21853:12:17"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "21853:14:17"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "21869:8:17"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "21849:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21849:29:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "21884:2:17",
																								"type": "",
																								"value": "30"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "21880:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21880:7:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21845:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21845:43:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "21821:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21821:68:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21814:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21814:76:17"
															},
															"nodeType": "YulIf",
															"src": "21811:96:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21916:47:17",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "21934:8:17"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "21944:18:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21930:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21930:33:17"
															},
															"variables": [
																{
																	"name": "addr_1",
																	"nodeType": "YulTypedName",
																	"src": "21920:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21972:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "21995:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "21982:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "21982:20:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "21972:6:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22045:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22054:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22057:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22047:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22047:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22047:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22017:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22025:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22014:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22014:30:17"
															},
															"nodeType": "YulIf",
															"src": "22011:50:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22070:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "22082:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22090:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22078:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22078:17:17"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "22070:4:17"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22146:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22155:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22158:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "22148:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22148:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22148:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "22111:4:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "22121:12:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22121:14:17"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "22137:6:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22117:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22117:27:17"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "22107:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22107:38:17"
															},
															"nodeType": "YulIf",
															"src": "22104:58:17"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "21698:8:17",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "21708:11:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "21724:4:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "21730:6:17",
														"type": ""
													}
												],
												"src": "21647:521:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22438:510:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22448:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22466:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22471:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "22462:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22462:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22475:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22458:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22458:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "22452:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22493:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "22508:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "22516:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22504:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22504:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22486:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22486:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22486:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22540:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22551:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22536:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22536:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22556:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22529:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22529:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22529:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22596:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22608:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22619:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22604:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22604:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_enum_Version",
																	"nodeType": "YulIdentifier",
																	"src": "22572:23:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22572:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22572:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22643:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22654:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22639:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22639:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "22663:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "22671:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22659:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22659:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22632:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22632:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22632:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22695:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22706:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22691:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22691:19:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22712:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22684:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22684:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22684:32:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22736:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22747:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22732:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22732:19:17"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "22753:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22725:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22725:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22725:35:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22786:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22797:3:17",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22782:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22782:19:17"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "22803:6:17"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "22811:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "22769:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22769:49:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22769:49:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "22842:9:17"
																					},
																					{
																						"name": "value5",
																						"nodeType": "YulIdentifier",
																						"src": "22853:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "22838:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22838:22:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22862:3:17",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22834:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22834:32:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22868:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22827:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22827:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22827:43:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22879:63:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22895:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value5",
																								"nodeType": "YulIdentifier",
																								"src": "22914:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "22922:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "22910:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22910:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "22931:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "22927:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "22927:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "22906:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22906:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22891:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22891:45:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22938:3:17",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22887:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "22887:55:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22879:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$877_t_uint256_t_enum$_Version_$1865_t_address_t_bytes_calldata_ptr__to_t_address_t_uint256_t_uint8_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22367:9:17",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "22378:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "22386:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22394:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22402:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22410:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22418:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22429:4:17",
														"type": ""
													}
												],
												"src": "22173:775:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23144:14:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23146:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23153:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23146:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23128:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23136:3:17",
														"type": ""
													}
												],
												"src": "22953:205:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23337:164:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23354:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23365:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23347:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23347:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23347:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23388:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23399:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23384:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23384:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23404:2:17",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23377:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23377:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23377:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23427:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23438:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23423:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23423:18:17"
																	},
																	{
																		"hexValue": "7472616e736665724661696c6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23443:16:17",
																		"type": "",
																		"value": "transferFailed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23416:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23416:44:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23416:44:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23469:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23481:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23492:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23477:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23477:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23469:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63019b35170fc46b0653deddaf6c6d426aea885c2c4cc93a67343c32f6af17a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23314:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23328:4:17",
														"type": ""
													}
												],
												"src": "23163:338:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23663:188:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23673:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23685:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23696:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23681:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23681:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23673:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23715:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "23730:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23746:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "23751:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "23742:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "23742:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23755:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "23738:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23738:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23726:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23726:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23708:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23708:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23708:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23779:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23790:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23775:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23775:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23795:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23768:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23768:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23768:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23822:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23833:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23818:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23818:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23838:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23811:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23811:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23811:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23616:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23627:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23635:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23643:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23654:4:17",
														"type": ""
													}
												],
												"src": "23506:345:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23962:848:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23972:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "23982:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "23976:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24029:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24038:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24041:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24031:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24031:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24031:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24004:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24013:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24000:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24000:23:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "24025:2:17"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "23996:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "23996:32:17"
															},
															"nodeType": "YulIf",
															"src": "23993:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24054:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24074:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24068:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24068:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "24058:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24127:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24136:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24139:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24129:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24129:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24129:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24099:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24107:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24096:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24096:30:17"
															},
															"nodeType": "YulIf",
															"src": "24093:50:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24152:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24166:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "24177:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24162:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24162:22:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "24156:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24232:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24241:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24244:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24234:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24234:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24234:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "24211:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24215:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24207:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24207:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24222:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "24203:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24203:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "24196:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24196:35:17"
															},
															"nodeType": "YulIf",
															"src": "24193:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24257:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "24273:2:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24267:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24267:9:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "24261:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24285:69:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "24350:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_bytes_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "24312:37:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24312:41:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "24296:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24296:58:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "24289:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24363:16:17",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "24376:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "24367:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "24395:3:17"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "24400:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24388:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24388:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24388:15:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24412:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "24423:3:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "24428:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24419:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24419:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "24412:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24440:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "24462:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24470:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "24473:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "24466:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24466:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24458:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24458:19:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "24479:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24454:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24454:28:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "24444:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24514:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24523:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "24526:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "24516:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24516:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24516:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "24497:6:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "24505:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24494:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24494:19:17"
															},
															"nodeType": "YulIf",
															"src": "24491:39:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24539:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "24554:2:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "24558:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24550:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24550:11:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "24543:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24626:154:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "24640:23:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "24659:3:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "24653:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24653:10:17"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "24644:5:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "24701:5:17"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "24676:24:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24676:31:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24676:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "24727:3:17"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "24732:5:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "24720:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24720:18:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24720:18:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "24751:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "24762:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "24767:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24758:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24758:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "24751:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "24581:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "24586:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "24578:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24578:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "24594:23:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "24596:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "24607:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "24612:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "24603:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24603:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "24596:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "24574:3:17",
																"statements": []
															},
															"src": "24570:210:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24789:15:17",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "24799:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "24789:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23928:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "23939:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23951:6:17",
														"type": ""
													}
												],
												"src": "23856:954:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24876:400:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24886:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24906:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24900:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24900:12:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "24890:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24928:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24933:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24921:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24921:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24921:19:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "24949:14:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "24959:4:17",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "24953:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24972:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24983:3:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "24988:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24979:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "24979:12:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24972:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25000:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25018:5:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "25025:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25014:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25014:14:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "25004:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25037:10:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25046:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "25041:1:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25105:146:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "25126:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "25141:6:17"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "25135:5:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25135:13:17"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "25158:3:17",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "25163:1:17",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "25154:3:17"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "25154:11:17"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "25167:1:17",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "25150:3:17"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "25150:19:17"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "25131:3:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "25131:39:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "25119:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25119:52:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25119:52:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "25184:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "25195:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "25200:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25191:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25191:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25184:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "25216:25:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "25230:6:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "25238:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25226:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25226:15:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25216:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "25067:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25070:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "25064:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25064:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "25078:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "25080:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "25089:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25092:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "25085:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25085:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "25080:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "25060:3:17",
																"statements": []
															},
															"src": "25056:195:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25260:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "25267:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25260:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24853:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24860:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24868:3:17",
														"type": ""
													}
												],
												"src": "24815:461:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25460:153:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25477:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25488:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25470:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25470:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25470:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25515:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25526:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25511:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25511:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25531:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25504:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25504:30:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25504:30:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25543:64:17",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25580:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25592:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25603:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25588:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25588:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "25551:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25551:56:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25543:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25421:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25432:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25440:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25451:4:17",
														"type": ""
													}
												],
												"src": "25281:332:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25724:773:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25734:12:17",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "25744:2:17",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "25738:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25791:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25800:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25803:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25793:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25793:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25793:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25766:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25775:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25762:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25762:23:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "25787:2:17"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "25758:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25758:32:17"
															},
															"nodeType": "YulIf",
															"src": "25755:52:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25816:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25836:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25830:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25830:16:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "25820:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25889:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25898:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25901:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25891:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25891:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25891:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "25861:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25869:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "25858:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25858:30:17"
															},
															"nodeType": "YulIf",
															"src": "25855:50:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25914:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25928:9:17"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "25939:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25924:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25924:22:17"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "25918:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25994:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26003:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26006:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25996:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25996:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25996:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "25973:2:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "25977:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "25969:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25969:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25984:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "25965:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25965:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "25958:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "25958:35:17"
															},
															"nodeType": "YulIf",
															"src": "25955:55:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26019:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "26035:2:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26029:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26029:9:17"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "26023:2:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26047:69:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "26112:2:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_bytes_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "26074:37:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26074:41:17"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "26058:15:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26058:58:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "26051:3:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26125:16:17",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "26138:3:17"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "26129:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "26157:3:17"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "26162:2:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26150:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26150:15:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26150:15:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26174:19:17",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "26185:3:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "26190:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26181:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26181:12:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "26174:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26202:42:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "26224:2:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "26232:1:17",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "26235:2:17"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "26228:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "26228:10:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26220:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26220:19:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "26241:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26216:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26216:28:17"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "26206:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26276:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26285:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26288:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26278:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26278:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26278:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "26259:6:17"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "26267:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26256:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26256:19:17"
															},
															"nodeType": "YulIf",
															"src": "26253:39:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26301:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "26316:2:17"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "26320:2:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26312:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26312:11:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "26305:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26388:79:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "26409:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "26420:3:17"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "26414:5:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "26414:10:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "26402:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26402:23:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26402:23:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "26438:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "26449:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "26454:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26445:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26445:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "26438:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "26343:3:17"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "26348:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "26340:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26340:15:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "26356:23:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "26358:19:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "26369:3:17"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "26374:2:17"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "26365:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26365:12:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "26358:3:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "26336:3:17",
																"statements": []
															},
															"src": "26332:135:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26476:15:17",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "26486:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "26476:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25690:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "25701:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25713:6:17",
														"type": ""
													}
												],
												"src": "25618:879:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26765:311:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26782:9:17"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26793:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26775:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26775:25:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26775:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26820:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26831:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26816:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26816:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26836:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26809:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26809:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26809:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26863:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26874:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26859:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26859:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26879:3:17",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26852:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26852:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26852:31:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26892:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26929:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26941:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26952:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26937:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26937:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "26900:28:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26900:57:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26892:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26977:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26988:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26973:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26973:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "26997:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "27013:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "27018:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "27009:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "27009:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27022:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "27005:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27005:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "26993:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26993:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26966:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "26966:60:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26966:60:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27046:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27057:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27042:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27042:19:17"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "27063:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27035:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27035:35:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27035:35:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26702:9:17",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "26713:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "26721:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "26729:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26737:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26745:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26756:4:17",
														"type": ""
													}
												],
												"src": "26502:574:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27228:142:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27245:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27256:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27238:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27238:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27238:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27268:53:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27294:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27306:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27317:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27302:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27302:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "27276:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27276:45:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27268:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27341:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27352:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27337:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27337:18:17"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27357:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27330:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27330:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27330:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27189:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27200:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27208:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27219:4:17",
														"type": ""
													}
												],
												"src": "27081:289:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27542:484:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27559:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27570:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27552:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27552:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27552:21:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27582:33:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "27608:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "27602:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27602:13:17"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "27586:12:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27635:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27646:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27631:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27631:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27651:4:17",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27624:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27624:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27624:32:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "27665:66:17",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "27697:12:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27715:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27726:3:17",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27711:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27711:19:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "27679:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27679:52:17"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "27669:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27751:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27762:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27747:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27747:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "27781:6:17"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "27789:2:17",
																								"type": "",
																								"value": "32"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "27777:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "27777:15:17"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "27771:5:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27771:22:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "27803:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "27808:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "27799:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "27799:11:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27812:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "27795:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27795:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "27767:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27767:48:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27740:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27740:76:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27740:76:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27836:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27847:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27832:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27832:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "27862:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27870:2:17",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27858:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27858:15:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "27852:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27852:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27825:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27825:50:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27825:50:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27895:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27906:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27891:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27891:19:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "27922:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27930:2:17",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27918:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27918:15:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "27912:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27912:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27884:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27884:51:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27884:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27955:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27966:4:17",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27951:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27951:20:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "27983:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27991:3:17",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "27979:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27979:16:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "27973:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27973:23:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27944:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "27944:53:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27944:53:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28006:14:17",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "28014:6:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28006:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputParams_$991_memory_ptr__to_t_struct$_ExactInputParams_$991_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27511:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27522:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27533:4:17",
														"type": ""
													}
												],
												"src": "27375:651:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28188:218:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28198:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28210:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28221:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28206:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28206:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28198:4:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28233:29:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28251:3:17",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28256:1:17",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "28247:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28247:11:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28260:1:17",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "28243:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28243:19:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "28237:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28278:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "28293:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "28301:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "28289:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28289:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28271:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28271:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28271:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28325:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28336:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28321:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28321:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "28345:6:17"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "28353:2:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "28341:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28341:15:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28314:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28314:43:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28314:43:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28377:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28388:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28373:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28373:18:17"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "28393:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28366:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28366:34:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28366:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28141:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "28152:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "28160:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28168:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28179:4:17",
														"type": ""
													}
												],
												"src": "28031:375:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28548:150:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "28558:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "28578:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "28572:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28572:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "28562:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "28633:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28641:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28629:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28629:17:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28648:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28653:6:17"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "28594:34:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28594:66:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28594:66:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28669:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28680:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "28685:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28676:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28676:16:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28669:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28524:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "28529:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28540:3:17",
														"type": ""
													}
												],
												"src": "28411:287:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28877:152:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28894:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28905:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28887:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28887:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28887:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28928:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28939:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28924:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28924:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28944:1:17",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28917:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28917:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28917:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28966:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28977:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28962:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28962:18:17"
																	},
																	{
																		"hexValue": "535446",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28982:5:17",
																		"type": "",
																		"value": "STF"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28955:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "28955:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28955:33:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28997:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29009:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29020:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29005:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29005:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28997:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28854:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28868:4:17",
														"type": ""
													}
												],
												"src": "28703:326:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29208:151:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29225:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29236:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29218:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29218:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29218:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29259:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29270:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29255:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29255:18:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29275:1:17",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29248:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29248:29:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29248:29:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29297:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29308:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29293:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29293:18:17"
																	},
																	{
																		"hexValue": "5341",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "29313:4:17",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29286:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29286:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29286:32:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "29327:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29339:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29350:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29335:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "29335:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29327:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29185:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29199:4:17",
														"type": ""
													}
												],
												"src": "29034:325:17"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory_4293() -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0x60)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), not(31)), 0x20)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$2671__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_TokenInfo_$1871_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_TokenInfo_$1871_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, and(mload(_3), sub(shl(160, 1), 1)))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_contract$_ISwapRouter_$1047__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_contract$_IERC20_$877_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_uint16t_uint16(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := abi_decode_uint16(add(headStart, 64))\n        value5 := abi_decode_uint16(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV3Quoter_$2692__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffff))\n    }\n    function validator_revert_enum_Version(value)\n    {\n        if iszero(lt(value, 2)) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$877t_uint256t_enum$_Version_$1865t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_enum_Version(value_1)\n        value2 := value_1\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_address(value_2)\n        value3 := value_2\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_struct$_SwapPath_$1900_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if slt(sub(dataEnd, _1), 96) { revert(0, 0) }\n        value0 := _1\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_79e957a474f31b7d225f956dfbdfc2f074a8dc53d0329af3ba3119fb1da596ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \">0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_fba75e6924a64c3df8a8071c74ed6388accffd70fa19b24ac68c01b18965425e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"!Insufficient\")\n        tail := add(headStart, 96)\n    }\n    function array_allocation_size_array_bytes_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_enum_Version_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_enum_Version(value)\n    }\n    function abi_decode_tuple_t_struct$_SwapPath_$1900_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if slt(sub(dataEnd, _3), 0x60) { revert(0, 0) }\n        let value := allocate_memory_4293()\n        let offset_1 := mload(_3)\n        if gt(offset_1, _2) { revert(0, 0) }\n        let _4 := add(_3, offset_1)\n        if iszero(slt(add(_4, 0x1f), dataEnd)) { revert(0, 0) }\n        let _5 := mload(_4)\n        let dst := allocate_memory(array_allocation_size_array_bytes_dyn(_5))\n        let dst_1 := dst\n        mstore(dst, _5)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_4, shl(5, _5)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_4, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := mload(src)\n            if gt(innerOffset, _2)\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            let _7 := add(_4, innerOffset)\n            if iszero(slt(add(_7, 63), dataEnd))\n            {\n                let _8 := 0\n                revert(_8, _8)\n            }\n            let _9 := mload(add(_7, _1))\n            let _10 := 64\n            let array := allocate_memory(array_allocation_size_bytes(_9))\n            mstore(array, _9)\n            if gt(add(add(_7, _9), _10), dataEnd)\n            {\n                let _11 := 0\n                revert(_11, _11)\n            }\n            copy_memory_to_memory_with_cleanup(add(_7, _10), add(array, _1), _9)\n            mstore(dst, array)\n            dst := add(dst, _1)\n        }\n        mstore(value, dst_1)\n        mstore(add(value, _1), mload(add(_3, _1)))\n        mstore(add(value, 64), abi_decode_enum_Version_fromMemory(add(_3, 64)))\n        value0 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_enum_Version(value, pos)\n    {\n        if iszero(lt(value, 2))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$877_t_uint256_t_enum$_Version_$1865_t_address_t_bytes_memory_ptr__to_t_address_t_uint256_t_uint8_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        abi_encode_enum_Version(value2, add(headStart, 64))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_79e50942b282b0c50e592a4c6bb3d553d7b124a11f03f0e3e532c259348c5ee0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 4)\n        mstore(add(headStart, 64), \"!SLP\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8c3ba50bb259e05ba80912d6b9c2a543dbf8edeb465a7af7526c9fd468e77eb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"W>0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2d049238120a0ead2f12b121417834a966421a889b7828d4d078494dc558b5db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"!balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_93c0ba99f1a18bcdc81fcbcb6b4f15a9a6725f937075aed6fac107ffcb147068__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"initialized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d0cd31a152fc6340b4f40e732c591a32b341e7f9a91088685c16c2b9bdfaa7eb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Mismatched lengths\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e440fb5c535f127aabfe89bbeeeccc3cd56c363beddc60d926cbf5d8efc7e1c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"InvalidPercentage\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f4a497c7de4c60310745be8aea0933bf35943d3cb64819d72af166af33d8182a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"t=10000\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 96)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            let value := calldataload(srcPtr)\n            validator_revert_address(value)\n            mstore(pos, and(value, sub(shl(160, 1), 1)))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 0x20), sub(pos, headStart))\n        mstore(pos, value3)\n        if gt(value3, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value3)\n        calldatacopy(add(pos, 0x20), value2, length)\n        tail := add(add(pos, length), 0x20)\n    }\n    function abi_encode_tuple_t_stringliteral_03cd8ddb0f56ae8e724df2ee9750f66f180ef94d04bf0718d8903fc8c8f5f1ec__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"!UV\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_45c812600051f1bbf52d9a900a60b3f44a3af7878f1b088ff787de8ce9ff1548__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"!>0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1b46fc9d5659517d54d1e91f95e643694e5a270c6fbbe576541c1244cf2a3773__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"!ethAmount<=amountfee\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_enum$_Version_$1865(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_enum_Version(value)\n        value0 := value\n    }\n    function access_calldata_tail_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), shl(5, length))) { revert(0, 0) }\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$877_t_uint256_t_enum$_Version_$1865_t_address_t_bytes_calldata_ptr__to_t_address_t_uint256_t_uint8_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        abi_encode_enum_Version(value2, add(headStart, 64))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), 160)\n        mstore(add(headStart, 160), value5)\n        calldatacopy(add(headStart, 192), value4, value5)\n        mstore(add(add(headStart, value5), 192), 0)\n        tail := add(add(headStart, and(add(value5, 31), not(31))), 192)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_63019b35170fc46b0653deddaf6c6d426aea885c2c4cc93a67343c32f6af17a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"transferFailed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_bytes_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value := mload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        let dst := allocate_memory(array_allocation_size_array_bytes_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_2, shl(5, _3)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, mload(src))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__to_t_uint256_t_uint256_t_array$_t_address_$dyn_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_array_address_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_struct$_ExactInputParams_$991_memory_ptr__to_t_struct$_ExactInputParams_$991_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0xa0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 192))\n        mstore(add(headStart, 64), and(mload(add(value0, 32)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 128)))\n        tail := tail_1\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"STF\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"SA\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106101c4575f3560e01c806367a52793116100f2578063945098db11610092578063c38cd0b511610062578063c38cd0b514610553578063d03153aa1461057e578063dd62ed3e14610593578063f2fde38b146105d7575f80fd5b8063945098db146104ee57806395d89b4114610501578063a738c7df14610515578063a9059cbb14610534575f80fd5b806374a66061116100cd57806374a660611461047857806381a06b73146104975780638bc7e8c4146104b85780638da5cb5b146104d2575f80fd5b806367a52793146103fd57806370a0823114610430578063715018a614610464575f80fd5b80632a5c792a1161016857806336a43f2b1161013857806336a43f2b1461034f578063378a653c1461037a5780633f595e29146103bf5780634d20d0f8146103de575f80fd5b80632a5c792a146102d55780632c76d7a6146102f65780633043d4d914610315578063313ce56714610334575f80fd5b8063117da1ee116101a3578063117da1ee146102425780631694505e1461026157806318160ddd1461029857806323b872dd146102b6575f80fd5b8062d06ddd146101c857806306fdde03146101e9578063095ea7b314610213575b5f80fd5b3480156101d3575f80fd5b506101e76101e236600461201a565b6105f6565b005b3480156101f4575f80fd5b506101fd6109c2565b60405161020a91906120aa565b60405180910390f35b34801561021e575f80fd5b5061023261022d3660046120d7565b610a52565b604051901515815260200161020a565b34801561024d575f80fd5b506101e761025c366004612101565b610a6b565b34801561026c575f80fd5b50600954610280906001600160a01b031681565b6040516001600160a01b03909116815260200161020a565b3480156102a3575f80fd5b506003545b60405190815260200161020a565b3480156102c1575f80fd5b506102326102d0366004612118565b610aab565b3480156102e0575f80fd5b506102e9610ace565b60405161020a9190612156565b348015610301575f80fd5b50600a54610280906001600160a01b031681565b348015610320575f80fd5b506101e761032f366004612101565b610b41565b34801561033f575f80fd5b506040516012815260200161020a565b34801561035a575f80fd5b506102a86103693660046121ad565b60086020525f908152604090205481565b348015610385575f80fd5b50610399610394366004612101565b610d33565b604080516001600160a01b0394851681529390921660208401529082015260600161020a565b3480156103ca575f80fd5b506101e76103d9366004612225565b610d71565b3480156103e9575f80fd5b50600b54610280906001600160a01b031681565b348015610408575f80fd5b50600e5461041d9062010000900461ffff1681565b60405161ffff909116815260200161020a565b34801561043b575f80fd5b506102a861044a3660046121ad565b6001600160a01b03165f9081526001602052604090205490565b34801561046f575f80fd5b506101e7610ffe565b348015610483575f80fd5b506102a86104923660046122ba565b611011565b3480156104a2575f80fd5b50600e5461023290640100000000900460ff1681565b3480156104c3575f80fd5b50600e5461041d9061ffff1681565b3480156104dd575f80fd5b505f546001600160a01b0316610280565b6101e76104fc366004612333565b611099565b34801561050c575f80fd5b506101fd6114db565b348015610520575f80fd5b506101e761052f3660046121ad565b6114ea565b34801561053f575f80fd5b5061023261054e3660046120d7565b611593565b34801561055e575f80fd5b506102a861056d3660046121ad565b600f6020525f908152604090205481565b348015610589575f80fd5b506102a860075481565b34801561059e575f80fd5b506102a86105ad366004612369565b6001600160a01b039182165f90815260026020908152604080832093909416825291909152205490565b3480156105e2575f80fd5b506101e76105f13660046121ad565b6115a0565b5f821161062f5760405162461bcd60e51b815260206004820152600260248201526103e360f41b60448201526064015b60405180910390fd5b6040516370a0823160e01b8152336004820152829030906370a0823190602401602060405180830381865afa15801561066a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061068e91906123a0565b10156106cc5760405162461bcd60e51b815260206004820152600d60248201526c08525b9cdd59999a58da595b9d609a1b6044820152606401610626565b5f818060200190518101906106e191906123e4565b90505f6106ed60035490565b6106f98561271061251e565b6107039190612535565b90505f60095f9054906101000a90046001600160a01b03166001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa158015610756573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061077a9190612554565b90505f805b600c548110156108f1575f600c828154811061079d5761079d61256f565b5f918252602082206002919091020180546040516370a0823160e01b81523060048201529193506127109188916001600160a01b0316906370a0823190602401602060405180830381865afa1580156107f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061081c91906123a0565b610826919061251e565b6108309190612535565b825460408901518951805193945030936374a66061936001600160a01b031692869290913391908a9081106108675761086761256f565b60200260200101516040518663ffffffff1660e01b815260040161088f9594939291906125b7565b6020604051808303815f875af19250505080156108c9575060408051601f3d908101601f191682019092526108c6918101906123a0565b60015b156108dc576108d88186612602565b9450505b505080806108e990612615565b91505061077f565b506108fc33876115da565b80156109ba57600e545f90612710906109199061ffff168461251e565b6109239190612535565b90505f610930828461262d565b905081600d5f8282546109439190612602565b909155505060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0385169063a9059cbb906044016020604051808303815f875af1158015610992573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b69190612640565b5050505b505050505050565b6060600480546109d19061265f565b80601f01602080910402602001604051908101604052809291908181526020018280546109fd9061265f565b8015610a485780601f10610a1f57610100808354040283529160200191610a48565b820191905f5260205f20905b815481529060010190602001808311610a2b57829003601f168201915b5050505050905090565b5f33610a5f818585611612565b60019150505b92915050565b612710811115610aa65760405162461bcd60e51b815260040161062690602080825260049082015263021534c560e41b604082015260600190565b600755565b5f33610ab885828561161f565b610ac3858585611694565b506001949350505050565b6060600c805480602002602001604051908101604052809291908181526020015f905b82821015610b38575f848152602090819020604080518082019091526002850290910180546001600160a01b03168252600190810154828401529083529092019101610af1565b50505050905090565b5f8111610b765760405162461bcd60e51b81526020600482015260036024820152620573e360ec1b6044820152606401610626565b335f90815260016020526040902054811115610bbf5760405162461bcd60e51b81526020600482015260086024820152672162616c616e636560c01b6044820152606401610626565b5f610bc960035490565b610bd58361271061251e565b610bdf9190612535565b9050610beb33836115da565b5f5b600c54811015610d2e575f600c8281548110610c0b57610c0b61256f565b5f918252602082206002919091020180546040516370a0823160e01b81523060048201529193506127109186916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c66573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c8a91906123a0565b610c94919061251e565b610c9e9190612535565b90508015610d1957815460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610cf3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d179190612640565b505b50508080610d2690612615565b915050610bed565b505050565b60068181548110610d42575f80fd5b5f9182526020909120600390910201805460018201546002909201546001600160a01b03918216935091169083565b610d796116f1565b600e54640100000000900460ff1615610dc25760405162461bcd60e51b815260206004820152600b60248201526a1a5b9a5d1a585b1a5e995960aa1b6044820152606401610626565b848314610e065760405162461bcd60e51b81526020600482015260126024820152714d69736d617463686564206c656e6774687360701b6044820152606401610626565b600e805461ffff838116620100000263ffffffff19909216908516171790555f805b86811015610f6657612710868683818110610e4557610e4561256f565b905060200201351115610e8e5760405162461bcd60e51b8152602060048201526011602482015270496e76616c696450657263656e7461676560781b6044820152606401610626565b858582818110610ea057610ea061256f565b9050602002013582610eb29190612602565b9150600c60405180604001604052808a8a85818110610ed357610ed361256f565b9050602002016020810190610ee891906121ad565b6001600160a01b03168152602001888885818110610f0857610f0861256f565b602090810292909201359092528354600180820186555f95865294829020845160029092020180546001600160a01b0319166001600160a01b0390921691909117815592015191909201555080610f5e81612615565b915050610e28565b508061271014610fa25760405162461bcd60e51b81526020600482015260076024820152660743d31303030360cc1b6044820152606401610626565b600e805464ff0000000019166401000000001790556040517fa6413c453391b24b1553ee2908b9fdb9d8528511a0b9983f82d823531cea38b890610fed908990899089908990612697565b60405180910390a150505050505050565b6110066116f1565b61100f5f61171d565b565b5f8084600181111561102557611025612583565b0361103d576110368686858561176c565b9050611090565b600184600181111561105157611051612583565b03611062576110368686858561195b565b60405162461bcd60e51b815260206004820152600360248201526210aaab60e91b6044820152606401610626565b95945050505050565b5f8160200135116110d25760405162461bcd60e51b81526020600482015260036024820152620213e360ec1b6044820152606401610626565b600e545f90612710906110f39062010000900461ffff16602085013561251e565b6110fd9190612535565b90505f61110e82602085013561262d565b905081600d5f8282546111219190612602565b9091555050806111595760405162461bcd60e51b81526020600482015260036024820152620213e360ec1b6044820152606401610626565b600954604080516315ab88c960e31b815290516111d2926001600160a01b03169163ad5c46489160048083019260209291908290030181865afa1580156111a2573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111c69190612554565b33308660200135611b16565b600954604080516315ab88c960e31b81529051611255926001600160a01b03169163ad5c46489160048083019260209291908290030181865afa15801561121b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061123f9190612554565b600a546001600160a01b03166020860135611c13565b61125f3382611d0e565b5f5b600c548110156114d5575f600c828154811061127f5761127f61256f565b905f5260205f20906002020190505f6127108260010154856112a1919061251e565b6112ab9190612535565b9050838111156112f55760405162461bcd60e51b815260206004820152601560248201527421657468416d6f756e743c3d616d6f756e7466656560581b6044820152606401610626565b80156114c057815430906374a66061906001600160a01b03168361131f60608b0160408c01612713565b3061132a8c8061272e565b8a81811061133a5761133a61256f565b905060200281019061134c9190612773565b6040518763ffffffff1660e01b815260040161136d969594939291906127b5565b6020604051808303815f875af19250505080156113a7575060408051601f3d908101601f191682019092526113a4918101906123a0565b60015b6114be57335f908152600f6020526040812080548392906113c9908490612602565b9091555050604080516060810182523380825284546001600160a01b039081166020808501918252848601878152600680546001810182555f918252965160039097027ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810180549887166001600160a01b0319998a1617905593517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40850180549190961697169690961790935591517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4190910155908252600890529081208054916114b483612615565b91905055506114c0565b505b505080806114cd90612615565b915050611261565b50505050565b6060600580546109d19061265f565b6114f26116f1565b600d541561159057600d546040515f916001600160a01b038416918381818185875af1925050503d805f8114611543576040519150601f19603f3d011682016040523d82523d5f602084013e611548565b606091505b505090508061158a5760405162461bcd60e51b815260206004820152600e60248201526d1d1c985b9cd9995c91985a5b195960921b6044820152606401610626565b505f600d555b50565b5f33610a5f818585611694565b6115a86116f1565b6001600160a01b0381166115d157604051631e4fbdf760e01b81525f6004820152602401610626565b6115908161171d565b6001600160a01b03821661160357604051634b637e8f60e11b81525f6004820152602401610626565b61160e825f83611d3e565b5050565b610d2e8383836001611e64565b6001600160a01b038381165f908152600260209081526040808320938616835292905220545f1981146114d5578181101561168657604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610626565b6114d584848484035f611e64565b6001600160a01b0383166116bd57604051634b637e8f60e11b81525f6004820152602401610626565b6001600160a01b0382166116e65760405163ec442f0560e01b81525f6004820152602401610626565b610d2e838383611d3e565b5f546001600160a01b0316331461100f5760405163118cdaa760e01b8152336004820152602401610626565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f80828060200190518101906117829190612817565b60095460405163d06ca61f60e01b81529192505f916001600160a01b039091169063d06ca61f906117b990899086906004016128e2565b5f60405180830381865afa1580156117d3573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526117fa9190810190612902565b90505f612710600754612710611810919061262d565b836001815181106118235761182361256f565b6020026020010151611835919061251e565b61183f9190612535565b60095460405163095ea7b360e01b81526001600160a01b039182166004820152602481018a905291925089169063095ea7b3906044016020604051808303815f875af1158015611891573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906118b59190612640565b506009546040516318cbafe560e01b81525f916001600160a01b0316906318cbafe5906118ee908b90869089908d904290600401612982565b5f604051808303815f875af1158015611909573d5f803e3d5ffd5b505050506040513d5f823e601f3d908101601f191682016040526119309190810190612902565b9050806001815181106119455761194561256f565b6020026020010151945050505050949350505050565b600b5460405163cdca175360e01b81525f9182916001600160a01b039091169063cdca17539061199190869089906004016129bd565b6020604051808303815f875af11580156119ad573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119d191906123a0565b90505f6127106007546127106119e7919061262d565b6119f1908461251e565b6119fb9190612535565b6040805160a0810182528681526001600160a01b0388811660208301524282840152606082018a905260808201849052600a54925163095ea7b360e01b81529281166004840152602483018a90529293509189169063095ea7b3906044016020604051808303815f875af1158015611a75573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611a999190612640565b50600a5460405163c04b8d5960e01b81526001600160a01b039091169063c04b8d5990611aca9084906004016129de565b6020604051808303815f875af1158015611ae6573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b0a91906123a0565b98975050505050505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b17905291515f92839290881691611b799190612a35565b5f604051808303815f865af19150503d805f8114611bb2576040519150601f19603f3d011682016040523d82523d5f602084013e611bb7565b606091505b5091509150818015611be1575080511580611be1575080806020019051810190611be19190612640565b6109ba5760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b6044820152606401610626565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b17905291515f92839290871691611c6e9190612a35565b5f604051808303815f865af19150503d805f8114611ca7576040519150601f19603f3d011682016040523d82523d5f602084013e611cac565b606091505b5091509150818015611cd6575080511580611cd6575080806020019051810190611cd69190612640565b611d075760405162461bcd60e51b8152602060048201526002602482015261534160f01b6044820152606401610626565b5050505050565b6001600160a01b038216611d375760405163ec442f0560e01b81525f6004820152602401610626565b61160e5f83835b6001600160a01b038316611d68578060035f828254611d5d9190612602565b90915550611dd89050565b6001600160a01b0383165f9081526001602052604090205481811015611dba5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610626565b6001600160a01b0384165f9081526001602052604090209082900390555b6001600160a01b038216611df457600380548290039055611e12565b6001600160a01b0382165f9081526001602052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611e5791815260200190565b60405180910390a3505050565b6001600160a01b038416611e8d5760405163e602df0560e01b81525f6004820152602401610626565b6001600160a01b038316611eb657604051634a1406b160e11b81525f6004820152602401610626565b6001600160a01b038085165f90815260026020908152604080832093871683529290522082905580156114d557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611f2891815260200190565b60405180910390a350505050565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b0381118282101715611f6c57611f6c611f36565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611f9a57611f9a611f36565b604052919050565b5f6001600160401b03821115611fba57611fba611f36565b50601f01601f191660200190565b5f82601f830112611fd7575f80fd5b8135611fea611fe582611fa2565b611f72565b818152846020838601011115611ffe575f80fd5b816020850160208301375f918101602001919091529392505050565b5f806040838503121561202b575f80fd5b8235915060208301356001600160401b03811115612047575f80fd5b61205385828601611fc8565b9150509250929050565b5f5b8381101561207757818101518382015260200161205f565b50505f910152565b5f815180845261209681602086016020860161205d565b601f01601f19169290920160200192915050565b602081525f6120bc602083018461207f565b9392505050565b6001600160a01b0381168114611590575f80fd5b5f80604083850312156120e8575f80fd5b82356120f3816120c3565b946020939093013593505050565b5f60208284031215612111575f80fd5b5035919050565b5f805f6060848603121561212a575f80fd5b8335612135816120c3565b92506020840135612145816120c3565b929592945050506040919091013590565b602080825282518282018190525f919060409081850190868401855b828110156121a057815180516001600160a01b03168552860151868501529284019290850190600101612172565b5091979650505050505050565b5f602082840312156121bd575f80fd5b81356120bc816120c3565b5f8083601f8401126121d8575f80fd5b5081356001600160401b038111156121ee575f80fd5b6020830191508360208260051b8501011115612208575f80fd5b9250929050565b803561ffff81168114612220575f80fd5b919050565b5f805f805f806080878903121561223a575f80fd5b86356001600160401b0380821115612250575f80fd5b61225c8a838b016121c8565b90985096506020890135915080821115612274575f80fd5b5061228189828a016121c8565b909550935061229490506040880161220f565b91506122a26060880161220f565b90509295509295509295565b60028110611590575f80fd5b5f805f805f60a086880312156122ce575f80fd5b85356122d9816120c3565b94506020860135935060408601356122f0816122ae565b92506060860135612300816120c3565b915060808601356001600160401b0381111561231a575f80fd5b61232688828901611fc8565b9150509295509295909350565b5f60208284031215612343575f80fd5b81356001600160401b03811115612358575f80fd5b8201606081850312156120bc575f80fd5b5f806040838503121561237a575f80fd5b8235612385816120c3565b91506020830135612395816120c3565b809150509250929050565b5f602082840312156123b0575f80fd5b5051919050565b5f6001600160401b038211156123cf576123cf611f36565b5060051b60200190565b8051612220816122ae565b5f60208083850312156123f5575f80fd5b82516001600160401b038082111561240b575f80fd5b908401906060828703121561241e575f80fd5b612426611f4a565b825182811115612434575f80fd5b8301601f81018813612444575f80fd5b8051612452611fe5826123b7565b81815260059190911b8201860190868101908a831115612470575f80fd5b8784015b838110156124e15780518781111561248b575f8081fd5b8501603f81018d1361249c575f8081fd5b8981015160406124ae611fe583611fa2565b8281528f828486010111156124c2575f8081fd5b6124d1838e830184870161205d565b8652505050918801918801612474565b50845250505082840151848201526124fb604084016123d9565b60408201529695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417610a6557610a6561250a565b5f8261254f57634e487b7160e01b5f52601260045260245ffd5b500490565b5f60208284031215612564575f80fd5b81516120bc816120c3565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b600281106125b357634e487b7160e01b5f52602160045260245ffd5b9052565b6001600160a01b038681168252602082018690525f906125da6040840187612597565b80851660608401525060a060808301526125f760a083018461207f565b979650505050505050565b80820180821115610a6557610a6561250a565b5f600182016126265761262661250a565b5060010190565b81810381811115610a6557610a6561250a565b5f60208284031215612650575f80fd5b815180151581146120bc575f80fd5b600181811c9082168061267357607f821691505b60208210810361269157634e487b7160e01b5f52602260045260245ffd5b50919050565b604080825281018490525f8560608301825b878110156126d95782356126bc816120c3565b6001600160a01b03168252602092830192909101906001016126a9565b5083810360208501528481526001600160fb1b038511156126f8575f80fd5b8460051b915081866020830137016020019695505050505050565b5f60208284031215612723575f80fd5b81356120bc816122ae565b5f808335601e19843603018112612743575f80fd5b8301803591506001600160401b0382111561275c575f80fd5b6020019150600581901b3603821315612208575f80fd5b5f808335601e19843603018112612788575f80fd5b8301803591506001600160401b038211156127a1575f80fd5b602001915036819003821315612208575f80fd5b6001600160a01b038781168252602082018790525f906127d86040840188612597565b80861660608401525060a060808301528260a0830152828460c08401375f60c0848401015260c0601f19601f8501168301019050979650505050505050565b5f6020808385031215612828575f80fd5b82516001600160401b0381111561283d575f80fd5b8301601f8101851361284d575f80fd5b805161285b611fe5826123b7565b81815260059190911b82018301908381019087831115612879575f80fd5b928401925b828410156125f7578351612891816120c3565b8252928401929084019061287e565b5f8151808452602080850194508084015f5b838110156128d75781516001600160a01b0316875295820195908201906001016128b2565b509495945050505050565b828152604060208201525f6128fa60408301846128a0565b949350505050565b5f6020808385031215612913575f80fd5b82516001600160401b03811115612928575f80fd5b8301601f81018513612938575f80fd5b8051612946611fe5826123b7565b81815260059190911b82018301908381019087831115612964575f80fd5b928401925b828410156125f757835182529284019290840190612969565b85815284602082015260a060408201525f6129a060a08301866128a0565b6001600160a01b0394909416606083015250608001529392505050565b604081525f6129cf604083018561207f565b90508260208301529392505050565b602081525f825160a060208401526129f960c084018261207f565b905060018060a01b0360208501511660408401526040840151606084015260608401516080840152608084015160a08401528091505092915050565b5f8251612a4681846020870161205d565b919091019291505056fea2646970667358221220ab8a5c674b37dce16c3645c864c042a2673fcf3aba024145aecd65f625b51f7b64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x67A52793 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x945098DB GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xC38CD0B5 GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xC38CD0B5 EQ PUSH2 0x553 JUMPI DUP1 PUSH4 0xD03153AA EQ PUSH2 0x57E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x593 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x5D7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x945098DB EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x501 JUMPI DUP1 PUSH4 0xA738C7DF EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x534 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x74A66061 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0x74A66061 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0x81A06B73 EQ PUSH2 0x497 JUMPI DUP1 PUSH4 0x8BC7E8C4 EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x67A52793 EQ PUSH2 0x3FD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x464 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A5C792A GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x36A43F2B GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x36A43F2B EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x378A653C EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0x3F595E29 EQ PUSH2 0x3BF JUMPI DUP1 PUSH4 0x4D20D0F8 EQ PUSH2 0x3DE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2A5C792A EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x2C76D7A6 EQ PUSH2 0x2F6 JUMPI DUP1 PUSH4 0x3043D4D9 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x334 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x117DA1EE GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x117DA1EE EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x261 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xD06DDD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x213 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1E2 CALLDATASIZE PUSH1 0x4 PUSH2 0x201A JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x9C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x20AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x22D CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0xA52 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0xA6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2118 JUMP JUMPDEST PUSH2 0xAAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9 PUSH2 0xACE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A SWAP2 SWAP1 PUSH2 0x2156 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0xB41 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x369 CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x385 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x399 PUSH2 0x394 CALLDATASIZE PUSH1 0x4 PUSH2 0x2101 JUMP JUMPDEST PUSH2 0xD33 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2225 JUMP JUMPDEST PUSH2 0xD71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x280 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x408 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x41D SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x20A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x44A CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0xFFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x22BA JUMP JUMPDEST PUSH2 0x1011 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x232 SWAP1 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x41D SWAP1 PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 JUMP JUMPDEST PUSH2 0x1E7 PUSH2 0x4FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2333 JUMP JUMPDEST PUSH2 0x1099 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FD PUSH2 0x14DB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x520 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x52F CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH2 0x14EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x232 PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x20D7 JUMP JUMPDEST PUSH2 0x1593 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x56D CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x589 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A8 PUSH2 0x5AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2369 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x21AD JUMP JUMPDEST PUSH2 0x15A0 JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x62F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x3E3 PUSH1 0xF4 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 ADDRESS SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x66A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68E SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST LT ISZERO PUSH2 0x6CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x8525B9CDD59999A58DA595B9D PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6E1 SWAP2 SWAP1 PUSH2 0x23E4 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x6ED PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6F9 DUP6 PUSH2 0x2710 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x703 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x756 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x77A SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x8F1 JUMPI PUSH0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x79D JUMPI PUSH2 0x79D PUSH2 0x256F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP4 POP PUSH2 0x2710 SWAP2 DUP9 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x81C SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0x826 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x830 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST DUP3 SLOAD PUSH1 0x40 DUP10 ADD MLOAD DUP10 MLOAD DUP1 MLOAD SWAP4 SWAP5 POP ADDRESS SWAP4 PUSH4 0x74A66061 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP7 SWAP3 SWAP1 SWAP2 CALLER SWAP2 SWAP1 DUP11 SWAP1 DUP2 LT PUSH2 0x867 JUMPI PUSH2 0x867 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x88F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x8C9 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x8C6 SWAP2 DUP2 ADD SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST ISZERO PUSH2 0x8DC JUMPI PUSH2 0x8D8 DUP2 DUP7 PUSH2 0x2602 JUMP JUMPDEST SWAP5 POP POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x8E9 SWAP1 PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x77F JUMP JUMPDEST POP PUSH2 0x8FC CALLER DUP8 PUSH2 0x15DA JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BA JUMPI PUSH1 0xE SLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x919 SWAP1 PUSH2 0xFFFF AND DUP5 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x923 SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x930 DUP3 DUP5 PUSH2 0x262D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x992 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x9D1 SWAP1 PUSH2 0x265F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9FD SWAP1 PUSH2 0x265F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA48 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA1F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA48 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA2B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA5F DUP2 DUP6 DUP6 PUSH2 0x1612 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0xAA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x626 SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x4 SWAP1 DUP3 ADD MSTORE PUSH4 0x21534C5 PUSH1 0xE4 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH0 CALLER PUSH2 0xAB8 DUP6 DUP3 DUP6 PUSH2 0x161F JUMP JUMPDEST PUSH2 0xAC3 DUP6 DUP6 DUP6 PUSH2 0x1694 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB38 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP6 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x1 SWAP1 DUP2 ADD SLOAD DUP3 DUP5 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xAF1 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xB76 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x573E3 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0xBBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x2162616C616E6365 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH0 PUSH2 0xBC9 PUSH1 0x3 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xBD5 DUP4 PUSH2 0x2710 PUSH2 0x251E JUMP JUMPDEST PUSH2 0xBDF SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP PUSH2 0xBEB CALLER DUP4 PUSH2 0x15DA JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0xD2E JUMPI PUSH0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC0B JUMPI PUSH2 0xC0B PUSH2 0x256F JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP4 POP PUSH2 0x2710 SWAP2 DUP7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC66 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST PUSH2 0xC9E SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD19 JUMPI DUP2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0xD26 SWAP1 PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBED JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD42 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 POP SWAP2 AND SWAP1 DUP4 JUMP JUMPDEST PUSH2 0xD79 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xDC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x1A5B9A5D1A585B1A5E9959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST DUP5 DUP4 EQ PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4D69736D617463686564206C656E67746873 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH2 0xFFFF DUP4 DUP2 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP1 DUP6 AND OR OR SWAP1 SSTORE PUSH0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0xF66 JUMPI PUSH2 0x2710 DUP7 DUP7 DUP4 DUP2 DUP2 LT PUSH2 0xE45 JUMPI PUSH2 0xE45 PUSH2 0x256F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD GT ISZERO PUSH2 0xE8E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C696450657263656E74616765 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST DUP6 DUP6 DUP3 DUP2 DUP2 LT PUSH2 0xEA0 JUMPI PUSH2 0xEA0 PUSH2 0x256F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP3 PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP2 POP PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP11 DUP11 DUP6 DUP2 DUP2 LT PUSH2 0xED3 JUMPI PUSH2 0xED3 PUSH2 0x256F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xEE8 SWAP2 SWAP1 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP9 DUP6 DUP2 DUP2 LT PUSH2 0xF08 JUMPI PUSH2 0xF08 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP3 SWAP1 SWAP3 ADD CALLDATALOAD SWAP1 SWAP3 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE PUSH0 SWAP6 DUP7 MSTORE SWAP5 DUP3 SWAP1 KECCAK256 DUP5 MLOAD PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP3 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD SSTORE POP DUP1 PUSH2 0xF5E DUP2 PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE28 JUMP JUMPDEST POP DUP1 PUSH2 0x2710 EQ PUSH2 0xFA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x743D313030303 PUSH1 0xCC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH5 0xFF00000000 NOT AND PUSH5 0x100000000 OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0xA6413C453391B24B1553EE2908B9FDB9D8528511A0B9983F82D823531CEA38B8 SWAP1 PUSH2 0xFED SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH2 0x2697 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1006 PUSH2 0x16F1 JUMP JUMPDEST PUSH2 0x100F PUSH0 PUSH2 0x171D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1025 JUMPI PUSH2 0x1025 PUSH2 0x2583 JUMP JUMPDEST SUB PUSH2 0x103D JUMPI PUSH2 0x1036 DUP7 DUP7 DUP6 DUP6 PUSH2 0x176C JUMP JUMPDEST SWAP1 POP PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1051 JUMPI PUSH2 0x1051 PUSH2 0x2583 JUMP JUMPDEST SUB PUSH2 0x1062 JUMPI PUSH2 0x1036 DUP7 DUP7 DUP6 DUP6 PUSH2 0x195B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x10AAAB PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD CALLDATALOAD GT PUSH2 0x10D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x213E3 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH0 SWAP1 PUSH2 0x2710 SWAP1 PUSH2 0x10F3 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x251E JUMP JUMPDEST PUSH2 0x10FD SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x110E DUP3 PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x262D JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1121 SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 PUSH2 0x1159 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x213E3 PUSH1 0xEC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x11D2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xAD5C4648 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11A2 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11C6 SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST CALLER ADDRESS DUP7 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x1B16 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x15AB88C9 PUSH1 0xE3 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x1255 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xAD5C4648 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x121B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x123F SWAP2 SWAP1 PUSH2 0x2554 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x125F CALLER DUP3 PUSH2 0x1D0E JUMP JUMPDEST PUSH0 JUMPDEST PUSH1 0xC SLOAD DUP2 LT ISZERO PUSH2 0x14D5 JUMPI PUSH0 PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x127F JUMPI PUSH2 0x127F PUSH2 0x256F JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x12A1 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x12AB SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x12F5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x21657468416D6F756E743C3D616D6F756E74666565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x14C0 JUMPI DUP2 SLOAD ADDRESS SWAP1 PUSH4 0x74A66061 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x131F PUSH1 0x60 DUP12 ADD PUSH1 0x40 DUP13 ADD PUSH2 0x2713 JUMP JUMPDEST ADDRESS PUSH2 0x132A DUP13 DUP1 PUSH2 0x272E JUMP JUMPDEST DUP11 DUP2 DUP2 LT PUSH2 0x133A JUMPI PUSH2 0x133A PUSH2 0x256F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x134C SWAP2 SWAP1 PUSH2 0x2773 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP8 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136D SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27B5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13A7 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x13A4 SWAP2 DUP2 ADD SWAP1 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14BE JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x13C9 SWAP1 DUP5 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE CALLER DUP1 DUP3 MSTORE DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE DUP5 DUP7 ADD DUP8 DUP2 MSTORE PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE SWAP7 MLOAD PUSH1 0x3 SWAP1 SWAP8 MUL PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F DUP2 ADD DUP1 SLOAD SWAP9 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP10 DUP11 AND OR SWAP1 SSTORE SWAP4 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40 DUP6 ADD DUP1 SLOAD SWAP2 SWAP1 SWAP7 AND SWAP8 AND SWAP7 SWAP1 SWAP7 OR SWAP1 SWAP4 SSTORE SWAP2 MLOAD PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41 SWAP1 SWAP2 ADD SSTORE SWAP1 DUP3 MSTORE PUSH1 0x8 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x14B4 DUP4 PUSH2 0x2615 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x14C0 JUMP JUMPDEST POP JUMPDEST POP POP DUP1 DUP1 PUSH2 0x14CD SWAP1 PUSH2 0x2615 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1261 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x9D1 SWAP1 PUSH2 0x265F JUMP JUMPDEST PUSH2 0x14F2 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0xD SLOAD ISZERO PUSH2 0x1590 JUMPI PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1543 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x158A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x1D1C985B9CD9995C91985A5B1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST POP PUSH0 PUSH1 0xD SSTORE JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0xA5F DUP2 DUP6 DUP6 PUSH2 0x1694 JUMP JUMPDEST PUSH2 0x15A8 PUSH2 0x16F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0x1590 DUP2 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1603 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0x160E DUP3 PUSH0 DUP4 PUSH2 0x1D3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD2E DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH0 NOT DUP2 EQ PUSH2 0x14D5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1686 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0x14D5 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1E64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x16BD JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x16E6 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0xD2E DUP4 DUP4 DUP4 PUSH2 0x1D3E JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x100F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 DUP3 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1782 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD06CA61F PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xD06CA61F SWAP1 PUSH2 0x17B9 SWAP1 DUP10 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x28E2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17FA SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x7 SLOAD PUSH2 0x2710 PUSH2 0x1810 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST DUP4 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1823 JUMPI PUSH2 0x1823 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1835 SWAP2 SWAP1 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x183F SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE SWAP2 SWAP3 POP DUP10 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1891 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18B5 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x18CBAFE5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x18CBAFE5 SWAP1 PUSH2 0x18EE SWAP1 DUP12 SWAP1 DUP7 SWAP1 DUP10 SWAP1 DUP14 SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x2982 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1909 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1930 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x2902 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1945 JUMPI PUSH2 0x1945 PUSH2 0x256F JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0xCDCA1753 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xCDCA1753 SWAP1 PUSH2 0x1991 SWAP1 DUP7 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x29BD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x19AD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19D1 SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x7 SLOAD PUSH2 0x2710 PUSH2 0x19E7 SWAP2 SWAP1 PUSH2 0x262D JUMP JUMPDEST PUSH2 0x19F1 SWAP1 DUP5 PUSH2 0x251E JUMP JUMPDEST PUSH2 0x19FB SWAP2 SWAP1 PUSH2 0x2535 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA SLOAD SWAP3 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 DUP2 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD DUP11 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 DUP10 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A75 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A99 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0xC04B8D59 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xC04B8D59 SWAP1 PUSH2 0x1ACA SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x29DE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1AE6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B0A SWAP2 SWAP1 PUSH2 0x23A0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x1B79 SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1BB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1BB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1BE1 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1BE1 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1BE1 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3 PUSH1 0x24 DUP3 ADD MSTORE PUSH3 0x29AA23 PUSH1 0xE9 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x1C6E SWAP2 SWAP1 PUSH2 0x2A35 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1CA7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1CAC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1CD6 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1CD6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1CD6 SWAP2 SWAP1 PUSH2 0x2640 JUMP JUMPDEST PUSH2 0x1D07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x5341 PUSH1 0xF0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1D37 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH2 0x160E PUSH0 DUP4 DUP4 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1D68 JUMPI DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1D5D SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1DD8 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x1DBA JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1DF4 JUMPI PUSH1 0x3 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1E12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1E57 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1E8D JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1EB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x626 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x14D5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F28 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x60 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F6C JUMPI PUSH2 0x1F6C PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F9A JUMPI PUSH2 0x1F9A PUSH2 0x1F36 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x1FBA JUMPI PUSH2 0x1FBA PUSH2 0x1F36 JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FEA PUSH2 0x1FE5 DUP3 PUSH2 0x1FA2 JUMP JUMPDEST PUSH2 0x1F72 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1FFE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x202B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2047 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2053 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2077 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x205F JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2096 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x205D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x20BC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x207F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1590 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x20F3 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2111 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2135 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2145 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x21A0 JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE DUP7 ADD MLOAD DUP7 DUP6 ADD MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2172 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20BC DUP2 PUSH2 0x20C3 JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x21D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x21EE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2208 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x2220 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x223A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x2250 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x225C DUP11 DUP4 DUP12 ADD PUSH2 0x21C8 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2274 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2281 DUP10 DUP3 DUP11 ADD PUSH2 0x21C8 JUMP JUMPDEST SWAP1 SWAP6 POP SWAP4 POP PUSH2 0x2294 SWAP1 POP PUSH1 0x40 DUP9 ADD PUSH2 0x220F JUMP JUMPDEST SWAP2 POP PUSH2 0x22A2 PUSH1 0x60 DUP9 ADD PUSH2 0x220F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x1590 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x22CE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x22D9 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x22F0 DUP2 PUSH2 0x22AE JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x2300 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x231A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2326 DUP9 DUP3 DUP10 ADD PUSH2 0x1FC8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2343 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2358 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 ADD PUSH1 0x60 DUP2 DUP6 SUB SLT ISZERO PUSH2 0x20BC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x237A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2385 DUP2 PUSH2 0x20C3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x2395 DUP2 PUSH2 0x20C3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x23CF JUMPI PUSH2 0x23CF PUSH2 0x1F36 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x2220 DUP2 PUSH2 0x22AE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x240B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 DUP5 ADD SWAP1 PUSH1 0x60 DUP3 DUP8 SUB SLT ISZERO PUSH2 0x241E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2426 PUSH2 0x1F4A JUMP JUMPDEST DUP3 MLOAD DUP3 DUP2 GT ISZERO PUSH2 0x2434 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x2444 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2452 PUSH2 0x1FE5 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP7 ADD SWAP1 DUP7 DUP2 ADD SWAP1 DUP11 DUP4 GT ISZERO PUSH2 0x2470 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24E1 JUMPI DUP1 MLOAD DUP8 DUP2 GT ISZERO PUSH2 0x248B JUMPI PUSH0 DUP1 DUP2 REVERT JUMPDEST DUP6 ADD PUSH1 0x3F DUP2 ADD DUP14 SGT PUSH2 0x249C JUMPI PUSH0 DUP1 DUP2 REVERT JUMPDEST DUP10 DUP2 ADD MLOAD PUSH1 0x40 PUSH2 0x24AE PUSH2 0x1FE5 DUP4 PUSH2 0x1FA2 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP16 DUP3 DUP5 DUP7 ADD ADD GT ISZERO PUSH2 0x24C2 JUMPI PUSH0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x24D1 DUP4 DUP15 DUP4 ADD DUP5 DUP8 ADD PUSH2 0x205D JUMP JUMPDEST DUP7 MSTORE POP POP POP SWAP2 DUP9 ADD SWAP2 DUP9 ADD PUSH2 0x2474 JUMP JUMPDEST POP DUP5 MSTORE POP POP POP DUP3 DUP5 ADD MLOAD DUP5 DUP3 ADD MSTORE PUSH2 0x24FB PUSH1 0x40 DUP5 ADD PUSH2 0x23D9 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0x250A JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x254F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2564 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x20BC DUP2 PUSH2 0x20C3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x25B3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP7 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x25DA PUSH1 0x40 DUP5 ADD DUP8 PUSH2 0x2597 JUMP JUMPDEST DUP1 DUP6 AND PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x25F7 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x207F JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0x250A JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2626 JUMPI PUSH2 0x2626 PUSH2 0x250A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xA65 JUMPI PUSH2 0xA65 PUSH2 0x250A JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2650 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20BC JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2673 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2691 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 DUP6 PUSH1 0x60 DUP4 ADD DUP3 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x26D9 JUMPI DUP3 CALLDATALOAD PUSH2 0x26BC DUP2 PUSH2 0x20C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x26A9 JUMP JUMPDEST POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0x26F8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x5 SHL SWAP2 POP DUP2 DUP7 PUSH1 0x20 DUP4 ADD CALLDATACOPY ADD PUSH1 0x20 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2723 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20BC DUP2 PUSH2 0x22AE JUMP JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2743 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x275C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP PUSH1 0x5 DUP2 SWAP1 SHL CALLDATASIZE SUB DUP3 SGT ISZERO PUSH2 0x2208 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x2788 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH2 0x27A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x2208 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 SWAP1 MSTORE PUSH0 SWAP1 PUSH2 0x27D8 PUSH1 0x40 DUP5 ADD DUP9 PUSH2 0x2597 JUMP JUMPDEST DUP1 DUP7 AND PUSH1 0x60 DUP5 ADD MSTORE POP PUSH1 0xA0 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE DUP3 DUP5 PUSH1 0xC0 DUP5 ADD CALLDATACOPY PUSH0 PUSH1 0xC0 DUP5 DUP5 ADD ADD MSTORE PUSH1 0xC0 PUSH1 0x1F NOT PUSH1 0x1F DUP6 ADD AND DUP4 ADD ADD SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2828 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x283D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x284D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x285B PUSH2 0x1FE5 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x2879 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x25F7 JUMPI DUP4 MLOAD PUSH2 0x2891 DUP2 PUSH2 0x20C3 JUMP JUMPDEST DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D7 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x28B2 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x28FA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x28A0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2913 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2928 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x2938 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x2946 PUSH2 0x1FE5 DUP3 PUSH2 0x23B7 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP4 ADD SWAP1 DUP4 DUP2 ADD SWAP1 DUP8 DUP4 GT ISZERO PUSH2 0x2964 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 DUP5 ADD SWAP3 JUMPDEST DUP3 DUP5 LT ISZERO PUSH2 0x25F7 JUMPI DUP4 MLOAD DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH2 0x2969 JUMP JUMPDEST DUP6 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x29A0 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x29CF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x207F JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD PUSH1 0xA0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x29F9 PUSH1 0xC0 DUP5 ADD DUP3 PUSH2 0x207F JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x2A46 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x205D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB DUP11 0x5C PUSH8 0x4B37DCE16C3645C8 PUSH5 0xC042A2673F 0xCF GASPRICE 0xBA MUL COINBASE GASLIMIT 0xAE 0xCD PUSH6 0xF625B51F7B64 PUSH20 0x6F6C634300081400330000000000000000000000 ",
							"sourceMap": "399:5314:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3417:1251;;;;;;;;;;-1:-1:-1;3417:1251:9;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;-1:-1:-1;4293:186:2;;;;;:::i;:::-;;:::i;:::-;;;3112:14:17;;3105:22;3087:41;;3075:2;3060:18;4293:186:2;2947:187:17;7278:176:11;;;;;;;;;;-1:-1:-1;7278:176:11;;;;;:::i;:::-;;:::i;622:41::-;;;;;;;;;;-1:-1:-1;622:41:11;;;;-1:-1:-1;;;;;622:41:11;;;;;;-1:-1:-1;;;;;3515:32:17;;;3497:51;;3485:2;3470:18;622:41:11;3324:230:17;3144:97:2;;;;;;;;;;-1:-1:-1;3222:12:2;;3144:97;;;3705:25:17;;;3693:2;3678:18;3144:97:2;3559:177:17;5039:244:2;;;;;;;;;;-1:-1:-1;5039:244:2;;;;;:::i;:::-;;:::i;5614:97:9:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;669:34:11:-;;;;;;;;;;-1:-1:-1;669:34:11;;;;-1:-1:-1;;;;;669:34:11;;;4674:639:9;;;;;;;;;;-1:-1:-1;4674:639:9;;;;;:::i;:::-;;:::i;3002:82:2:-;;;;;;;;;;-1:-1:-1;3002:82:2;;3075:2;5395:36:17;;5383:2;5368:18;3002:82:2;5253:184:17;565:50:11;;;;;;;;;;-1:-1:-1;565:50:11;;;;;:::i;:::-;;;;;;;;;;;;;;484:31;;;;;;;;;;-1:-1:-1;484:31:11;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5966:15:17;;;5948:34;;6018:15;;;;6013:2;5998:18;;5991:43;6050:18;;;6043:34;5898:2;5883:18;484:31:11;5694:389:17;1184:929:9;;;;;;;;;;-1:-1:-1;1184:929:9;;;;;:::i;:::-;;:::i;709:39:11:-;;;;;;;;;;-1:-1:-1;709:39:11;;;;-1:-1:-1;;;;;709:39:11;;;584:24:9;;;;;;;;;;-1:-1:-1;584:24:9;;;;;;;;;;;;;;7954:6:17;7942:19;;;7924:38;;7912:2;7897:18;584:24:9;7780:188:17;3299:116:2;;;;;;;;;;-1:-1:-1;3299:116:2;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;:9;:18;;;;;;;3299:116;2293:101:0;;;;;;;;;;;;;:::i;3554:443:11:-;;;;;;;;;;-1:-1:-1;3554:443:11;;;;;:::i;:::-;;:::i;615:35:9:-;;;;;;;;;;-1:-1:-1;615:35:9;;;;;;;;;;;551:27;;;;;;;;;;-1:-1:-1;551:27:9;;;;;;;;1638:85:0;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;2119:1292:9;;;;;;:::i;:::-;;:::i;2276:93:2:-;;;;;;;;;;;;;:::i;5319:289:9:-;;;;;;;;;;-1:-1:-1;5319:289:9;;;;;:::i;:::-;;:::i;3610:178:2:-;;;;;;;;;;-1:-1:-1;3610:178:2;;;;;:::i;:::-;;:::i;657:53:9:-;;;;;;;;;;-1:-1:-1;657:53:9;;;;;:::i;:::-;;;;;;;;;;;;;;522:32:11;;;;;;;;;;;;;;;;3846:140:2;;;;;;;;;;-1:-1:-1;3846:140:2;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;2543:215:0;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;3417:1251:9:-;3522:1;3508:11;:15;3500:30;;;;-1:-1:-1;;;3500:30:9;;10122:2:17;3500:30:9;;;10104:21:17;10161:1;10141:18;;;10134:29;-1:-1:-1;;;10179:18:17;;;10172:32;10221:18;;3500:30:9;;;;;;;;;3548:26;;-1:-1:-1;;;3548:26:9;;3563:10;3548:26;;;3497:51:17;3578:11:9;;3548:4;;:14;;3470:18:17;;3548:26:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;3540:67;;;;-1:-1:-1;;;3540:67:9;;10641:2:17;3540:67:9;;;10623:21:17;10680:2;10660:18;;;10653:30;-1:-1:-1;;;10699:18:17;;;10692:43;10752:18;;3540:67:9;10439:337:17;3540:67:9;3618:24;3657:5;3646:29;;;;;;;;;;;;:::i;:::-;3617:58;;3686:18;3731:13;3222:12:2;;;3144:97;3731:13:9;3708:19;:11;3722:5;3708:19;:::i;:::-;3707:37;;;;:::i;:::-;3686:58;;3755:13;3771:15;;;;;;;;;-1:-1:-1;;;;;3771:15:9;-1:-1:-1;;;;;3771:20:9;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3755:38;;3803:17;3839:9;3834:454;3858:6;:13;3854:17;;3834:454;;;3892:27;3922:6;3929:1;3922:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;3978:15;;:40;;-1:-1:-1;;;3978:40:9;;4012:4;3978:40;;;3497:51:17;3922:9:9;;-1:-1:-1;4035:5:9;;4021:10;;-1:-1:-1;;;;;3978:15:9;;:25;;3470:18:17;;3978:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;;:::i;:::-;3977:63;;;;:::i;:::-;4085:15;;4125:16;;;;4155:13;;:16;;3945:95;;-1:-1:-1;4062:4:9;;:22;;-1:-1:-1;;;;;4085:15:9;;3945:95;;4125:16;;4143:10;;4155:13;4169:1;;4155:16;;;;;;:::i;:::-;;;;;;;4062:110;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4062:110:9;;;;;;;;-1:-1:-1;;4062:110:9;;;;;;;;;;;;:::i;:::-;;;4058:220;;;4226:24;4239:11;4226:24;;:::i;:::-;;;4173:96;4058:220;3878:410;;3873:3;;;;;:::i;:::-;;;;3834:454;;;;4298:30;4304:10;4316:11;4298:5;:30::i;:::-;4342:13;;4339:262;;4401:13;;4370:15;;4418:5;;4389:25;;4401:13;;4389:9;:25;:::i;:::-;4388:35;;;;:::i;:::-;4370:53;-1:-1:-1;4437:26:9;4466:19;4370:53;4466:9;:19;:::i;:::-;4437:48;;4516:7;4499:13;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;;4537:53:9;;-1:-1:-1;;;4537:53:9;;4559:10;4537:53;;;15602:51:17;15669:18;;;15662:34;;;-1:-1:-1;;;;;4537:21:9;;;;;15575:18:17;;4537:53:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4356:245;;4339:262;3490:1178;;;;3417:1251;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;7278:176:11:-;7385:5;7363:18;:27;;7355:44;;;;-1:-1:-1;;;7355:44:11;;;;;;16576:2:17;16558:21;;;16615:1;16595:18;;;16588:29;-1:-1:-1;;;16648:2:17;16633:18;;16626:34;16692:2;16677:18;;16374:327;7355:44:11;7409:17;:38;7278:176::o;5039:244:2:-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;5614:97:9:-;5661:18;5698:6;5691:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5691:13:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5614:97;:::o;4674:639::-;4760:1;4746:11;:15;4738:31;;;;-1:-1:-1;;;4738:31:9;;16908:2:17;4738:31:9;;;16890:21:17;16947:1;16927:18;;;16920:29;-1:-1:-1;;;16965:18:17;;;16958:33;17008:18;;4738:31:9;16706:326:17;4738:31:9;4797:10;3364:7:2;3390:18;;;:9;:18;;;;;;4812:11:9;-1:-1:-1;4787:36:9;4779:57;;;;-1:-1:-1;;;4779:57:9;;17239:2:17;4779:57:9;;;17221:21:17;17278:1;17258:18;;;17251:29;-1:-1:-1;;;17296:18:17;;;17289:38;17344:18;;4779:57:9;17037:331:17;4779:57:9;4847:17;4891:13;3222:12:2;;;3144:97;4891:13:9;4868:19;:11;4882:5;4868:19;:::i;:::-;4867:37;;;;:::i;:::-;4847:57;;4914:30;4920:10;4932:11;4914:5;:30::i;:::-;4960:9;4955:352;4979:6;:13;4975:17;;4955:352;;;5013:27;5043:6;5050:1;5043:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;5099:15;;:40;;-1:-1:-1;;;5099:40:9;;5133:4;5099:40;;;3497:51:17;5043:9:9;;-1:-1:-1;5155:5:9;;5142:9;;-1:-1:-1;;;;;5099:15:9;;:25;;3470:18:17;;5099:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:52;;;;:::i;:::-;5098:62;;;;:::i;:::-;5066:94;-1:-1:-1;5178:25:9;;5174:123;;5223:15;;:59;;-1:-1:-1;;;5223:59:9;;5248:10;5223:59;;;15602:51:17;15669:18;;;15662:34;;;-1:-1:-1;;;;;5223:15:9;;;;:24;;15575:18:17;;5223:59:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5174:123;4999:308;;4994:3;;;;;:::i;:::-;;;;4955:352;;;;4728:585;4674:639;:::o;484:31:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;484:31:11;;;;-1:-1:-1;484:31:11;;;;:::o;1184:929:9:-;1531:13:0;:11;:13::i;:::-;1396:15:9::1;::::0;;;::::1;;;1395:16;1387:40;;;::::0;-1:-1:-1;;;1387:40:9;;17575:2:17;1387:40:9::1;::::0;::::1;17557:21:17::0;17614:2;17594:18;;;17587:30;-1:-1:-1;;;17633:18:17;;;17626:41;17684:18;;1387:40:9::1;17373:335:17::0;1387:40:9::1;1445:43:::0;;::::1;1437:74;;;::::0;-1:-1:-1;;;1437:74:9;;17915:2:17;1437:74:9::1;::::0;::::1;17897:21:17::0;17954:2;17934:18;;;17927:30;-1:-1:-1;;;17973:18:17;;;17966:48;18031:18;;1437:74:9::1;17713:342:17::0;1437:74:9::1;1521:13;:30:::0;;::::1;1561:24:::0;;::::1;::::0;::::1;-1:-1:-1::0;;1561:24:9;;;1521:30;;::::1;1561:24:::0;::::1;::::0;;1521:13:::1;::::0;1632:337:::1;1652:18:::0;;::::1;1632:337;;;1724:5;1699:18;;1718:1;1699:21;;;;;;;:::i;:::-;;;;;;;:30;;1691:60;;;::::0;-1:-1:-1;;;1691:60:9;;18262:2:17;1691:60:9::1;::::0;::::1;18244:21:17::0;18301:2;18281:18;;;18274:30;-1:-1:-1;;;18320:18:17;;;18313:47;18377:18;;1691:60:9::1;18060:341:17::0;1691:60:9::1;1784:18;;1803:1;1784:21;;;;;;;:::i;:::-;;;;;;;1765:40;;;;;:::i;:::-;;;1820:6;1832:125;;;;;;;;1874:7;;1882:1;1874:10;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1832:125:9::1;;;;;1921:18;;1940:1;1921:21;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;::::1;;1832:125:::0;;;1820:138;;::::1;::::0;;::::1;::::0;;-1:-1:-1;1820:138:9;;;;;;;;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;;;;;;1820:138:9::1;-1:-1:-1::0;;;;;1820:138:9;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;-1:-1:-1;1672:3:9;::::1;::::0;::::1;:::i;:::-;;;;1632:337;;;;1986:15;2005:5;1986:24;1978:44;;;::::0;-1:-1:-1;;;1978:44:9;;18608:2:17;1978:44:9::1;::::0;::::1;18590:21:17::0;18647:1;18627:18;;;18620:29;-1:-1:-1;;;18665:18:17;;;18658:37;18712:18;;1978:44:9::1;18406:330:17::0;1978:44:9::1;2032:15;:22:::0;;-1:-1:-1;;2032:22:9::1;::::0;::::1;::::0;;2069:37:::1;::::0;::::1;::::0;::::1;::::0;2078:7;;;;2087:18;;;;2069:37:::1;:::i;:::-;;;;;;;;1377:736;1184:929:::0;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3554:443:11:-;3690:7;;3713:8;:22;;;;;;;;:::i;:::-;;3709:282;;3758:56;3778:6;3786:9;3797;3808:5;3758:19;:56::i;:::-;3751:63;;;;3709:282;3847:10;3835:8;:22;;;;;;;;:::i;:::-;;3831:160;;3880:56;3900:6;3908:9;3919;3930:5;3880:19;:56::i;3831:160::-;3967:13;;-1:-1:-1;;;3967:13:11;;20007:2:17;3967:13:11;;;19989:21:17;20046:1;20026:18;;;20019:29;-1:-1:-1;;;20064:18:17;;;20057:33;20107:18;;3967:13:11;19805:326:17;3831:160:11;3554:443;;;;;;;:::o;2119:1292:9:-;2219:1;2199:8;:17;;;:21;2191:37;;;;-1:-1:-1;;;2191:37:9;;20338:2:17;2191:37:9;;;20320:21:17;20377:1;20357:18;;;20350:29;-1:-1:-1;;;20395:18:17;;;20388:33;20438:18;;2191:37:9;20136:326:17;2191:37:9;2282:10;;2247:11;;2296:5;;2262:30;;2282:10;;;;;2262:17;;;;:30;:::i;:::-;2261:40;;;;:::i;:::-;2247:54;-1:-1:-1;2311:22:9;2336:23;2247:54;2336:17;;;;:23;:::i;:::-;2311:48;;2386:3;2369:13;;:20;;;;;;;:::i;:::-;;;;-1:-1:-1;;2408:18:9;2400:34;;;;-1:-1:-1;;;2400:34:9;;20338:2:17;2400:34:9;;;20320:21:17;20377:1;20357:18;;;20350:29;-1:-1:-1;;;20395:18:17;;;20388:33;20438:18;;2400:34:9;20136:326:17;2400:34:9;2484:15;;:22;;;-1:-1:-1;;;2484:22:9;;;;2444:110;;-1:-1:-1;;;;;2484:15:9;;:20;;:22;;;;;;;;;;;;;;:15;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2509:10;2529:4;2536:8;:17;;;2444:31;:110::i;:::-;2599:15;;:22;;;-1:-1:-1;;;2599:22:9;;;;2564:104;;-1:-1:-1;;;;;2599:15:9;;:20;;:22;;;;;;;;;;;;;;:15;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2632:15;;-1:-1:-1;;;;;2632:15:9;2650:17;;;;2564:26;:104::i;:::-;2687:33;2693:10;2705:14;2687:5;:33::i;:::-;2736:9;2731:674;2755:6;:13;2751:17;;2731:674;;;2789:27;2819:6;2826:1;2819:9;;;;;;;;:::i;:::-;;;;;;;;;;;2789:39;;2842:17;2910:5;2880:9;:26;;;2863:14;:43;;;;:::i;:::-;2862:53;;;;:::i;:::-;2842:73;;2950:14;2937:9;:27;;2929:61;;;;-1:-1:-1;;;2929:61:9;;20669:2:17;2929:61:9;;;20651:21:17;20708:2;20688:18;;;20681:30;-1:-1:-1;;;20727:18:17;;;20720:51;20788:18;;2929:61:9;20467:345:17;2929:61:9;3008:13;;3004:391;;3068:15;;3045:4;;:22;;-1:-1:-1;;;;;3068:15:9;3085:9;3096:16;;;;;;;;:::i;:::-;3122:4;3129:13;:8;;:13;:::i;:::-;3143:1;3129:16;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;3045:101;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3045:101:9;;;;;;;;-1:-1:-1;;3045:101:9;;;;;;;;;;;;:::i;:::-;;;3041:340;;3197:10;3178:30;;;;:18;:30;;;;;:43;;3212:9;;3178:30;:43;;3212:9;;3178:43;:::i;:::-;;;;-1:-1:-1;;3260:50:9;;;;;;;;3271:10;3260:50;;;3283:15;;-1:-1:-1;;;;;3283:15:9;;;3260:50;;;;;;;;;;;;;3243:11;:68;;3283:15;3243:68;;;;-1:-1:-1;3243:68:9;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3243:68:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3333:27;;;:15;:27;;;;;:29;;;;;;:::i;:::-;;;;;;3041:340;;;;;2775:630;;2770:3;;;;;:::i;:::-;;;;2731:674;;;;2181:1230;;2119:1292;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;5319:289:9:-;1531:13:0;:11;:13::i;:::-;5410::9::1;::::0;:17;5406:196:::1;;5494:13;::::0;5462:50:::1;::::0;5444:12:::1;::::0;-1:-1:-1;;;;;5462:24:9;::::1;::::0;5444:12;5462:50;5444:12;5462:50;5494:13;5462:24;:50:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5443:69;;;5534:7;5526:34;;;::::0;-1:-1:-1;;;5526:34:9;;23365:2:17;5526:34:9::1;::::0;::::1;23347:21:17::0;23404:2;23384:18;;;23377:30;-1:-1:-1;;;23423:18:17;;;23416:44;23477:18;;5526:34:9::1;23163:338:17::0;5526:34:9::1;-1:-1:-1::0;5590:1:9::1;5574:13;:17:::0;5406:196:::1;5319:289:::0;:::o;3610:178:2:-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;3497:51:17::0;3470:18;;2672:31:0::1;3324:230:17::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;8247:206:2:-:0;-1:-1:-1;;;;;8317:21:2;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:2;;8388:1;8361:30;;;3497:51:17;3470:18;;8361:30:2;3324:230:17;8313:89:2;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;8989:128::-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;23726:32:17;;10936:60:2;;;23708:51:17;23775:18;;;23768:34;;;23818:18;;;23811:34;;;23681:18;;10936:60:2;23506:345:17;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;3497:51:17;3470:18;;5780:30:2;3324:230:17;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;3497:51:17;3470:18;;5873:32:2;3324:230:17;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;3497:51:17;3470:18;;1901:40:0;3324:230:17;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;4507:730:11:-;4625:7;4644:26;4684:4;4673:29;;;;;;;;;;;;:::i;:::-;4747:15;;:51;;-1:-1:-1;;;4747:51:11;;4644:58;;-1:-1:-1;4712:32:11;;-1:-1:-1;;;;;4747:15:11;;;;:29;;:51;;4777:9;;4644:58;;4747:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4747:51:11;;;;;;;;;;;;:::i;:::-;4712:86;;4808:24;4888:5;4866:17;;4858:5;:25;;;;:::i;:::-;4836:15;4852:1;4836:18;;;;;;;;:::i;:::-;;;;;;;:48;;;;:::i;:::-;4835:58;;;;:::i;:::-;4927:15;;4904:51;;-1:-1:-1;;;4904:51:11;;-1:-1:-1;;;;;4927:15:11;;;4904:51;;;15602::17;15669:18;;;15662:34;;;4808:85:11;;-1:-1:-1;4904:14:11;;;;;15575:18:17;;4904:51:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4992:15:11;;:210;;-1:-1:-1;;;4992:210:11;;4965:24;;-1:-1:-1;;;;;4992:15:11;;:37;;:210;;5043:9;;5066:16;;5132:9;;5155:8;;5177:15;;4992:210;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4992:210:11;;;;;;;;;;;;:::i;:::-;4965:237;;5220:7;5228:1;5220:10;;;;;;;;:::i;:::-;;;;;;;5213:17;;;;;;4507:730;;;;;;:::o;5855:804::-;6031:15;;:49;;-1:-1:-1;;;6031:49:11;;5975:7;;;;-1:-1:-1;;;;;6031:15:11;;;;:31;;:49;;6063:5;;6070:9;;6031:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6003:77;;6181:24;6260:5;6238:17;;6230:5;:25;;;;:::i;:::-;6209:47;;:17;:47;:::i;:::-;6208:57;;;;:::i;:::-;6320:219;;;;;;;;;;;-1:-1:-1;;;;;6320:219:11;;;;;;;6432:15;6320:219;;;;;;;;;;;;;;;;6573:15;;6550:51;;-1:-1:-1;;;6550:51:11;;6573:15;;;6550:51;;;15602::17;15669:18;;;15662:34;;;6320:219:11;;-1:-1:-1;6320:219:11;6550:14;;;;;15575:18:17;;6550:51:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;6618:15:11;;:34;;-1:-1:-1;;;6618:34:11;;-1:-1:-1;;;;;6618:15:11;;;;:26;;:34;;6645:6;;6618:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6611:41;5855:804;-1:-1:-1;;;;;;;;5855:804:11:o;561:358:8:-;759:69;;;-1:-1:-1;;;;;5966:15:17;;;759:69:8;;;5948:34:17;6018:15;;;5998:18;;;5991:43;6050:18;;;;6043:34;;;759:69:8;;;;;;;;;;5883:18:17;;;;759:69:8;;;;;;;-1:-1:-1;;;;;759:69:8;-1:-1:-1;;;759:69:8;;;748:81;;-1:-1:-1;;;;748:10:8;;;;:81;;759:69;748:81;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;-1:-1:-1;859:11:8;;:16;;:44;;;890:4;879:24;;;;;;;;;;;;:::i;:::-;839:73;;;;-1:-1:-1;;;839:73:8;;28905:2:17;839:73:8;;;28887:21:17;28944:1;28924:18;;;28917:29;-1:-1:-1;;;28962:18:17;;;28955:33;29005:18;;839:73:8;28703:326:17;1873:307:8;2032:58;;;-1:-1:-1;;;;;15620:32:17;;;2032:58:8;;;15602:51:17;15669:18;;;;15662:34;;;2032:58:8;;;;;;;;;;15575:18:17;;;;2032:58:8;;;;;;;-1:-1:-1;;;;;2032:58:8;-1:-1:-1;;;2032:58:8;;;2021:70;;-1:-1:-1;;;;2021:10:8;;;;:70;;2032:58;2021:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;-1:-1:-1;2121:11:8;;:16;;:44;;;2152:4;2141:24;;;;;;;;;;;;:::i;:::-;2101:72;;;;-1:-1:-1;;;2101:72:8;;29236:2:17;2101:72:8;;;29218:21:17;29275:1;29255:18;;;29248:29;-1:-1:-1;;;29293:18:17;;;29286:32;29335:18;;2101:72:8;29034:325:17;2101:72:8;1975:205;;1873:307;;;:::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;3497:51:17;3470:18;;7835:32:2;3324:230:17;7787:91:2;7887:35;7903:1;7907:7;7916:5;6271:1107;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;:9;:15;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;23726:32:17;;6649:50:2;;;23708:51:17;23775:18;;;23768:34;;;23818:18;;;23811:34;;;23681:18;;6649:50:2;23506:345:17;6599:115:2;-1:-1:-1;;;;;6834:15:2;;;;;;:9;:15;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;;;;;:9;:13;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;3705::17;;3693:2;3678:18;;3559:177;7346:25:2;;;;;;;;6271:1107;;;:::o;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;3497:51:17;3470:18;;10103:32:2;3324:230:17;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;3497:51:17;3470:18;;10203:31:2;3324:230:17;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;3705:25:17;;3693:2;3678:18;;3559:177;10333:31:2;;;;;;;;9949:432;;;;:::o;14:127:17:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:17;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:275::-;475:2;469:9;540:2;521:13;;-1:-1:-1;;517:27:17;505:40;;-1:-1:-1;;;;;560:34:17;;596:22;;;557:62;554:88;;;622:18;;:::i;:::-;658:2;651:22;404:275;;-1:-1:-1;404:275:17:o;684:186::-;732:4;-1:-1:-1;;;;;757:6:17;754:30;751:56;;;787:18;;:::i;:::-;-1:-1:-1;853:2:17;832:15;-1:-1:-1;;828:29:17;859:4;824:40;;684:186::o;875:462::-;917:5;970:3;963:4;955:6;951:17;947:27;937:55;;988:1;985;978:12;937:55;1024:6;1011:20;1055:48;1071:31;1099:2;1071:31;:::i;:::-;1055:48;:::i;:::-;1128:2;1119:7;1112:19;1174:3;1167:4;1162:2;1154:6;1150:15;1146:26;1143:35;1140:55;;;1191:1;1188;1181:12;1140:55;1256:2;1249:4;1241:6;1237:17;1230:4;1221:7;1217:18;1204:55;1304:1;1279:16;;;1297:4;1275:27;1268:38;;;;1283:7;875:462;-1:-1:-1;;;875:462:17:o;1342:388::-;1419:6;1427;1480:2;1468:9;1459:7;1455:23;1451:32;1448:52;;;1496:1;1493;1486:12;1448:52;1532:9;1519:23;1509:33;;1593:2;1582:9;1578:18;1565:32;-1:-1:-1;;;;;1612:6:17;1609:30;1606:50;;;1652:1;1649;1642:12;1606:50;1675:49;1716:7;1707:6;1696:9;1692:22;1675:49;:::i;:::-;1665:59;;;1342:388;;;;;:::o;1735:250::-;1820:1;1830:113;1844:6;1841:1;1838:13;1830:113;;;1920:11;;;1914:18;1901:11;;;1894:39;1866:2;1859:10;1830:113;;;-1:-1:-1;;1977:1:17;1959:16;;1952:27;1735:250::o;1990:271::-;2032:3;2070:5;2064:12;2097:6;2092:3;2085:19;2113:76;2182:6;2175:4;2170:3;2166:14;2159:4;2152:5;2148:16;2113:76;:::i;:::-;2243:2;2222:15;-1:-1:-1;;2218:29:17;2209:39;;;;2250:4;2205:50;;1990:271;-1:-1:-1;;1990:271:17:o;2266:220::-;2415:2;2404:9;2397:21;2378:4;2435:45;2476:2;2465:9;2461:18;2453:6;2435:45;:::i;:::-;2427:53;2266:220;-1:-1:-1;;;2266:220:17:o;2491:131::-;-1:-1:-1;;;;;2566:31:17;;2556:42;;2546:70;;2612:1;2609;2602:12;2627:315;2695:6;2703;2756:2;2744:9;2735:7;2731:23;2727:32;2724:52;;;2772:1;2769;2762:12;2724:52;2811:9;2798:23;2830:31;2855:5;2830:31;:::i;:::-;2880:5;2932:2;2917:18;;;;2904:32;;-1:-1:-1;;;2627:315:17:o;3139:180::-;3198:6;3251:2;3239:9;3230:7;3226:23;3222:32;3219:52;;;3267:1;3264;3257:12;3219:52;-1:-1:-1;3290:23:17;;3139:180;-1:-1:-1;3139:180:17:o;3741:456::-;3818:6;3826;3834;3887:2;3875:9;3866:7;3862:23;3858:32;3855:52;;;3903:1;3900;3893:12;3855:52;3942:9;3929:23;3961:31;3986:5;3961:31;:::i;:::-;4011:5;-1:-1:-1;4068:2:17;4053:18;;4040:32;4081:33;4040:32;4081:33;:::i;:::-;3741:456;;4133:7;;-1:-1:-1;;;4187:2:17;4172:18;;;;4159:32;;3741:456::o;4202:818::-;4427:2;4479:21;;;4549:13;;4452:18;;;4571:22;;;4398:4;;4427:2;4612;;4630:18;;;;4671:15;;;4398:4;4714:280;4728:6;4725:1;4722:13;4714:280;;;4787:13;;4829:9;;-1:-1:-1;;;;;4825:35:17;4813:48;;4901:11;;4895:18;4881:12;;;4874:40;4934:12;;;;4969:15;;;;4857:1;4743:9;4714:280;;;-1:-1:-1;5011:3:17;;4202:818;-1:-1:-1;;;;;;;4202:818:17:o;5442:247::-;5501:6;5554:2;5542:9;5533:7;5529:23;5525:32;5522:52;;;5570:1;5567;5560:12;5522:52;5609:9;5596:23;5628:31;5653:5;5628:31;:::i;6088:367::-;6151:8;6161:6;6215:3;6208:4;6200:6;6196:17;6192:27;6182:55;;6233:1;6230;6223:12;6182:55;-1:-1:-1;6256:20:17;;-1:-1:-1;;;;;6288:30:17;;6285:50;;;6331:1;6328;6321:12;6285:50;6368:4;6360:6;6356:17;6344:29;;6428:3;6421:4;6411:6;6408:1;6404:14;6396:6;6392:27;6388:38;6385:47;6382:67;;;6445:1;6442;6435:12;6382:67;6088:367;;;;;:::o;6460:159::-;6527:20;;6587:6;6576:18;;6566:29;;6556:57;;6609:1;6606;6599:12;6556:57;6460:159;;;:::o;6624:918::-;6762:6;6770;6778;6786;6794;6802;6855:3;6843:9;6834:7;6830:23;6826:33;6823:53;;;6872:1;6869;6862:12;6823:53;6912:9;6899:23;-1:-1:-1;;;;;6982:2:17;6974:6;6971:14;6968:34;;;6998:1;6995;6988:12;6968:34;7037:70;7099:7;7090:6;7079:9;7075:22;7037:70;:::i;:::-;7126:8;;-1:-1:-1;7011:96:17;-1:-1:-1;7214:2:17;7199:18;;7186:32;;-1:-1:-1;7230:16:17;;;7227:36;;;7259:1;7256;7249:12;7227:36;;7298:72;7362:7;7351:8;7340:9;7336:24;7298:72;:::i;:::-;7389:8;;-1:-1:-1;7272:98:17;-1:-1:-1;7443:37:17;;-1:-1:-1;7476:2:17;7461:18;;7443:37;:::i;:::-;7433:47;;7499:37;7532:2;7521:9;7517:18;7499:37;:::i;:::-;7489:47;;6624:918;;;;;;;;:::o;7973:106::-;8053:1;8046:5;8043:12;8033:40;;8069:1;8066;8059:12;8084:838;8214:6;8222;8230;8238;8246;8299:3;8287:9;8278:7;8274:23;8270:33;8267:53;;;8316:1;8313;8306:12;8267:53;8355:9;8342:23;8374:31;8399:5;8374:31;:::i;:::-;8424:5;-1:-1:-1;8476:2:17;8461:18;;8448:32;;-1:-1:-1;8532:2:17;8517:18;;8504:32;8545:38;8504:32;8545:38;:::i;:::-;8602:7;-1:-1:-1;8661:2:17;8646:18;;8633:32;8674:33;8633:32;8674:33;:::i;:::-;8726:7;-1:-1:-1;8784:3:17;8769:19;;8756:33;-1:-1:-1;;;;;8801:30:17;;8798:50;;;8844:1;8841;8834:12;8798:50;8867:49;8908:7;8899:6;8888:9;8884:22;8867:49;:::i;:::-;8857:59;;;8084:838;;;;;;;;:::o;9135:387::-;9222:6;9275:2;9263:9;9254:7;9250:23;9246:32;9243:52;;;9291:1;9288;9281:12;9243:52;9331:9;9318:23;-1:-1:-1;;;;;9356:6:17;9353:30;9350:50;;;9396:1;9393;9386:12;9350:50;9419:22;;9475:2;9457:16;;;9453:25;9450:45;;;9491:1;9488;9481:12;9527:388;9595:6;9603;9656:2;9644:9;9635:7;9631:23;9627:32;9624:52;;;9672:1;9669;9662:12;9624:52;9711:9;9698:23;9730:31;9755:5;9730:31;:::i;:::-;9780:5;-1:-1:-1;9837:2:17;9822:18;;9809:32;9850:33;9809:32;9850:33;:::i;:::-;9902:7;9892:17;;;9527:388;;;;;:::o;10250:184::-;10320:6;10373:2;10361:9;10352:7;10348:23;10344:32;10341:52;;;10389:1;10386;10379:12;10341:52;-1:-1:-1;10412:16:17;;10250:184;-1:-1:-1;10250:184:17:o;10781:181::-;10839:4;-1:-1:-1;;;;;10864:6:17;10861:30;10858:56;;;10894:18;;:::i;:::-;-1:-1:-1;10939:1:17;10935:14;10951:4;10931:25;;10781:181::o;10967:148::-;11051:13;;11073:36;11051:13;11073:36;:::i;11120:2006::-;11216:6;11247:2;11290;11278:9;11269:7;11265:23;11261:32;11258:52;;;11306:1;11303;11296:12;11258:52;11339:9;11333:16;-1:-1:-1;;;;;11409:2:17;11401:6;11398:14;11395:34;;;11425:1;11422;11415:12;11395:34;11448:22;;;;11504:4;11486:16;;;11482:27;11479:47;;;11522:1;11519;11512:12;11479:47;11548:22;;:::i;:::-;11601:2;11595:9;11629:2;11619:8;11616:16;11613:36;;;11645:1;11642;11635:12;11613:36;11668:17;;11716:4;11708:13;;11704:27;-1:-1:-1;11694:55:17;;11745:1;11742;11735:12;11694:55;11774:2;11768:9;11797:58;11813:41;11851:2;11813:41;:::i;11797:58::-;11889:15;;;11971:1;11967:10;;;;11959:19;;11955:28;;;11920:12;;;;11995:19;;;11992:39;;;12027:1;12024;12017:12;11992:39;12059:2;12055;12051:11;12071:865;12087:6;12082:3;12079:15;12071:865;;;12166:3;12160:10;12202:2;12189:11;12186:19;12183:109;;;12246:1;12275:2;12271;12264:14;12183:109;12315:20;;12370:2;12362:11;;12358:25;-1:-1:-1;12348:123:17;;12425:1;12454:2;12450;12443:14;12348:123;12508:2;12504;12500:11;12494:18;12536:2;12564:48;12580:31;12608:2;12580:31;:::i;12564:48::-;12639:2;12632:5;12625:17;12684:7;12678:3;12673:2;12669;12665:11;12661:21;12658:34;12655:127;;;12734:1;12764:3;12759;12752:16;12655:127;12795:68;12860:2;12855;12848:5;12844:14;12838:3;12834:2;12830:12;12795:68;:::i;:::-;12876:18;;-1:-1:-1;;;12914:12:17;;;;12104;;12071:865;;;-1:-1:-1;12945:20:17;;-1:-1:-1;;;13003:11:17;;;12997:18;12981:14;;;12974:42;13048:47;13091:2;13083:11;;13048:47;:::i;:::-;13043:2;13032:14;;13025:71;13036:5;11120:2006;-1:-1:-1;;;;;;11120:2006:17:o;13131:127::-;13192:10;13187:3;13183:20;13180:1;13173:31;13223:4;13220:1;13213:15;13247:4;13244:1;13237:15;13263:168;13336:9;;;13367;;13384:15;;;13378:22;;13364:37;13354:71;;13405:18;;:::i;13436:217::-;13476:1;13502;13492:132;;13546:10;13541:3;13537:20;13534:1;13527:31;13581:4;13578:1;13571:15;13609:4;13606:1;13599:15;13492:132;-1:-1:-1;13638:9:17;;13436:217::o;13658:251::-;13728:6;13781:2;13769:9;13760:7;13756:23;13752:32;13749:52;;;13797:1;13794;13787:12;13749:52;13829:9;13823:16;13848:31;13873:5;13848:31;:::i;13914:127::-;13975:10;13970:3;13966:20;13963:1;13956:31;14006:4;14003:1;13996:15;14030:4;14027:1;14020:15;14046:127;14107:10;14102:3;14098:20;14095:1;14088:31;14138:4;14135:1;14128:15;14162:4;14159:1;14152:15;14178:235;14257:1;14250:5;14247:12;14237:143;;14302:10;14297:3;14293:20;14290:1;14283:31;14337:4;14334:1;14327:15;14365:4;14362:1;14355:15;14237:143;14389:18;;14178:235::o;14418:602::-;-1:-1:-1;;;;;14739:15:17;;;14721:34;;14786:2;14771:18;;14764:34;;;14664:4;;14807:51;14854:2;14839:18;;14831:6;14807:51;:::i;:::-;14906:2;14898:6;14894:15;14889:2;14878:9;14874:18;14867:43;;14947:3;14941;14930:9;14926:19;14919:32;14968:46;15009:3;14998:9;14994:19;14986:6;14968:46;:::i;:::-;14960:54;14418:602;-1:-1:-1;;;;;;;14418:602:17:o;15025:125::-;15090:9;;;15111:10;;;15108:36;;;15124:18;;:::i;15155:135::-;15194:3;15215:17;;;15212:43;;15235:18;;:::i;:::-;-1:-1:-1;15282:1:17;15271:13;;15155:135::o;15295:128::-;15362:9;;;15383:11;;;15380:37;;;15397:18;;:::i;15707:277::-;15774:6;15827:2;15815:9;15806:7;15802:23;15798:32;15795:52;;;15843:1;15840;15833:12;15795:52;15875:9;15869:16;15928:5;15921:13;15914:21;15907:5;15904:32;15894:60;;15950:1;15947;15940:12;15989:380;16068:1;16064:12;;;;16111;;;16132:61;;16186:4;16178:6;16174:17;16164:27;;16132:61;16239:2;16231:6;16228:14;16208:18;16205:38;16202:161;;16285:10;16280:3;16276:20;16273:1;16266:31;16320:4;16317:1;16310:15;16348:4;16345:1;16338:15;16202:161;;15989:380;;;:::o;18741:1059::-;19029:2;19041:21;;;19014:18;;19097:22;;;18981:4;19176:6;19150:2;19135:18;;18981:4;19210:304;19224:6;19221:1;19218:13;19210:304;;;19299:6;19286:20;19319:31;19344:5;19319:31;:::i;:::-;-1:-1:-1;;;;;19375:31:17;19363:44;;19430:4;19489:15;;;;19454:12;;;;19403:1;19239:9;19210:304;;;-1:-1:-1;19552:19:17;;;19545:4;19530:20;;19523:49;19581:19;;;-1:-1:-1;;;;;19612:31:17;;19609:51;;;19656:1;19653;19646:12;19609:51;19690:6;19687:1;19683:14;19669:28;;19743:6;19735;19728:4;19723:3;19719:14;19706:44;19771:16;19789:4;19767:27;;18741:1059;-1:-1:-1;;;;;;18741:1059:17:o;20817:264::-;20888:6;20941:2;20929:9;20920:7;20916:23;20912:32;20909:52;;;20957:1;20954;20947:12;20909:52;20996:9;20983:23;21015:36;21045:5;21015:36;:::i;21086:556::-;21190:4;21196:6;21256:11;21243:25;21350:2;21346:7;21335:8;21319:14;21315:29;21311:43;21291:18;21287:68;21277:96;;21369:1;21366;21359:12;21277:96;21396:33;;21448:20;;;-1:-1:-1;;;;;;21480:30:17;;21477:50;;;21523:1;21520;21513:12;21477:50;21556:4;21544:17;;-1:-1:-1;21607:1:17;21603:14;;;21587;21583:35;21573:46;;21570:66;;;21632:1;21629;21622:12;21647:521;21724:4;21730:6;21790:11;21777:25;21884:2;21880:7;21869:8;21853:14;21849:29;21845:43;21825:18;21821:68;21811:96;;21903:1;21900;21893:12;21811:96;21930:33;;21982:20;;;-1:-1:-1;;;;;;22014:30:17;;22011:50;;;22057:1;22054;22047:12;22011:50;22090:4;22078:17;;-1:-1:-1;22121:14:17;22117:27;;;22107:38;;22104:58;;;22158:1;22155;22148:12;22173:775;-1:-1:-1;;;;;22504:15:17;;;22486:34;;22551:2;22536:18;;22529:34;;;22429:4;;22572:51;22619:2;22604:18;;22596:6;22572:51;:::i;:::-;22671:2;22663:6;22659:15;22654:2;22643:9;22639:18;22632:43;;22712:3;22706;22695:9;22691:19;22684:32;22753:6;22747:3;22736:9;22732:19;22725:35;22811:6;22803;22797:3;22786:9;22782:19;22769:49;22868:1;22862:3;22853:6;22842:9;22838:22;22834:32;22827:43;22938:3;22931:2;22927:7;22922:2;22914:6;22910:15;22906:29;22895:9;22891:45;22887:55;22879:63;;22173:775;;;;;;;;;:::o;23856:954::-;23951:6;23982:2;24025;24013:9;24004:7;24000:23;23996:32;23993:52;;;24041:1;24038;24031:12;23993:52;24074:9;24068:16;-1:-1:-1;;;;;24099:6:17;24096:30;24093:50;;;24139:1;24136;24129:12;24093:50;24162:22;;24215:4;24207:13;;24203:27;-1:-1:-1;24193:55:17;;24244:1;24241;24234:12;24193:55;24273:2;24267:9;24296:58;24312:41;24350:2;24312:41;:::i;24296:58::-;24388:15;;;24470:1;24466:10;;;;24458:19;;24454:28;;;24419:12;;;;24494:19;;;24491:39;;;24526:1;24523;24516:12;24491:39;24550:11;;;;24570:210;24586:6;24581:3;24578:15;24570:210;;;24659:3;24653:10;24676:31;24701:5;24676:31;:::i;:::-;24720:18;;24603:12;;;;24758;;;;24570:210;;24815:461;24868:3;24906:5;24900:12;24933:6;24928:3;24921:19;24959:4;24988:2;24983:3;24979:12;24972:19;;25025:2;25018:5;25014:14;25046:1;25056:195;25070:6;25067:1;25064:13;25056:195;;;25135:13;;-1:-1:-1;;;;;25131:39:17;25119:52;;25191:12;;;;25226:15;;;;25167:1;25085:9;25056:195;;;-1:-1:-1;25267:3:17;;24815:461;-1:-1:-1;;;;;24815:461:17:o;25281:332::-;25488:6;25477:9;25470:25;25531:2;25526;25515:9;25511:18;25504:30;25451:4;25551:56;25603:2;25592:9;25588:18;25580:6;25551:56;:::i;:::-;25543:64;25281:332;-1:-1:-1;;;;25281:332:17:o;25618:879::-;25713:6;25744:2;25787;25775:9;25766:7;25762:23;25758:32;25755:52;;;25803:1;25800;25793:12;25755:52;25836:9;25830:16;-1:-1:-1;;;;;25861:6:17;25858:30;25855:50;;;25901:1;25898;25891:12;25855:50;25924:22;;25977:4;25969:13;;25965:27;-1:-1:-1;25955:55:17;;26006:1;26003;25996:12;25955:55;26035:2;26029:9;26058:58;26074:41;26112:2;26074:41;:::i;26058:58::-;26150:15;;;26232:1;26228:10;;;;26220:19;;26216:28;;;26181:12;;;;26256:19;;;26253:39;;;26288:1;26285;26278:12;26253:39;26312:11;;;;26332:135;26348:6;26343:3;26340:15;26332:135;;;26414:10;;26402:23;;26365:12;;;;26445;;;;26332:135;;26502:574;26793:6;26782:9;26775:25;26836:6;26831:2;26820:9;26816:18;26809:34;26879:3;26874:2;26863:9;26859:18;26852:31;26756:4;26900:57;26952:3;26941:9;26937:19;26929:6;26900:57;:::i;:::-;-1:-1:-1;;;;;26993:32:17;;;;26988:2;26973:18;;26966:60;-1:-1:-1;27057:3:17;27042:19;27035:35;26892:65;26502:574;-1:-1:-1;;;26502:574:17:o;27081:289::-;27256:2;27245:9;27238:21;27219:4;27276:45;27317:2;27306:9;27302:18;27294:6;27276:45;:::i;:::-;27268:53;;27357:6;27352:2;27341:9;27337:18;27330:34;27081:289;;;;;:::o;27375:651::-;27570:2;27559:9;27552:21;27533:4;27608:6;27602:13;27651:4;27646:2;27635:9;27631:18;27624:32;27679:52;27726:3;27715:9;27711:19;27697:12;27679:52;:::i;:::-;27665:66;;27812:1;27808;27803:3;27799:11;27795:19;27789:2;27781:6;27777:15;27771:22;27767:48;27762:2;27751:9;27747:18;27740:76;27870:2;27862:6;27858:15;27852:22;27847:2;27836:9;27832:18;27825:50;27930:2;27922:6;27918:15;27912:22;27906:3;27895:9;27891:19;27884:51;27991:3;27983:6;27979:16;27973:23;27966:4;27955:9;27951:20;27944:53;28014:6;28006:14;;;27375:651;;;;:::o;28411:287::-;28540:3;28578:6;28572:13;28594:66;28653:6;28648:3;28641:4;28633:6;28629:17;28594:66;:::i;:::-;28676:16;;;;;28411:287;-1:-1:-1;;28411:287:17:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2177200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24797",
								"balanceOf(address)": "2596",
								"decimals()": "288",
								"deposit((bytes[],uint256,uint8))": "infinite",
								"depositFee()": "2369",
								"ethDepositedFailed(address)": "2554",
								"failedSwaps(uint256)": "8976",
								"getAllTokens()": "infinite",
								"initialedTokens()": "2387",
								"initializeTokens(address[],uint256[],uint16,uint16)": "infinite",
								"name()": "infinite",
								"owner()": "2440",
								"renounceOwnership()": "infinite",
								"setSlippageTolerance(uint256)": "22394",
								"slippageTolerance()": "2360",
								"swapTokenForToken(address,uint256,uint8,address,bytes)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2370",
								"transfer(address,uint256)": "51312",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"uniswapV2Router()": "2404",
								"uniswapV3Quoter()": "2447",
								"uniswapV3Router()": "2404",
								"userFailedSwaps(address)": "2555",
								"withdrawFeesByOwner(address)": "infinite",
								"withdrawInKind(uint256)": "infinite",
								"withdrawToETH(uint256,bytes)": "infinite",
								"withdrawalFee()": "2401"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 5713,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 615,
									"end": 650,
									"name": "PUSH",
									"source": 9,
									"value": "E"
								},
								{
									"begin": 615,
									"end": 650,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 615,
									"end": 650,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 615,
									"end": 650,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 615,
									"end": 650,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 615,
									"end": 650,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 816,
									"end": 1178,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 816,
									"end": 1178,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1083,
									"end": 1099,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1101,
									"end": 1117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1135,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1038,
									"end": 1043,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1045,
									"end": 1052,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1012,
									"end": 1022,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1012,
									"end": 1022,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2143,
									"end": 2194,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 855,
									"end": 870,
									"name": "PUSH",
									"source": 11,
									"value": "9"
								},
								{
									"begin": 855,
									"end": 909,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 855,
									"end": 909,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "AND",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 855,
									"end": 909,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 855,
									"end": 909,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 919,
									"end": 934,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 919,
									"end": 966,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 919,
									"end": 966,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 976,
									"end": 991,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 976,
									"end": 1028,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1058,
									"end": 1062,
									"name": "PUSH",
									"source": 11,
									"value": "3E8"
								},
								{
									"begin": 1038,
									"end": 1055,
									"name": "PUSH",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 1038,
									"end": 1062,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1151,
									"end": 1158,
									"modifierDepth": 3,
									"name": "PUSH",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1151,
									"end": 1171,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1171,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1171,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1171,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1171,
									"modifierDepth": 3,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1171,
									"modifierDepth": 3,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1171,
									"modifierDepth": 3,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1171,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1171,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 17,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 17,
									"value": "32"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 17,
									"value": "34"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 17,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 17,
									"value": "36"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 17,
									"value": "37"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "38"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1168,
									"name": "tag",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 991,
									"end": 1168,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1070,
									"end": 1083,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1070,
									"end": 1083,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1112,
									"end": 1143,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1112,
									"end": 1143,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 1102,
									"end": 1144,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 1102,
									"end": 1144,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 1092,
									"end": 1162,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 1092,
									"end": 1162,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1148,
									"end": 1160,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1092,
									"end": 1162,
									"name": "tag",
									"source": 17,
									"value": "42"
								},
								{
									"begin": 1092,
									"end": 1162,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1168,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1168,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1168,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 991,
									"end": 1168,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "tag",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1299,
									"end": 1305,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1307,
									"end": 1313,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1315,
									"end": 1321,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1323,
									"end": 1329,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1331,
									"end": 1337,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1384,
									"end": 1387,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 1372,
									"end": 1381,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 1363,
									"end": 1370,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 1359,
									"end": 1382,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 1355,
									"end": 1388,
									"name": "SLT",
									"source": 17
								},
								{
									"begin": 1352,
									"end": 1405,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1352,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 1352,
									"end": 1405,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1401,
									"end": 1402,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1398,
									"end": 1399,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1391,
									"end": 1403,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1352,
									"end": 1405,
									"name": "tag",
									"source": 17,
									"value": "44"
								},
								{
									"begin": 1352,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1428,
									"end": 1444,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 1428,
									"end": 1444,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1493,
									"end": 1507,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1493,
									"end": 1507,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1493,
									"end": 1507,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1520,
									"end": 1521,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1517,
									"end": 1518,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1510,
									"end": 1522,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "tag",
									"source": 17,
									"value": "45"
								},
								{
									"begin": 1490,
									"end": 1524,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1543,
									"end": 1604,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 1596,
									"end": 1603,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 1587,
									"end": 1593,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 1576,
									"end": 1585,
									"name": "DUP11",
									"source": 17
								},
								{
									"begin": 1572,
									"end": 1594,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1543,
									"end": 1604,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 1543,
									"end": 1604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1543,
									"end": 1604,
									"name": "tag",
									"source": 17,
									"value": "46"
								},
								{
									"begin": 1543,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1533,
									"end": 1604,
									"name": "SWAP7",
									"source": 17
								},
								{
									"begin": 1533,
									"end": 1604,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1650,
									"end": 1652,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 1639,
									"end": 1648,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 1635,
									"end": 1653,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1629,
									"end": 1654,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 1613,
									"end": 1654,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1613,
									"end": 1654,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1679,
									"end": 1681,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1669,
									"end": 1677,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1666,
									"end": 1682,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 1663,
									"end": 1699,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 1663,
									"end": 1699,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 1663,
									"end": 1699,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 1695,
									"end": 1696,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 1692,
									"end": 1693,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 1685,
									"end": 1697,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 1663,
									"end": 1699,
									"name": "tag",
									"source": 17,
									"value": "47"
								},
								{
									"begin": 1663,
									"end": 1699,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1663,
									"end": 1699,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1718,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 1773,
									"end": 1780,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 1762,
									"end": 1770,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 1751,
									"end": 1760,
									"name": "DUP10",
									"source": 17
								},
								{
									"begin": 1747,
									"end": 1771,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1718,
									"end": 1781,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "23"
								},
								{
									"begin": 1718,
									"end": 1781,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1718,
									"end": 1781,
									"name": "tag",
									"source": 17,
									"value": "48"
								},
								{
									"begin": 1718,
									"end": 1781,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1708,
									"end": 1781,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 1708,
									"end": 1781,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1708,
									"end": 1781,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1800,
									"end": 1849,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1847,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 1834,
									"end": 1843,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1830,
									"end": 1848,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1800,
									"end": 1849,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1800,
									"end": 1849,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1800,
									"end": 1849,
									"name": "tag",
									"source": 17,
									"value": "49"
								},
								{
									"begin": 1800,
									"end": 1849,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1790,
									"end": 1849,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1790,
									"end": 1849,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1868,
									"end": 1917,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 1913,
									"end": 1915,
									"name": "PUSH",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 1902,
									"end": 1911,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1898,
									"end": 1916,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1868,
									"end": 1917,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1868,
									"end": 1917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1868,
									"end": 1917,
									"name": "tag",
									"source": 17,
									"value": "50"
								},
								{
									"begin": 1868,
									"end": 1917,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1858,
									"end": 1917,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 1858,
									"end": 1917,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1936,
									"end": 1986,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 1981,
									"end": 1984,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 1970,
									"end": 1979,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 1936,
									"end": 1986,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 1936,
									"end": 1986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 1936,
									"end": 1986,
									"name": "tag",
									"source": 17,
									"value": "51"
								},
								{
									"begin": 1936,
									"end": 1986,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 1926,
									"end": 1986,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1926,
									"end": 1986,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "SWAP3",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "SWAP6",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "SWAP4",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 1173,
									"end": 1992,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2205,
									"end": 2585,
									"name": "tag",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 2205,
									"end": 2585,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2284,
									"end": 2285,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2280,
									"end": 2292,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2280,
									"end": 2292,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2280,
									"end": 2292,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2280,
									"end": 2292,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2327,
									"end": 2339,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2327,
									"end": 2339,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2327,
									"end": 2339,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2348,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 2348,
									"end": 2409,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "PUSH",
									"source": 17,
									"value": "7F"
								},
								{
									"begin": 2394,
									"end": 2400,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2390,
									"end": 2407,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 2380,
									"end": 2407,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2380,
									"end": 2407,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2348,
									"end": 2409,
									"name": "tag",
									"source": 17,
									"value": "54"
								},
								{
									"begin": 2348,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2455,
									"end": 2457,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2447,
									"end": 2453,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 2424,
									"end": 2442,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2421,
									"end": 2459,
									"name": "SUB",
									"source": 17
								},
								{
									"begin": 2418,
									"end": 2579,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2418,
									"end": 2579,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2501,
									"end": 2511,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B71"
								},
								{
									"begin": 2496,
									"end": 2499,
									"name": "PUSH",
									"source": 17,
									"value": "E0"
								},
								{
									"begin": 2492,
									"end": 2512,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 2489,
									"end": 2490,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2482,
									"end": 2513,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2536,
									"end": 2540,
									"name": "PUSH",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 2533,
									"end": 2534,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2526,
									"end": 2541,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2564,
									"end": 2568,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 2561,
									"end": 2562,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2554,
									"end": 2569,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 2418,
									"end": 2579,
									"name": "tag",
									"source": 17,
									"value": "55"
								},
								{
									"begin": 2418,
									"end": 2579,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2418,
									"end": 2579,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2205,
									"end": 2585,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 2205,
									"end": 2585,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 2205,
									"end": 2585,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2205,
									"end": 2585,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2716,
									"end": 3261,
									"name": "tag",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 2716,
									"end": 3261,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2818,
									"end": 2820,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2813,
									"end": 2816,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 2810,
									"end": 2821,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 2807,
									"end": 3255,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2807,
									"end": 3255,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 2807,
									"end": 3255,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2854,
									"end": 2855,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2879,
									"end": 2884,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2875,
									"end": 2877,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2868,
									"end": 2885,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2924,
									"end": 2928,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2920,
									"end": 2922,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2910,
									"end": 2929,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": 2994,
									"end": 2996,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 2982,
									"end": 2992,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2978,
									"end": 2997,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 2975,
									"end": 2976,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2971,
									"end": 2998,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 2965,
									"end": 2969,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2961,
									"end": 2999,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3030,
									"end": 3034,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3018,
									"end": 3028,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3015,
									"end": 3035,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3012,
									"end": 3059,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3012,
									"end": 3059,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 3012,
									"end": 3059,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3053,
									"end": 3057,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3012,
									"end": 3059,
									"name": "tag",
									"source": 17,
									"value": "59"
								},
								{
									"begin": 3012,
									"end": 3059,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3108,
									"end": 3110,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3099,
									"end": 3111,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3096,
									"end": 3097,
									"name": "PUSH",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 3092,
									"end": 3112,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 3086,
									"end": 3090,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3082,
									"end": 3113,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3072,
									"end": 3113,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 3072,
									"end": 3113,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "tag",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3181,
									"end": 3183,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3174,
									"end": 3179,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3171,
									"end": 3184,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3226,
									"end": 3243,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 3226,
									"end": 3243,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3226,
									"end": 3243,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3207,
									"end": 3208,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3196,
									"end": 3209,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "60"
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "tag",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 3163,
									"end": 3245,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3167,
									"end": 3170,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3167,
									"end": 3170,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 3167,
									"end": 3170,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2807,
									"end": 3255,
									"name": "tag",
									"source": 17,
									"value": "58"
								},
								{
									"begin": 2807,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2716,
									"end": 3261,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2716,
									"end": 3261,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2716,
									"end": 3261,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 2716,
									"end": 3261,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3437,
									"end": 4789,
									"name": "tag",
									"source": 17,
									"value": "16"
								},
								{
									"begin": 3437,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3557,
									"end": 3567,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3557,
									"end": 3567,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3579,
									"end": 3609,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3579,
									"end": 3609,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3576,
									"end": 3632,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 3576,
									"end": 3632,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 3576,
									"end": 3632,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 3612,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 3612,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "22"
								},
								{
									"begin": 3612,
									"end": 3630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3612,
									"end": 3630,
									"name": "tag",
									"source": 17,
									"value": "66"
								},
								{
									"begin": 3612,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3641,
									"end": 3738,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 3731,
									"end": 3737,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3691,
									"end": 3729,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 3723,
									"end": 3727,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3717,
									"end": 3728,
									"name": "SLOAD",
									"source": 17
								},
								{
									"begin": 3691,
									"end": 3729,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "25"
								},
								{
									"begin": 3691,
									"end": 3729,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3691,
									"end": 3729,
									"name": "tag",
									"source": 17,
									"value": "68"
								},
								{
									"begin": 3691,
									"end": 3729,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3685,
									"end": 3689,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 3641,
									"end": 3738,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "27"
								},
								{
									"begin": 3641,
									"end": 3738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3641,
									"end": 3738,
									"name": "tag",
									"source": 17,
									"value": "67"
								},
								{
									"begin": 3641,
									"end": 3738,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 3793,
									"end": 3797,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 3793,
									"end": 3797,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 3857,
									"end": 3859,
									"name": "PUSH",
									"source": 17,
									"value": "1F"
								},
								{
									"begin": 3846,
									"end": 3860,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 3846,
									"end": 3860,
									"name": "GT",
									"source": 17
								},
								{
									"begin": 3874,
									"end": 3875,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3869,
									"end": 4532,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 3869,
									"end": 4532,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 3869,
									"end": 4532,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 3869,
									"end": 4532,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4576,
									"end": 4577,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 4593,
									"end": 4599,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4590,
									"end": 4679,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4590,
									"end": 4679,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 4590,
									"end": 4679,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4645,
									"end": 4664,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4645,
									"end": 4664,
									"name": "DUP4",
									"source": 17
								},
								{
									"begin": 4645,
									"end": 4664,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4639,
									"end": 4665,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 4590,
									"end": 4679,
									"name": "tag",
									"source": 17,
									"value": "71"
								},
								{
									"begin": 4590,
									"end": 4679,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3394,
									"end": 3395,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 3390,
									"end": 3401,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3390,
									"end": 3401,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3390,
									"end": 3401,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 3386,
									"end": 3410,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 3382,
									"end": 3411,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 3372,
									"end": 3412,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3418,
									"end": 3419,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 3414,
									"end": 3425,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 3414,
									"end": 3425,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 3414,
									"end": 3425,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 3369,
									"end": 3426,
									"name": "OR",
									"source": 17
								},
								{
									"begin": 4692,
									"end": 4773,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4692,
									"end": 4773,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 3839,
									"end": 4783,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "62"
								},
								{
									"begin": 3839,
									"end": 4783,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3869,
									"end": 4532,
									"name": "tag",
									"source": 17,
									"value": "70"
								},
								{
									"begin": 3869,
									"end": 4532,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2670,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 2656,
									"end": 2670,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2656,
									"end": 2670,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 2700,
									"end": 2704,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 2687,
									"end": 2705,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 2687,
									"end": 2705,
									"name": "KECCAK256",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3905,
									"end": 3925,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 3905,
									"end": 3925,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 3905,
									"end": 3925,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "tag",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4037,
									"end": 4044,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4034,
									"end": 4035,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4031,
									"end": 4045,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "DUP7",
									"source": 17
								},
								{
									"begin": 4126,
									"end": 4145,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4120,
									"end": 4146,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 4105,
									"end": 4147,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4105,
									"end": 4147,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 4218,
									"end": 4245,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 4218,
									"end": 4245,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4218,
									"end": 4245,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4218,
									"end": 4245,
									"name": "SWAP5",
									"source": 17
								},
								{
									"begin": 4186,
									"end": 4187,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 4174,
									"end": 4188,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4174,
									"end": 4188,
									"name": "SWAP2",
									"source": 17
								},
								{
									"begin": 4174,
									"end": 4188,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4174,
									"end": 4188,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4053,
									"end": 4072,
									"name": "DUP5",
									"source": 17
								},
								{
									"begin": 4053,
									"end": 4072,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "74"
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "tag",
									"source": 17,
									"value": "76"
								},
								{
									"begin": 4023,
									"end": 4259,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 4027,
									"end": 4030,
									"name": "POP",
									"source": 17
								},
								{
									"begin": 4287,
									"end": 4293,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4278,
									"end": 4285,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 4275,
									"end": 4294,
									"name": "LT",
									"source": 17
								},
								{
									"begin": 4272,
									"end": 4473,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 4272,
									"end": 4473,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "77"
								},
								{
									"begin": 4272,
									"end": 4473,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 4348,
									"end": 4367,
									"name": "DUP8",
									"source": 17
								},
								{
									"begin": 4348,
									"end": 4367,
									"name": "DUP6",
									"source": 17
								},
								{
									"begin": 4348,
									"end": 4367,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4342,
									"end": 4368,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4431,
									"end": 4432,
									"name": "PUSH",
									"source": 17,
									"value": "3"
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "DUP9",
									"source": 17
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4427,
									"end": 4441,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 4443,
									"end": 4446,
									"name": "PUSH",
									"source": 17,
									"value": "F8"
								},
								{
									"begin": 4423,
									"end": 4447,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4419,
									"end": 4456,
									"name": "SHR",
									"source": 17
								},
								{
									"begin": 4415,
									"end": 4457,
									"name": "NOT",
									"source": 17
								},
								{
									"begin": 4400,
									"end": 4458,
									"name": "AND",
									"source": 17
								},
								{
									"begin": 4385,
									"end": 4459,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4385,
									"end": 4459,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": 4272,
									"end": 4473,
									"name": "tag",
									"source": 17,
									"value": "77"
								},
								{
									"begin": 4272,
									"end": 4473,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4519,
									"end": 4520,
									"name": "PUSH",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 4503,
									"end": 4517,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4503,
									"end": 4517,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 4503,
									"end": 4517,
									"name": "SHL",
									"source": 17
								},
								{
									"begin": 4499,
									"end": 4521,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 4486,
									"end": 4522,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 4486,
									"end": 4522,
									"name": "SSTORE",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3437,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 3437,
									"end": 4789,
									"name": "tag",
									"source": 17,
									"value": "29"
								},
								{
									"begin": 3437,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 5713,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab8a5c674b37dce16c3645c864c042a2673fcf3aba024145aecd65f625b51f7b64736f6c63430008140033",
									".code": [
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "67A52793"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "945098DB"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "C38CD0B5"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "C38CD0B5"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "D03153AA"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "945098DB"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "A738C7DF"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "74A66061"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "74A66061"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "81A06B73"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "8BC7E8C4"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "67A52793"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "2A5C792A"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "36A43F2B"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "36A43F2B"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "378A653C"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "3F595E29"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "4D20D0F8"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "2A5C792A"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "2C76D7A6"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "3043D4D9"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "117DA1EE"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "117DA1EE"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "1694505E"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "D06DDD"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 399,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 3417,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3417,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3126,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3112,
											"end": 3126,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3127,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3087,
											"end": 3128,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3087,
											"end": 3128,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2947,
											"end": 3134,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 7278,
											"end": 7454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7278,
											"end": 7454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 622,
											"end": 663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 622,
											"end": 663,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 663,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 622,
											"end": 663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 622,
											"end": 663,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 622,
											"end": 663,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 622,
											"end": 663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 622,
											"end": 663,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 622,
											"end": 663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 622,
											"end": 663,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 622,
											"end": 663,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3515,
											"end": 3547,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3485,
											"end": 3487,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 622,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3678,
											"end": 3696,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3559,
											"end": 3736,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5614,
											"end": 5711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 5614,
											"end": 5711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 669,
											"end": 703,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 669,
											"end": 703,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 669,
											"end": 703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 669,
											"end": 703,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 669,
											"end": 703,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 4674,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4674,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5395,
											"end": 5431,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5395,
											"end": 5431,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5383,
											"end": 5385,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5368,
											"end": 5386,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5253,
											"end": 5437,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 565,
											"end": 615,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 565,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 565,
											"end": 615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 565,
											"end": 615,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 484,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 484,
											"end": 515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5966,
											"end": 5981,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5966,
											"end": 5981,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5966,
											"end": 5981,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5948,
											"end": 5982,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5948,
											"end": 5982,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6033,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6033,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6033,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6033,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6015,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5998,
											"end": 6016,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5998,
											"end": 6016,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5991,
											"end": 6034,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6043,
											"end": 6077,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5898,
											"end": 5900,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 5694,
											"end": 6083,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1184,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1184,
											"end": 2113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 709,
											"end": 748,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 709,
											"end": 748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 709,
											"end": 748,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 709,
											"end": 748,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 709,
											"end": 748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 709,
											"end": 748,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 709,
											"end": 748,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 709,
											"end": 748,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 709,
											"end": 748,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 709,
											"end": 748,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 584,
											"end": 608,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 584,
											"end": 608,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "PUSH",
											"source": 9,
											"value": "10000"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 584,
											"end": 608,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 584,
											"end": 608,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7954,
											"end": 7960,
											"name": "PUSH",
											"source": 17,
											"value": "FFFF"
										},
										{
											"begin": 7942,
											"end": 7961,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7942,
											"end": 7961,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7942,
											"end": 7961,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7924,
											"end": 7962,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7912,
											"end": 7914,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7897,
											"end": 7915,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 584,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 7780,
											"end": 7968,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 3554,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3554,
											"end": 3997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 650,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 615,
											"end": 650,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 615,
											"end": 650,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 650,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 615,
											"end": 650,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 615,
											"end": 650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 615,
											"end": 650,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 615,
											"end": 650,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 650,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 551,
											"end": 578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 551,
											"end": 578,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 551,
											"end": 578,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 551,
											"end": 578,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 551,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 551,
											"end": 578,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 551,
											"end": 578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 551,
											"end": 578,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 578,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 2119,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2119,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 5319,
											"end": 5608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5319,
											"end": 5608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 657,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 657,
											"end": 710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 657,
											"end": 710,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 657,
											"end": 710,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 522,
											"end": 554,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 522,
											"end": 554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 522,
											"end": 554,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 522,
											"end": 554,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 522,
											"end": 554,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 522,
											"end": 554,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 522,
											"end": 554,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 522,
											"end": 554,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3522,
											"end": 3523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3519,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3508,
											"end": 3523,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10122,
											"end": 10124,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10104,
											"end": 10125,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 10141,
											"end": 10159,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10141,
											"end": 10159,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10141,
											"end": 10159,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10134,
											"end": 10163,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10179,
											"end": 10197,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10179,
											"end": 10197,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10179,
											"end": 10197,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10172,
											"end": 10204,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10221,
											"end": 10239,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3563,
											"end": 3573,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3578,
											"end": 3589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3589,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3562,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3548,
											"end": 3562,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3548,
											"end": 3574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3548,
											"end": 3574,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3589,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3548,
											"end": 3589,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10641,
											"end": 10643,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10623,
											"end": 10644,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10680,
											"end": 10682,
											"name": "PUSH",
											"source": 17,
											"value": "D"
										},
										{
											"begin": 10660,
											"end": 10678,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10660,
											"end": 10678,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10660,
											"end": 10678,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10653,
											"end": 10683,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8525B9CDD59999A58DA595B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10699,
											"end": 10717,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10699,
											"end": 10717,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10699,
											"end": 10717,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10692,
											"end": 10735,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10752,
											"end": 10770,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10752,
											"end": 10770,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 10439,
											"end": 10776,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 3540,
											"end": 3607,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3618,
											"end": 3642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 3646,
											"end": 3675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3646,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 3675,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3617,
											"end": 3675,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 3731,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3708,
											"end": 3719,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3722,
											"end": 3727,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3708,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3708,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3707,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3707,
											"end": 3744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3707,
											"end": 3744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3707,
											"end": 3744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3707,
											"end": 3744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3707,
											"end": 3744,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3707,
											"end": 3744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3686,
											"end": 3744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3771,
											"end": 3786,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3771,
											"end": 3791,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3791,
											"name": "PUSH",
											"source": 9,
											"value": "AD5C4648"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 3771,
											"end": 3793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3771,
											"end": 3793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3755,
											"end": 3793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3848,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3858,
											"end": 3864,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3858,
											"end": 3871,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3871,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3871,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3892,
											"end": 3919,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3928,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3929,
											"end": 3930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3922,
											"end": 3931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4012,
											"end": 4016,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4035,
											"end": 4040,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4035,
											"end": 4040,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4021,
											"end": 4031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4003,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 3978,
											"end": 4003,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3978,
											"end": 4018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3978,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3978,
											"end": 4031,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4031,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4031,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3978,
											"end": 4031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3978,
											"end": 4031,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 3978,
											"end": 4031,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3977,
											"end": 4040,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 4040,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 3977,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3977,
											"end": 4040,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 3977,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4141,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4125,
											"end": 4141,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4141,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4168,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4168,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 4040,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 4040,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4066,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4066,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4084,
											"name": "PUSH",
											"source": 9,
											"value": "74A66061"
										},
										{
											"begin": 4062,
											"end": 4084,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4085,
											"end": 4100,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 4040,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 4040,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4141,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4125,
											"end": 4141,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4153,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4143,
											"end": 4153,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4168,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 4169,
											"end": 4170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 4155,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4155,
											"end": 4171,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 4062,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 4062,
											"end": 4172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 4062,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4278,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4058,
											"end": 4278,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4239,
											"end": 4250,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4226,
											"end": 4250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4250,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4058,
											"end": 4278,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 4058,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3878,
											"end": 4288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3873,
											"end": 3876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3873,
											"end": 3876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3834,
											"end": 4288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4304,
											"end": 4314,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4327,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4298,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4298,
											"end": 4328,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4298,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4355,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4342,
											"end": 4355,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4339,
											"end": 4601,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4414,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 4401,
											"end": 4414,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4385,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4370,
											"end": 4385,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4418,
											"end": 4423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4389,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4389,
											"end": 4414,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4414,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 4401,
											"end": 4414,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4389,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4389,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4389,
											"end": 4414,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4389,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4388,
											"end": 4423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4388,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4423,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4437,
											"end": 4463,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4370,
											"end": 4423,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4475,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4466,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4437,
											"end": 4485,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4516,
											"end": 4523,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 4499,
											"end": 4512,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4499,
											"end": 4523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4499,
											"end": 4523,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4559,
											"end": 4569,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15602,
											"end": 15653,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4537,
											"end": 4558,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4558,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 4537,
											"end": 4558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4537,
											"end": 4590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4537,
											"end": 4590,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4356,
											"end": 4601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4601,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4339,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3490,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 4668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7278,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7385,
											"end": 7390,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 7363,
											"end": 7381,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7363,
											"end": 7390,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7363,
											"end": 7390,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16576,
											"end": 16578,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16558,
											"end": 16579,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16558,
											"end": 16579,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16558,
											"end": 16579,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16615,
											"end": 16616,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 16595,
											"end": 16613,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16595,
											"end": 16613,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16595,
											"end": 16613,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16588,
											"end": 16617,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21534C5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16648,
											"end": 16650,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 16633,
											"end": 16651,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16633,
											"end": 16651,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16626,
											"end": 16660,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16692,
											"end": 16694,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16677,
											"end": 16695,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16374,
											"end": 16701,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 7355,
											"end": 7399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7409,
											"end": 7426,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 7409,
											"end": 7447,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5661,
											"end": 5679,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5698,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5704,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4760,
											"end": 4761,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4746,
											"end": 4761,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16908,
											"end": 16910,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16890,
											"end": 16911,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16947,
											"end": 16948,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 16927,
											"end": 16945,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 16927,
											"end": 16945,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16927,
											"end": 16945,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16920,
											"end": 16949,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "573E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16965,
											"end": 16983,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 16958,
											"end": 16991,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17008,
											"end": 17026,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 17008,
											"end": 17026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 16706,
											"end": 17032,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4738,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4797,
											"end": 4807,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4823,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4787,
											"end": 4823,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17239,
											"end": 17241,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17221,
											"end": 17242,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17278,
											"end": 17279,
											"name": "PUSH",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17258,
											"end": 17276,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17251,
											"end": 17280,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2162616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17296,
											"end": 17314,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 17296,
											"end": 17314,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17296,
											"end": 17314,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17289,
											"end": 17327,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 17344,
											"end": 17362,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 17037,
											"end": 17368,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4779,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4891,
											"end": 4904,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4891,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4868,
											"end": 4879,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4887,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 4868,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4868,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4867,
											"end": 4904,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4904,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4867,
											"end": 4904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4867,
											"end": 4904,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4867,
											"end": 4904,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4904,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4847,
											"end": 4904,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4920,
											"end": 4930,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4943,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4914,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4944,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4914,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4960,
											"end": 4969,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4979,
											"end": 4985,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 4979,
											"end": 4992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4975,
											"end": 4992,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5013,
											"end": 5040,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5049,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 5050,
											"end": 5051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 5043,
											"end": 5052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5114,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5114,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5133,
											"end": 5137,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5155,
											"end": 5160,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 5155,
											"end": 5160,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5151,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5099,
											"end": 5114,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 5099,
											"end": 5124,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5099,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 5099,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5099,
											"end": 5151,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5151,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5151,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 5099,
											"end": 5151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5099,
											"end": 5151,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5099,
											"end": 5151,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5098,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5098,
											"end": 5160,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5098,
											"end": 5160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5098,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 5098,
											"end": 5160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5098,
											"end": 5160,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5098,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5066,
											"end": 5160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5178,
											"end": 5203,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5178,
											"end": 5203,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5297,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5174,
											"end": 5297,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5258,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15602,
											"end": 15653,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5247,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 5223,
											"end": 5247,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 5223,
											"end": 5282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5297,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5174,
											"end": 5297,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4999,
											"end": 5307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4999,
											"end": 5307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4994,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4994,
											"end": 4997,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4955,
											"end": 5307,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4728,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4674,
											"end": 5313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 484,
											"end": 515,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 484,
											"end": 515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 1396,
											"end": 1411,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1411,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 1396,
											"end": 1411,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1411,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1396,
											"end": 1411,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1395,
											"end": 1411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 1387,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1387,
											"end": 1427,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1387,
											"end": 1427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1427,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17575,
											"end": 17577,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1387,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1387,
											"end": 1427,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1387,
											"end": 1427,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17557,
											"end": 17578,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17614,
											"end": 17616,
											"name": "PUSH",
											"source": 17,
											"value": "B"
										},
										{
											"begin": 17594,
											"end": 17612,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 17594,
											"end": 17612,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17594,
											"end": 17612,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17587,
											"end": 17617,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1A5B9A5D1A585B1A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17633,
											"end": 17651,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 17633,
											"end": 17651,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17633,
											"end": 17651,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17626,
											"end": 17667,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17684,
											"end": 17702,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 17684,
											"end": 17702,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1387,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 17373,
											"end": 17708,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1387,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 1387,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1488,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1488,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1445,
											"end": 1488,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1437,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1437,
											"end": 1511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1437,
											"end": 1511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1511,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17915,
											"end": 17917,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1437,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1437,
											"end": 1511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1437,
											"end": 1511,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17897,
											"end": 17918,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 17954,
											"end": 17956,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 17934,
											"end": 17952,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 17934,
											"end": 17952,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17934,
											"end": 17952,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17927,
											"end": 17957,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4D69736D617463686564206C656E67746873"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17973,
											"end": 17991,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 17973,
											"end": 17991,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 17973,
											"end": 17991,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 17966,
											"end": 18014,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18031,
											"end": 18049,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 18031,
											"end": 18049,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1437,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 17713,
											"end": 18055,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1437,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 1437,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 1521,
											"end": 1551,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1551,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "PUSH",
											"source": 9,
											"value": "10000"
										},
										{
											"begin": 1561,
											"end": 1585,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1551,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1561,
											"end": 1585,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1521,
											"end": 1534,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1534,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1670,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1670,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 1699,
											"end": 1717,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1717,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1718,
											"end": 1719,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1699,
											"end": 1720,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1720,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1729,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1699,
											"end": 1729,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1691,
											"end": 1751,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1751,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1751,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1751,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18262,
											"end": 18264,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 1751,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1691,
											"end": 1751,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18244,
											"end": 18265,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18301,
											"end": 18303,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 18281,
											"end": 18299,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 18281,
											"end": 18299,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18281,
											"end": 18299,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18274,
											"end": 18304,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696450657263656E74616765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18320,
											"end": 18338,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 18320,
											"end": 18338,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18320,
											"end": 18338,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18313,
											"end": 18360,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18377,
											"end": 18395,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 18377,
											"end": 18395,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1691,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 18060,
											"end": 18401,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1691,
											"end": 1751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 1691,
											"end": 1751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1802,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1802,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1803,
											"end": 1804,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1784,
											"end": 1805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1784,
											"end": 1805,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 1765,
											"end": 1805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1805,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1881,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1881,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 1882,
											"end": 1883,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1874,
											"end": 1884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1874,
											"end": 1884,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 1874,
											"end": 1884,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1957,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1939,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1941,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 1921,
											"end": 1942,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1921,
											"end": 1942,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1832,
											"end": 1957,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1820,
											"end": 1958,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1672,
											"end": 1675,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 1672,
											"end": 1675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 1672,
											"end": 1675,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 1672,
											"end": 1675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1675,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1672,
											"end": 1675,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1632,
											"end": 1969,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1986,
											"end": 2001,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2005,
											"end": 2010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 1986,
											"end": 2010,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 1978,
											"end": 2022,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1978,
											"end": 2022,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1978,
											"end": 2022,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 2022,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18608,
											"end": 18610,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1978,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1978,
											"end": 2022,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 2022,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18590,
											"end": 18611,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18647,
											"end": 18648,
											"name": "PUSH",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 18627,
											"end": 18645,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 18627,
											"end": 18645,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18627,
											"end": 18645,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18620,
											"end": 18649,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "743D313030303"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18665,
											"end": 18683,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 18665,
											"end": 18683,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 18665,
											"end": 18683,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18658,
											"end": 18695,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18712,
											"end": 18730,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 18712,
											"end": 18730,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1978,
											"end": 2022,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 18406,
											"end": 18736,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1978,
											"end": 2022,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 1978,
											"end": 2022,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2054,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "PUSH",
											"source": 9,
											"value": "100000000"
										},
										{
											"begin": 2032,
											"end": 2054,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2032,
											"end": 2054,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2106,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A6413C453391B24B1553EE2908B9FDB9D8528511A0B9983F82D823531CEA38B8"
										},
										{
											"begin": 2069,
											"end": 2106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2069,
											"end": 2106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2085,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2085,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2078,
											"end": 2085,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2105,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2105,
											"name": "DUP10",
											"source": 9
										},
										{
											"begin": 2087,
											"end": 2105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 2069,
											"end": 2106,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2106,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 1377,
											"end": 2113,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1184,
											"end": 2113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3690,
											"end": 3697,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3690,
											"end": 3697,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3721,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 3713,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3713,
											"end": 3735,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 3709,
											"end": 3991,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3778,
											"end": 3784,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3786,
											"end": 3795,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3806,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3808,
											"end": 3813,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 3758,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3758,
											"end": 3814,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3758,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3751,
											"end": 3814,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3751,
											"end": 3814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3751,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3751,
											"end": 3814,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3991,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 3709,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3847,
											"end": 3857,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3835,
											"end": 3843,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 3835,
											"end": 3857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3835,
											"end": 3857,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3831,
											"end": 3991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3831,
											"end": 3991,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3930,
											"end": 3935,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3880,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 3880,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3831,
											"end": 3991,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 3831,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20007,
											"end": 20009,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19989,
											"end": 20010,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20046,
											"end": 20047,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20026,
											"end": 20044,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20019,
											"end": 20048,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10AAAB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20064,
											"end": 20082,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 20064,
											"end": 20082,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20064,
											"end": 20082,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20057,
											"end": 20090,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20107,
											"end": 20125,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 20107,
											"end": 20125,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3967,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 19805,
											"end": 20131,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3831,
											"end": 3991,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3831,
											"end": 3991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3554,
											"end": 3997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2216,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2220,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20338,
											"end": 20340,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20320,
											"end": 20341,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20377,
											"end": 20378,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20350,
											"end": 20379,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "213E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20395,
											"end": 20413,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 20395,
											"end": 20413,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20395,
											"end": 20413,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20388,
											"end": 20421,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20438,
											"end": 20456,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 20438,
											"end": 20456,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 20136,
											"end": 20462,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 2191,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2258,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2258,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "PUSH",
											"source": 9,
											"value": "10000"
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "PUSH",
											"source": 9,
											"value": "FFFF"
										},
										{
											"begin": 2282,
											"end": 2292,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2279,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2262,
											"end": 2279,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2279,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2279,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2262,
											"end": 2292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 2262,
											"end": 2292,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 2261,
											"end": 2301,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2261,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2301,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 2261,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2247,
											"end": 2301,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2311,
											"end": 2333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 2247,
											"end": 2301,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2353,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2336,
											"end": 2359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 2336,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2311,
											"end": 2359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2386,
											"end": 2389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2369,
											"end": 2389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2389,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2408,
											"end": 2426,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20338,
											"end": 20340,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20320,
											"end": 20341,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20377,
											"end": 20378,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20357,
											"end": 20375,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20350,
											"end": 20379,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "213E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20395,
											"end": 20413,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 20395,
											"end": 20413,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20395,
											"end": 20413,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20388,
											"end": 20421,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20438,
											"end": 20456,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 20438,
											"end": 20456,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 20136,
											"end": 20462,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 2400,
											"end": 2434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2444,
											"end": 2554,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2504,
											"name": "PUSH",
											"source": 9,
											"value": "AD5C4648"
										},
										{
											"begin": 2484,
											"end": 2504,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2499,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2484,
											"end": 2506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 2484,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2519,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2533,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2544,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2553,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "385"
										},
										{
											"begin": 2444,
											"end": 2554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2554,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2444,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2614,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2599,
											"end": 2614,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "15AB88C9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2564,
											"end": 2668,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2599,
											"end": 2614,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2614,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2619,
											"name": "PUSH",
											"source": 9,
											"value": "AD5C4648"
										},
										{
											"begin": 2599,
											"end": 2619,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2614,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "STATICCALL",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 2599,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 2599,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2632,
											"end": 2647,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 2632,
											"end": 2647,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2632,
											"end": 2647,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2667,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2667,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2667,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2650,
											"end": 2667,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 2564,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2564,
											"end": 2668,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 2564,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 2693,
											"end": 2703,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2719,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 2687,
											"end": 2720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2736,
											"end": 2745,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2761,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 2755,
											"end": 2768,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2768,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2751,
											"end": 2768,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2816,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 2826,
											"end": 2827,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 2819,
											"end": 2828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2819,
											"end": 2828,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2789,
											"end": 2828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2859,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2915,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2906,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2877,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 2863,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "tag",
											"source": 9,
											"value": "399"
										},
										{
											"begin": 2863,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 2862,
											"end": 2915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 2862,
											"end": 2915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2950,
											"end": 2964,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 2964,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 2964,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20669,
											"end": 20671,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20651,
											"end": 20672,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20708,
											"end": 20710,
											"name": "PUSH",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 20688,
											"end": 20706,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 20688,
											"end": 20706,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20688,
											"end": 20706,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20681,
											"end": 20711,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21657468416D6F756E743C3D616D6F756E74666565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20727,
											"end": 20745,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 20727,
											"end": 20745,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20727,
											"end": 20745,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 20720,
											"end": 20771,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 20788,
											"end": 20806,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 20788,
											"end": 20806,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 20467,
											"end": 20812,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 2929,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3021,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3021,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 3004,
											"end": 3395,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3083,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3068,
											"end": 3083,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3049,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3049,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 9,
											"value": "74A66061"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3068,
											"end": 3083,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3085,
											"end": 3094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "DUP12",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 3096,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "tag",
											"source": 9,
											"value": "405"
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3126,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 3129,
											"end": 3137,
											"name": "DUP13",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "408"
										},
										{
											"begin": 3129,
											"end": 3142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3142,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 3129,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3143,
											"end": 3144,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 3129,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "tag",
											"source": 9,
											"value": "410"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 3129,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "tag",
											"source": 9,
											"value": "411"
										},
										{
											"begin": 3129,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "414"
										},
										{
											"begin": 3045,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 3045,
											"end": 3146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "tag",
											"source": 9,
											"value": "416"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 3045,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3197,
											"end": 3207,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3196,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3208,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3178,
											"end": 3221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3178,
											"end": 3221,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3271,
											"end": 3281,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3310,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3254,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3283,
											"end": 3298,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP9",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP10",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP11",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D40"
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "F652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D41"
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3243,
											"end": 3311,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3348,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3360,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3333,
											"end": 3362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "tag",
											"source": 9,
											"value": "423"
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3333,
											"end": 3362,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "tag",
											"source": 9,
											"value": "417"
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 3041,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2775,
											"end": 3405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2775,
											"end": 3405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 2770,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2770,
											"end": 2773,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "tag",
											"source": 9,
											"value": "394"
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 3405,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 3411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 3411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 3411,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2119,
											"end": 3411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5410,
											"end": 5423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5410,
											"end": 5423,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5410,
											"end": 5427,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 5406,
											"end": 5602,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5494,
											"end": 5507,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5512,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5456,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5486,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5456,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5507,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5486,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3F"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5443,
											"end": 5512,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5534,
											"end": 5541,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 5526,
											"end": 5560,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 23365,
											"end": 23367,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5526,
											"end": 5560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5526,
											"end": 5560,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 23347,
											"end": 23368,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23404,
											"end": 23406,
											"name": "PUSH",
											"source": 17,
											"value": "E"
										},
										{
											"begin": 23384,
											"end": 23402,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 23384,
											"end": 23402,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23384,
											"end": 23402,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23377,
											"end": 23407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1D1C985B9CD9995C91985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23423,
											"end": 23441,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 23423,
											"end": 23441,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23423,
											"end": 23441,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23416,
											"end": 23460,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23477,
											"end": 23495,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 23477,
											"end": 23495,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5526,
											"end": 5560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 23163,
											"end": 23501,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5526,
											"end": 5560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "441"
										},
										{
											"begin": 5526,
											"end": 5560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5590,
											"end": 5591,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5574,
											"end": 5587,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5574,
											"end": 5591,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5406,
											"end": 5602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "435"
										},
										{
											"begin": 5406,
											"end": 5602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5319,
											"end": 5608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "451"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "455"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "466"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7DC7A0D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23726,
											"end": 23758,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 23726,
											"end": 23758,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23708,
											"end": 23759,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23775,
											"end": 23793,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 23775,
											"end": 23793,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23775,
											"end": 23793,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23768,
											"end": 23802,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23768,
											"end": 23802,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23768,
											"end": 23802,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23818,
											"end": 23836,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 23818,
											"end": 23836,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23818,
											"end": 23836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23811,
											"end": 23845,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23811,
											"end": 23845,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23811,
											"end": 23845,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23681,
											"end": 23699,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 23681,
											"end": 23699,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 23506,
											"end": 23851,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "466"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "291"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4507,
											"end": 5237,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 4507,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 4632,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4644,
											"end": 4670,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4688,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 4673,
											"end": 4702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 4673,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4762,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4747,
											"end": 4762,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D06CA61F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4702,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4702,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4712,
											"end": 4744,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4712,
											"end": 4744,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4747,
											"end": 4762,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4762,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4762,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4762,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4776,
											"name": "PUSH",
											"source": 11,
											"value": "D06CA61F"
										},
										{
											"begin": 4747,
											"end": 4776,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4777,
											"end": 4786,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4777,
											"end": 4786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4702,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4644,
											"end": 4702,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 4747,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 4747,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 4747,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4712,
											"end": 4798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4712,
											"end": 4798,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4893,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 4866,
											"end": 4883,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4866,
											"end": 4883,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4863,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 4858,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 4858,
											"end": 4883,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4883,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 4858,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4858,
											"end": 4883,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 4858,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4851,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 4836,
											"end": 4854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "tag",
											"source": 11,
											"value": "494"
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4854,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 4836,
											"end": 4884,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 4836,
											"end": 4884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4836,
											"end": 4884,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 4836,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 4835,
											"end": 4893,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4893,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 4835,
											"end": 4893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4893,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 4835,
											"end": 4893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4927,
											"end": 4942,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4927,
											"end": 4942,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4927,
											"end": 4942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4927,
											"end": 4942,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4927,
											"end": 4942,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15602,
											"end": 15653,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4808,
											"end": 4893,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4808,
											"end": 4893,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4904,
											"end": 4918,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4918,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4918,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 4904,
											"end": 4918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "tag",
											"source": 11,
											"value": "499"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 4904,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 4904,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4992,
											"end": 5007,
											"name": "PUSH",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 4992,
											"end": 5007,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18CBAFE5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4965,
											"end": 4989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 4989,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4992,
											"end": 5007,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5007,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5029,
											"name": "PUSH",
											"source": 11,
											"value": "18CBAFE5"
										},
										{
											"begin": 4992,
											"end": 5029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "DUP12",
											"source": 11
										},
										{
											"begin": 5043,
											"end": 5052,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5066,
											"end": 5082,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5066,
											"end": 5082,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5141,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 5132,
											"end": 5141,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5163,
											"name": "DUP14",
											"source": 11
										},
										{
											"begin": 5155,
											"end": 5163,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5177,
											"end": 5192,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "502"
										},
										{
											"begin": 4992,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "491"
										},
										{
											"begin": 4992,
											"end": 5202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 4992,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4965,
											"end": 5202,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4965,
											"end": 5202,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5227,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5228,
											"end": 5229,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 5220,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "tag",
											"source": 11,
											"value": "507"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5220,
											"end": 5230,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5213,
											"end": 5230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 5237,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 5237,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 5237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 5237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 5237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 5237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 5237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 6659,
											"name": "tag",
											"source": 11,
											"value": "366"
										},
										{
											"begin": 5855,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "PUSH",
											"source": 11,
											"value": "B"
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CDCA1753"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 5982,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5982,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 5982,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5975,
											"end": 5982,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6046,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6062,
											"name": "PUSH",
											"source": 11,
											"value": "CDCA1753"
										},
										{
											"begin": 6031,
											"end": 6062,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 6070,
											"end": 6079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "510"
										},
										{
											"begin": 6031,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 6031,
											"end": 6080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 6031,
											"end": 6080,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6003,
											"end": 6080,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6003,
											"end": 6080,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6181,
											"end": 6205,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 6238,
											"end": 6255,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 6238,
											"end": 6255,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 6230,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 6230,
											"end": 6255,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6255,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 6230,
											"end": 6255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6230,
											"end": 6255,
											"name": "tag",
											"source": 11,
											"value": "514"
										},
										{
											"begin": 6230,
											"end": 6255,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6209,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 6209,
											"end": 6256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6209,
											"end": 6226,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6209,
											"end": 6256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 6209,
											"end": 6256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6209,
											"end": 6256,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 6209,
											"end": 6256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6208,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 6208,
											"end": 6265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6208,
											"end": 6265,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6208,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 6208,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6208,
											"end": 6265,
											"name": "tag",
											"source": 11,
											"value": "516"
										},
										{
											"begin": 6208,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6432,
											"end": 6447,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP11",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6573,
											"end": 6588,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15602,
											"end": 15653,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6320,
											"end": 6539,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6564,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6564,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6564,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 6550,
											"end": 6564,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 6550,
											"end": 6601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 6550,
											"end": 6601,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6618,
											"end": 6633,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 6618,
											"end": 6633,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C04B8D59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6618,
											"end": 6633,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6633,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6633,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6633,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6644,
											"name": "PUSH",
											"source": 11,
											"value": "C04B8D59"
										},
										{
											"begin": 6618,
											"end": 6644,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6645,
											"end": 6651,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 6618,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 6618,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 6618,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6611,
											"end": 6652,
											"name": "SWAP9",
											"source": 11
										},
										{
											"begin": 5855,
											"end": 6659,
											"name": "SWAP8",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5855,
											"end": 6659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 919,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 561,
											"end": 919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5966,
											"end": 5981,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5966,
											"end": 5981,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5966,
											"end": 5981,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5948,
											"end": 5982,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6033,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6033,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6018,
											"end": 6033,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5998,
											"end": 6016,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 5998,
											"end": 6016,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5998,
											"end": 6016,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5991,
											"end": 6034,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6050,
											"end": 6068,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6043,
											"end": 6077,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6043,
											"end": 6077,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6043,
											"end": 6077,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "PUSH",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5883,
											"end": 5901,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 759,
											"end": 828,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 758,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 748,
											"end": 758,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 748,
											"end": 758,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 759,
											"end": 828,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 748,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "533"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 748,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 748,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 700,
											"end": 829,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 700,
											"end": 829,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 847,
											"end": 854,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 847,
											"end": 904,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 847,
											"end": 904,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 847,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 847,
											"end": 904,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 859,
											"end": 870,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 859,
											"end": 875,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 859,
											"end": 875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 859,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 859,
											"end": 903,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 859,
											"end": 903,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 890,
											"end": 894,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 879,
											"end": 903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 879,
											"end": 903,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 879,
											"end": 903,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "239"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 839,
											"end": 912,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 28905,
											"end": 28907,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 839,
											"end": 912,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 839,
											"end": 912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 28887,
											"end": 28908,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 28944,
											"end": 28945,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 28924,
											"end": 28942,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 28924,
											"end": 28942,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28924,
											"end": 28942,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28917,
											"end": 28946,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "29AA23"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28962,
											"end": 28980,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 28962,
											"end": 28980,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28962,
											"end": 28980,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28955,
											"end": 28988,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 29005,
											"end": 29023,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 29005,
											"end": 29023,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 839,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 28703,
											"end": 29029,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15620,
											"end": 15652,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15620,
											"end": 15652,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15620,
											"end": 15652,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15602,
											"end": 15653,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 15669,
											"end": 15687,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15662,
											"end": 15696,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 15575,
											"end": 15593,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2031,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2032,
											"end": 2090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 2021,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2021,
											"end": 2091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1985,
											"end": 2091,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 2109,
											"end": 2166,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2121,
											"end": 2132,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2121,
											"end": 2137,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2121,
											"end": 2165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 2141,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "tag",
											"source": 8,
											"value": "548"
										},
										{
											"begin": 2141,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 29236,
											"end": 29238,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 29218,
											"end": 29239,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 29275,
											"end": 29276,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 29255,
											"end": 29273,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 29255,
											"end": 29273,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29255,
											"end": 29273,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29248,
											"end": 29277,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5341"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29293,
											"end": 29311,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 29293,
											"end": 29311,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 29293,
											"end": 29311,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 29286,
											"end": 29318,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 29335,
											"end": 29353,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 29335,
											"end": 29353,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 29034,
											"end": 29359,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "tag",
											"source": 8,
											"value": "549"
										},
										{
											"begin": 2101,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1975,
											"end": 2180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 2180,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "392"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "553"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "553"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "457"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "557"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "558"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "558"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "559"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "557"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "560"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "391434E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23726,
											"end": 23758,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 23726,
											"end": 23758,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23708,
											"end": 23759,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23775,
											"end": 23793,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 23775,
											"end": 23793,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23775,
											"end": 23793,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23768,
											"end": 23802,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 23768,
											"end": 23802,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23768,
											"end": 23802,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23818,
											"end": 23836,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 23818,
											"end": 23836,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 23818,
											"end": 23836,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 23811,
											"end": 23845,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 23811,
											"end": 23845,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 23811,
											"end": 23845,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 23681,
											"end": 23699,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 23681,
											"end": 23699,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 23506,
											"end": 23851,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "560"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "559"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "563"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "562"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "563"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "564"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3678,
											"end": 3696,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3678,
											"end": 3696,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 3736,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "564"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "462"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "566"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E602DF05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "566"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "568"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4A1406B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3497,
											"end": 3548,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3470,
											"end": 3488,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 3324,
											"end": 3554,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "568"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "571"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3705,
											"end": 3730,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3695,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3678,
											"end": 3696,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3678,
											"end": 3696,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3559,
											"end": 3736,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "571"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 141,
											"name": "tag",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 14,
											"end": 141,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 75,
											"end": 85,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 70,
											"end": 73,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 66,
											"end": 86,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 63,
											"end": 64,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 56,
											"end": 87,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 106,
											"end": 110,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 103,
											"end": 104,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 96,
											"end": 111,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 130,
											"end": 134,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 127,
											"end": 128,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 135,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 146,
											"end": 399,
											"name": "tag",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 146,
											"end": 399,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 218,
											"end": 220,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 221,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 260,
											"end": 264,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 248,
											"end": 265,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 248,
											"end": 265,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 280,
											"end": 314,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 280,
											"end": 314,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 316,
											"end": 338,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 316,
											"end": 338,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 316,
											"end": 338,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 277,
											"end": 339,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 274,
											"end": 362,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 274,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 274,
											"end": 362,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 342,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 342,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 342,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 342,
											"end": 360,
											"name": "tag",
											"source": 17,
											"value": "592"
										},
										{
											"begin": 342,
											"end": 360,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 378,
											"end": 380,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 393,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 146,
											"end": 399,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 146,
											"end": 399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 404,
											"end": 679,
											"name": "tag",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 404,
											"end": 679,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 475,
											"end": 477,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 478,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 521,
											"end": 534,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 521,
											"end": 534,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 517,
											"end": 544,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 505,
											"end": 545,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 505,
											"end": 545,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 560,
											"end": 594,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 560,
											"end": 594,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 596,
											"end": 618,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 596,
											"end": 618,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 596,
											"end": 618,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 557,
											"end": 619,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 554,
											"end": 642,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 554,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 554,
											"end": 642,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 622,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 622,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 622,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 622,
											"end": 640,
											"name": "tag",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 622,
											"end": 640,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 673,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 404,
											"end": 679,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 404,
											"end": 679,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 404,
											"end": 679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 684,
											"end": 870,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 684,
											"end": 870,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 732,
											"end": 736,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 757,
											"end": 763,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 754,
											"end": 784,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 751,
											"end": 807,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 751,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 751,
											"end": 807,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 787,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 787,
											"end": 805,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 787,
											"end": 805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 787,
											"end": 805,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 787,
											"end": 805,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 832,
											"end": 847,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 828,
											"end": 857,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 859,
											"end": 863,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 824,
											"end": 864,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 824,
											"end": 864,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 684,
											"end": 870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 875,
											"end": 1337,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 875,
											"end": 1337,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 917,
											"end": 922,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 973,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 963,
											"end": 967,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 955,
											"end": 961,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 951,
											"end": 968,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 947,
											"end": 974,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 937,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 937,
											"end": 992,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 988,
											"end": 989,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 986,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 978,
											"end": 990,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 937,
											"end": 992,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 937,
											"end": 992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1024,
											"end": 1030,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1011,
											"end": 1031,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1055,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 1071,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 1099,
											"end": 1101,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1071,
											"end": 1102,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 1071,
											"end": 1102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1071,
											"end": 1102,
											"name": "tag",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 1071,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1055,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "574"
										},
										{
											"begin": 1055,
											"end": 1103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1055,
											"end": 1103,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 1055,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1128,
											"end": 1130,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1119,
											"end": 1126,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1174,
											"end": 1177,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1167,
											"end": 1171,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1154,
											"end": 1160,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1150,
											"end": 1165,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1146,
											"end": 1172,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1143,
											"end": 1178,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1140,
											"end": 1195,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1140,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 1140,
											"end": 1195,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1181,
											"end": 1193,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1140,
											"end": 1195,
											"name": "tag",
											"source": 17,
											"value": "603"
										},
										{
											"begin": 1140,
											"end": 1195,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1256,
											"end": 1258,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1249,
											"end": 1253,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1247,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1237,
											"end": 1254,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1230,
											"end": 1234,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1228,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1204,
											"end": 1259,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 1304,
											"end": 1305,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1295,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1279,
											"end": 1295,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1279,
											"end": 1295,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1297,
											"end": 1301,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1302,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1268,
											"end": 1306,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1290,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 875,
											"end": 1337,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 875,
											"end": 1337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1342,
											"end": 1730,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1342,
											"end": 1730,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1419,
											"end": 1425,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1433,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1480,
											"end": 1482,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1459,
											"end": 1466,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1455,
											"end": 1478,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1451,
											"end": 1483,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1500,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 1448,
											"end": 1500,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1494,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1486,
											"end": 1498,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1448,
											"end": 1500,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 1448,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1532,
											"end": 1541,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1519,
											"end": 1542,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1542,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1509,
											"end": 1542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1593,
											"end": 1595,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1578,
											"end": 1596,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1565,
											"end": 1597,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1612,
											"end": 1618,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1609,
											"end": 1639,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1606,
											"end": 1656,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1606,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 1606,
											"end": 1656,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1652,
											"end": 1653,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1650,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1642,
											"end": 1654,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1606,
											"end": 1656,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 1606,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1675,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 1716,
											"end": 1723,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1707,
											"end": 1713,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1696,
											"end": 1705,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1692,
											"end": 1714,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1675,
											"end": 1724,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 1675,
											"end": 1724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1675,
											"end": 1724,
											"name": "tag",
											"source": 17,
											"value": "607"
										},
										{
											"begin": 1675,
											"end": 1724,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1724,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1724,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1665,
											"end": 1724,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1342,
											"end": 1730,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1342,
											"end": 1730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1342,
											"end": 1730,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1342,
											"end": 1730,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1342,
											"end": 1730,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1342,
											"end": 1730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1735,
											"end": 1985,
											"name": "tag",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 1735,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1820,
											"end": 1821,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1844,
											"end": 1850,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1841,
											"end": 1842,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1838,
											"end": 1851,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1920,
											"end": 1931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1920,
											"end": 1931,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1920,
											"end": 1931,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1914,
											"end": 1932,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1901,
											"end": 1912,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1901,
											"end": 1912,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1901,
											"end": 1912,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1894,
											"end": 1933,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1859,
											"end": 1869,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 1830,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1977,
											"end": 1978,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1959,
											"end": 1975,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1952,
											"end": 1979,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1735,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1990,
											"end": 2261,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 1990,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2032,
											"end": 2035,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2075,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2064,
											"end": 2076,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2097,
											"end": 2103,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2092,
											"end": 2095,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2085,
											"end": 2104,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2113,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2175,
											"end": 2179,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2170,
											"end": 2173,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2166,
											"end": 2180,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2159,
											"end": 2163,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2152,
											"end": 2157,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2148,
											"end": 2164,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2113,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 2113,
											"end": 2189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2113,
											"end": 2189,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 2113,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 2222,
											"end": 2237,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2247,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2248,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2248,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2248,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2209,
											"end": 2248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2250,
											"end": 2254,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2205,
											"end": 2255,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2205,
											"end": 2255,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1990,
											"end": 2261,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1990,
											"end": 2261,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2266,
											"end": 2486,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 2266,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2415,
											"end": 2417,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2397,
											"end": 2418,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2378,
											"end": 2382,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 2476,
											"end": 2478,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2465,
											"end": 2474,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2461,
											"end": 2479,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2453,
											"end": 2459,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2435,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 2435,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2435,
											"end": 2480,
											"name": "tag",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 2435,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2427,
											"end": 2480,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2266,
											"end": 2486,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2266,
											"end": 2486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2491,
											"end": 2622,
											"name": "tag",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 2491,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2566,
											"end": 2597,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2566,
											"end": 2597,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2556,
											"end": 2598,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2556,
											"end": 2598,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 2546,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 2546,
											"end": 2616,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2612,
											"end": 2613,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2610,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2602,
											"end": 2614,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2627,
											"end": 2942,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 2627,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2703,
											"end": 2709,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2756,
											"end": 2758,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2744,
											"end": 2753,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2735,
											"end": 2742,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2727,
											"end": 2759,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2772,
											"end": 2773,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2762,
											"end": 2774,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "tag",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 2724,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2798,
											"end": 2821,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2830,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 2855,
											"end": 2860,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2830,
											"end": 2861,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 2830,
											"end": 2861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2830,
											"end": 2861,
											"name": "tag",
											"source": 17,
											"value": "620"
										},
										{
											"begin": 2830,
											"end": 2861,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2917,
											"end": 2935,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2917,
											"end": 2935,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2917,
											"end": 2935,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 2917,
											"end": 2935,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2904,
											"end": 2936,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2904,
											"end": 2936,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3139,
											"end": 3319,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 3139,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3198,
											"end": 3204,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3248,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3226,
											"end": 3249,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3219,
											"end": 3271,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3219,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 3219,
											"end": 3271,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3267,
											"end": 3268,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3265,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3257,
											"end": 3269,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3219,
											"end": 3271,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 3219,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3290,
											"end": 3313,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3139,
											"end": 3319,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3139,
											"end": 3319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3741,
											"end": 4197,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 3741,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3818,
											"end": 3824,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3834,
											"end": 3840,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3887,
											"end": 3889,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3875,
											"end": 3884,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3866,
											"end": 3873,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3862,
											"end": 3885,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3858,
											"end": 3890,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3855,
											"end": 3907,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3855,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 3855,
											"end": 3907,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3855,
											"end": 3907,
											"name": "tag",
											"source": 17,
											"value": "627"
										},
										{
											"begin": 3855,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3942,
											"end": 3951,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3929,
											"end": 3952,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3961,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 3986,
											"end": 3991,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3961,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 3961,
											"end": 3992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3961,
											"end": 3992,
											"name": "tag",
											"source": 17,
											"value": "628"
										},
										{
											"begin": 3961,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4011,
											"end": 4016,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4068,
											"end": 4070,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4053,
											"end": 4071,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4040,
											"end": 4072,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4081,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 4040,
											"end": 4072,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4081,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 4081,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4081,
											"end": 4114,
											"name": "tag",
											"source": 17,
											"value": "629"
										},
										{
											"begin": 4081,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3741,
											"end": 4197,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3741,
											"end": 4197,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4133,
											"end": 4140,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4159,
											"end": 4191,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4159,
											"end": 4191,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3741,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4202,
											"end": 5020,
											"name": "tag",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 4202,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4479,
											"end": 4500,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4500,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4479,
											"end": 4500,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4549,
											"end": 4562,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4549,
											"end": 4562,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4571,
											"end": 4593,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4398,
											"end": 4402,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4398,
											"end": 4402,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4630,
											"end": 4648,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4671,
											"end": 4686,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4671,
											"end": 4686,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4671,
											"end": 4686,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4398,
											"end": 4402,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "tag",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4728,
											"end": 4734,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4725,
											"end": 4726,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4722,
											"end": 4735,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4800,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4800,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4838,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4829,
											"end": 4838,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4825,
											"end": 4860,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4813,
											"end": 4861,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4813,
											"end": 4861,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4901,
											"end": 4912,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4901,
											"end": 4912,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4895,
											"end": 4913,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 4893,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 4893,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4881,
											"end": 4893,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4874,
											"end": 4914,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4934,
											"end": 4946,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4969,
											"end": 4984,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4969,
											"end": 4984,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4969,
											"end": 4984,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4969,
											"end": 4984,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4857,
											"end": 4858,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4743,
											"end": 4752,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "631"
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "tag",
											"source": 17,
											"value": "633"
										},
										{
											"begin": 4714,
											"end": 4994,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5011,
											"end": 5014,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5011,
											"end": 5014,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 4202,
											"end": 5020,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4202,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5442,
											"end": 5689,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 5442,
											"end": 5689,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5554,
											"end": 5556,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5542,
											"end": 5551,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5533,
											"end": 5540,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5529,
											"end": 5552,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5525,
											"end": 5557,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5570,
											"end": 5571,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5567,
											"end": 5568,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5560,
											"end": 5572,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "tag",
											"source": 17,
											"value": "637"
										},
										{
											"begin": 5522,
											"end": 5574,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5609,
											"end": 5618,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5596,
											"end": 5619,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5628,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 5653,
											"end": 5658,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5628,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 5628,
											"end": 5659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6455,
											"name": "tag",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 6088,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6151,
											"end": 6159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6215,
											"end": 6218,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6208,
											"end": 6212,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 6200,
											"end": 6206,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6196,
											"end": 6213,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6192,
											"end": 6219,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6182,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 6182,
											"end": 6237,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6233,
											"end": 6234,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6230,
											"end": 6231,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6223,
											"end": 6235,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6182,
											"end": 6237,
											"name": "tag",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 6182,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6256,
											"end": 6276,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6256,
											"end": 6276,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6318,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6288,
											"end": 6318,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6335,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 6285,
											"end": 6335,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6331,
											"end": 6332,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6329,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6321,
											"end": 6333,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6285,
											"end": 6335,
											"name": "tag",
											"source": 17,
											"value": "642"
										},
										{
											"begin": 6285,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6368,
											"end": 6372,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6360,
											"end": 6366,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6356,
											"end": 6373,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6344,
											"end": 6373,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6344,
											"end": 6373,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6428,
											"end": 6431,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6421,
											"end": 6425,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6408,
											"end": 6409,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 6404,
											"end": 6418,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 6396,
											"end": 6402,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6392,
											"end": 6419,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6388,
											"end": 6426,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6385,
											"end": 6432,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6382,
											"end": 6449,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6382,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 6382,
											"end": 6449,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6445,
											"end": 6446,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6443,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6435,
											"end": 6447,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6382,
											"end": 6449,
											"name": "tag",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 6382,
											"end": 6449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6455,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6455,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6455,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6455,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6455,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6088,
											"end": 6455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6460,
											"end": 6619,
											"name": "tag",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 6460,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6527,
											"end": 6547,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6527,
											"end": 6547,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6587,
											"end": 6593,
											"name": "PUSH",
											"source": 17,
											"value": "FFFF"
										},
										{
											"begin": 6576,
											"end": 6594,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6576,
											"end": 6594,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6566,
											"end": 6595,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 6556,
											"end": 6613,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6599,
											"end": 6611,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6556,
											"end": 6613,
											"name": "tag",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 6556,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6460,
											"end": 6619,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6460,
											"end": 6619,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6460,
											"end": 6619,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6460,
											"end": 6619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "tag",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6762,
											"end": 6768,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6776,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6778,
											"end": 6784,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6786,
											"end": 6792,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6794,
											"end": 6800,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6802,
											"end": 6808,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6855,
											"end": 6858,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 6843,
											"end": 6852,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 6830,
											"end": 6853,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 6826,
											"end": 6859,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 6823,
											"end": 6876,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6823,
											"end": 6876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 6823,
											"end": 6876,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6872,
											"end": 6873,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6869,
											"end": 6870,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6862,
											"end": 6874,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6823,
											"end": 6876,
											"name": "tag",
											"source": 17,
											"value": "647"
										},
										{
											"begin": 6823,
											"end": 6876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6912,
											"end": 6921,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6899,
											"end": 6922,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6982,
											"end": 6984,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6974,
											"end": 6980,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6971,
											"end": 6985,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 6998,
											"end": 6999,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 6996,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6988,
											"end": 7000,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "tag",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 6968,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7037,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 7099,
											"end": 7106,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 7090,
											"end": 7096,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7079,
											"end": 7088,
											"name": "DUP12",
											"source": 17
										},
										{
											"begin": 7075,
											"end": 7097,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7037,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 7037,
											"end": 7107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7037,
											"end": 7107,
											"name": "tag",
											"source": 17,
											"value": "649"
										},
										{
											"begin": 7037,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7126,
											"end": 7134,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7126,
											"end": 7134,
											"name": "SWAP9",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7011,
											"end": 7107,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7214,
											"end": 7216,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7186,
											"end": 7218,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 7186,
											"end": 7218,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7230,
											"end": 7246,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7230,
											"end": 7246,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7230,
											"end": 7246,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7259,
											"end": 7260,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7257,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7249,
											"end": 7261,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "tag",
											"source": 17,
											"value": "650"
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7298,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 7362,
											"end": 7369,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 7351,
											"end": 7359,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7340,
											"end": 7349,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 7336,
											"end": 7360,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7298,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "580"
										},
										{
											"begin": 7298,
											"end": 7370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7298,
											"end": 7370,
											"name": "tag",
											"source": 17,
											"value": "651"
										},
										{
											"begin": 7298,
											"end": 7370,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7389,
											"end": 7397,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7389,
											"end": 7397,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7272,
											"end": 7370,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7443,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 7443,
											"end": 7480,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7476,
											"end": 7478,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7461,
											"end": 7479,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7443,
											"end": 7480,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 7443,
											"end": 7480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7443,
											"end": 7480,
											"name": "tag",
											"source": 17,
											"value": "652"
										},
										{
											"begin": 7443,
											"end": 7480,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7433,
											"end": 7480,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7433,
											"end": 7480,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7499,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 7532,
											"end": 7534,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7521,
											"end": 7530,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 7517,
											"end": 7535,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7499,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "581"
										},
										{
											"begin": 7499,
											"end": 7536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7499,
											"end": 7536,
											"name": "tag",
											"source": 17,
											"value": "653"
										},
										{
											"begin": 7499,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7489,
											"end": 7536,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7489,
											"end": 7536,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 6624,
											"end": 7542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7973,
											"end": 8079,
											"name": "tag",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 7973,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8053,
											"end": 8054,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 8046,
											"end": 8051,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8043,
											"end": 8055,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 8033,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "435"
										},
										{
											"begin": 8033,
											"end": 8073,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8069,
											"end": 8070,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8066,
											"end": 8067,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8059,
											"end": 8071,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "tag",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8214,
											"end": 8220,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8222,
											"end": 8228,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8230,
											"end": 8236,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8238,
											"end": 8244,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8246,
											"end": 8252,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8299,
											"end": 8302,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 8287,
											"end": 8296,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8278,
											"end": 8285,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 8274,
											"end": 8297,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8270,
											"end": 8303,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8267,
											"end": 8320,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8267,
											"end": 8320,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 8267,
											"end": 8320,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8313,
											"end": 8314,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8306,
											"end": 8318,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8267,
											"end": 8320,
											"name": "tag",
											"source": 17,
											"value": "659"
										},
										{
											"begin": 8267,
											"end": 8320,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 8342,
											"end": 8365,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "660"
										},
										{
											"begin": 8399,
											"end": 8404,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8405,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 8374,
											"end": 8405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8405,
											"name": "tag",
											"source": 17,
											"value": "660"
										},
										{
											"begin": 8374,
											"end": 8405,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8424,
											"end": 8429,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8476,
											"end": 8478,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8461,
											"end": 8479,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8461,
											"end": 8479,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8448,
											"end": 8480,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8448,
											"end": 8480,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8532,
											"end": 8534,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8517,
											"end": 8535,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 8504,
											"end": 8536,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8583,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 8545,
											"end": 8583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8545,
											"end": 8583,
											"name": "tag",
											"source": 17,
											"value": "661"
										},
										{
											"begin": 8545,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8602,
											"end": 8609,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8661,
											"end": 8663,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 8646,
											"end": 8664,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8646,
											"end": 8664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8633,
											"end": 8665,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 8674,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 8633,
											"end": 8665,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8674,
											"end": 8707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 8674,
											"end": 8707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8674,
											"end": 8707,
											"name": "tag",
											"source": 17,
											"value": "662"
										},
										{
											"begin": 8674,
											"end": 8707,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8726,
											"end": 8733,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8784,
											"end": 8787,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 8769,
											"end": 8788,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 8769,
											"end": 8788,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8756,
											"end": 8789,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8801,
											"end": 8831,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8801,
											"end": 8831,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 8798,
											"end": 8848,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8798,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 8798,
											"end": 8848,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8844,
											"end": 8845,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8841,
											"end": 8842,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8834,
											"end": 8846,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8798,
											"end": 8848,
											"name": "tag",
											"source": 17,
											"value": "663"
										},
										{
											"begin": 8798,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8867,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 8908,
											"end": 8915,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 8899,
											"end": 8905,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8888,
											"end": 8897,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 8884,
											"end": 8906,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8867,
											"end": 8916,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 8867,
											"end": 8916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8867,
											"end": 8916,
											"name": "tag",
											"source": 17,
											"value": "664"
										},
										{
											"begin": 8867,
											"end": 8916,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8857,
											"end": 8916,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8857,
											"end": 8916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8857,
											"end": 8916,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8084,
											"end": 8922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9135,
											"end": 9522,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 9135,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9222,
											"end": 9228,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9277,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9263,
											"end": 9272,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9254,
											"end": 9261,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 9250,
											"end": 9273,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9246,
											"end": 9278,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9243,
											"end": 9295,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9243,
											"end": 9295,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "667"
										},
										{
											"begin": 9243,
											"end": 9295,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9291,
											"end": 9292,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9288,
											"end": 9289,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9281,
											"end": 9293,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9243,
											"end": 9295,
											"name": "tag",
											"source": 17,
											"value": "667"
										},
										{
											"begin": 9243,
											"end": 9295,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9318,
											"end": 9341,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9356,
											"end": 9362,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9353,
											"end": 9383,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9400,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9400,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 9350,
											"end": 9400,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9396,
											"end": 9397,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9394,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9386,
											"end": 9398,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9350,
											"end": 9400,
											"name": "tag",
											"source": 17,
											"value": "668"
										},
										{
											"begin": 9350,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9419,
											"end": 9441,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9419,
											"end": 9441,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9475,
											"end": 9477,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9457,
											"end": 9473,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9457,
											"end": 9473,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9457,
											"end": 9473,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9453,
											"end": 9478,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9450,
											"end": 9495,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9450,
											"end": 9495,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 9450,
											"end": 9495,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9491,
											"end": 9492,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9488,
											"end": 9489,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9481,
											"end": 9493,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9527,
											"end": 9915,
											"name": "tag",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 9527,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9595,
											"end": 9601,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9603,
											"end": 9609,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9656,
											"end": 9658,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9644,
											"end": 9653,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9635,
											"end": 9642,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 9631,
											"end": 9654,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9627,
											"end": 9659,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 9624,
											"end": 9676,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9624,
											"end": 9676,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 9624,
											"end": 9676,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9672,
											"end": 9673,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9669,
											"end": 9670,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9662,
											"end": 9674,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9624,
											"end": 9676,
											"name": "tag",
											"source": 17,
											"value": "671"
										},
										{
											"begin": 9624,
											"end": 9676,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9720,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9698,
											"end": 9721,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9730,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 9755,
											"end": 9760,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9730,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 9730,
											"end": 9761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9730,
											"end": 9761,
											"name": "tag",
											"source": 17,
											"value": "672"
										},
										{
											"begin": 9730,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9780,
											"end": 9785,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9837,
											"end": 9839,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 9822,
											"end": 9840,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9809,
											"end": 9841,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 9850,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 9809,
											"end": 9841,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9850,
											"end": 9883,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 9850,
											"end": 9883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9850,
											"end": 9883,
											"name": "tag",
											"source": 17,
											"value": "673"
										},
										{
											"begin": 9850,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9902,
											"end": 9909,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9892,
											"end": 9909,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9892,
											"end": 9909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9892,
											"end": 9909,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9527,
											"end": 9915,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9527,
											"end": 9915,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9527,
											"end": 9915,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 9527,
											"end": 9915,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9527,
											"end": 9915,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9527,
											"end": 9915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10250,
											"end": 10434,
											"name": "tag",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 10250,
											"end": 10434,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10320,
											"end": 10326,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10373,
											"end": 10375,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10361,
											"end": 10370,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10352,
											"end": 10359,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10348,
											"end": 10371,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 10344,
											"end": 10376,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 10341,
											"end": 10393,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10341,
											"end": 10393,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 10341,
											"end": 10393,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10389,
											"end": 10390,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10387,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10379,
											"end": 10391,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10341,
											"end": 10393,
											"name": "tag",
											"source": 17,
											"value": "676"
										},
										{
											"begin": 10341,
											"end": 10393,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10412,
											"end": 10428,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 10412,
											"end": 10428,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 10250,
											"end": 10434,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10250,
											"end": 10434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10781,
											"end": 10962,
											"name": "tag",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 10781,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10839,
											"end": 10843,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10864,
											"end": 10870,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10861,
											"end": 10891,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 10858,
											"end": 10914,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10858,
											"end": 10914,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 10858,
											"end": 10914,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "572"
										},
										{
											"begin": 10894,
											"end": 10912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "tag",
											"source": 17,
											"value": "680"
										},
										{
											"begin": 10894,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10939,
											"end": 10940,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 10935,
											"end": 10949,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 10951,
											"end": 10955,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10931,
											"end": 10956,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10931,
											"end": 10956,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10781,
											"end": 10962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10967,
											"end": 11115,
											"name": "tag",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 10967,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11051,
											"end": 11064,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11051,
											"end": 11064,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11073,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "645"
										},
										{
											"begin": 11051,
											"end": 11064,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11073,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 11073,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11120,
											"end": 13126,
											"name": "tag",
											"source": 17,
											"value": "199"
										},
										{
											"begin": 11120,
											"end": 13126,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11216,
											"end": 11222,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11247,
											"end": 11249,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11290,
											"end": 11292,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11278,
											"end": 11287,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11269,
											"end": 11276,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 11265,
											"end": 11288,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11261,
											"end": 11293,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11258,
											"end": 11310,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11258,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 11258,
											"end": 11310,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11306,
											"end": 11307,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11303,
											"end": 11304,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11296,
											"end": 11308,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11258,
											"end": 11310,
											"name": "tag",
											"source": 17,
											"value": "684"
										},
										{
											"begin": 11258,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11339,
											"end": 11348,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11333,
											"end": 11349,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11409,
											"end": 11411,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11401,
											"end": 11407,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11398,
											"end": 11412,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11395,
											"end": 11429,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11395,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 11395,
											"end": 11429,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11425,
											"end": 11426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11422,
											"end": 11423,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11415,
											"end": 11427,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11395,
											"end": 11429,
											"name": "tag",
											"source": 17,
											"value": "685"
										},
										{
											"begin": 11395,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11448,
											"end": 11470,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11448,
											"end": 11470,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 11448,
											"end": 11470,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11448,
											"end": 11470,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11504,
											"end": 11508,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 11486,
											"end": 11502,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11486,
											"end": 11502,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 11486,
											"end": 11502,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 11482,
											"end": 11509,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11526,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11526,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 11479,
											"end": 11526,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11522,
											"end": 11523,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11519,
											"end": 11520,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11512,
											"end": 11524,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11479,
											"end": 11526,
											"name": "tag",
											"source": 17,
											"value": "686"
										},
										{
											"begin": 11479,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11548,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "687"
										},
										{
											"begin": 11548,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "573"
										},
										{
											"begin": 11548,
											"end": 11570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11548,
											"end": 11570,
											"name": "tag",
											"source": 17,
											"value": "687"
										},
										{
											"begin": 11548,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11601,
											"end": 11603,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11595,
											"end": 11604,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11629,
											"end": 11631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11619,
											"end": 11627,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11616,
											"end": 11632,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11613,
											"end": 11649,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11613,
											"end": 11649,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 11613,
											"end": 11649,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11645,
											"end": 11646,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11642,
											"end": 11643,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11635,
											"end": 11647,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11613,
											"end": 11649,
											"name": "tag",
											"source": 17,
											"value": "688"
										},
										{
											"begin": 11613,
											"end": 11649,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11668,
											"end": 11685,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11668,
											"end": 11685,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11716,
											"end": 11720,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 11708,
											"end": 11721,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11708,
											"end": 11721,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11704,
											"end": 11731,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 11694,
											"end": 11749,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 11694,
											"end": 11749,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11745,
											"end": 11746,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11742,
											"end": 11743,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11735,
											"end": 11747,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11694,
											"end": 11749,
											"name": "tag",
											"source": 17,
											"value": "689"
										},
										{
											"begin": 11694,
											"end": 11749,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11774,
											"end": 11776,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 11768,
											"end": 11777,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 11797,
											"end": 11855,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "690"
										},
										{
											"begin": 11813,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 11851,
											"end": 11853,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11813,
											"end": 11854,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 11813,
											"end": 11854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 11797,
											"end": 11855,
											"name": "tag",
											"source": 17,
											"value": "690"
										},
										{
											"begin": 11797,
											"end": 11855,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 11889,
											"end": 11904,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11889,
											"end": 11904,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11889,
											"end": 11904,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11971,
											"end": 11972,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 11967,
											"end": 11977,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11967,
											"end": 11977,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11967,
											"end": 11977,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 11967,
											"end": 11977,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11959,
											"end": 11978,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11959,
											"end": 11978,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11955,
											"end": 11983,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11955,
											"end": 11983,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11955,
											"end": 11983,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11920,
											"end": 11932,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 11920,
											"end": 11932,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11920,
											"end": 11932,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11920,
											"end": 11932,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 11995,
											"end": 12014,
											"name": "DUP11",
											"source": 17
										},
										{
											"begin": 11995,
											"end": 12014,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 11995,
											"end": 12014,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 11992,
											"end": 12031,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 11992,
											"end": 12031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "692"
										},
										{
											"begin": 11992,
											"end": 12031,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12027,
											"end": 12028,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12024,
											"end": 12025,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12017,
											"end": 12029,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 11992,
											"end": 12031,
											"name": "tag",
											"source": 17,
											"value": "692"
										},
										{
											"begin": 11992,
											"end": 12031,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12059,
											"end": 12061,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12055,
											"end": 12057,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12051,
											"end": 12062,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "tag",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12087,
											"end": 12093,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12082,
											"end": 12085,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12079,
											"end": 12094,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "695"
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12166,
											"end": 12169,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12160,
											"end": 12170,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12202,
											"end": 12204,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12189,
											"end": 12200,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12186,
											"end": 12205,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12183,
											"end": 12292,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12183,
											"end": 12292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 12183,
											"end": 12292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12246,
											"end": 12247,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12275,
											"end": 12277,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12271,
											"end": 12273,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12264,
											"end": 12278,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12183,
											"end": 12292,
											"name": "tag",
											"source": 17,
											"value": "696"
										},
										{
											"begin": 12183,
											"end": 12292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12315,
											"end": 12335,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 12315,
											"end": 12335,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12370,
											"end": 12372,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 12362,
											"end": 12373,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12362,
											"end": 12373,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12358,
											"end": 12383,
											"name": "DUP14",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 12348,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 12348,
											"end": 12471,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12425,
											"end": 12426,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12454,
											"end": 12456,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12450,
											"end": 12452,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12443,
											"end": 12457,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12348,
											"end": 12471,
											"name": "tag",
											"source": 17,
											"value": "697"
										},
										{
											"begin": 12348,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12508,
											"end": 12510,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 12504,
											"end": 12506,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12500,
											"end": 12511,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12494,
											"end": 12512,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12536,
											"end": 12538,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 12564,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 12580,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 12608,
											"end": 12610,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12580,
											"end": 12611,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 12580,
											"end": 12611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12564,
											"end": 12612,
											"name": "tag",
											"source": 17,
											"value": "698"
										},
										{
											"begin": 12564,
											"end": 12612,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12639,
											"end": 12641,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12632,
											"end": 12637,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12625,
											"end": 12642,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12684,
											"end": 12691,
											"name": "DUP16",
											"source": 17
										},
										{
											"begin": 12678,
											"end": 12681,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12673,
											"end": 12675,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12669,
											"end": 12671,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12665,
											"end": 12676,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12661,
											"end": 12682,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12658,
											"end": 12692,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 12655,
											"end": 12782,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12655,
											"end": 12782,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 12655,
											"end": 12782,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12734,
											"end": 12735,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12764,
											"end": 12767,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12759,
											"end": 12762,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 12752,
											"end": 12768,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12655,
											"end": 12782,
											"name": "tag",
											"source": 17,
											"value": "700"
										},
										{
											"begin": 12655,
											"end": 12782,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12795,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 12860,
											"end": 12862,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12855,
											"end": 12857,
											"name": "DUP15",
											"source": 17
										},
										{
											"begin": 12848,
											"end": 12853,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 12844,
											"end": 12858,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12838,
											"end": 12841,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12834,
											"end": 12836,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 12830,
											"end": 12842,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12795,
											"end": 12863,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 12795,
											"end": 12863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12795,
											"end": 12863,
											"name": "tag",
											"source": 17,
											"value": "701"
										},
										{
											"begin": 12795,
											"end": 12863,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 12876,
											"end": 12894,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12914,
											"end": 12926,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12104,
											"end": 12116,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 12104,
											"end": 12116,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "693"
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "tag",
											"source": 17,
											"value": "695"
										},
										{
											"begin": 12071,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12945,
											"end": 12965,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12945,
											"end": 12965,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13003,
											"end": 13014,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13003,
											"end": 13014,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13003,
											"end": 13014,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12997,
											"end": 13015,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12981,
											"end": 12995,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12981,
											"end": 12995,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12981,
											"end": 12995,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12974,
											"end": 13016,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13048,
											"end": 13095,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 13091,
											"end": 13093,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13083,
											"end": 13094,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13083,
											"end": 13094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13048,
											"end": 13095,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "584"
										},
										{
											"begin": 13048,
											"end": 13095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13048,
											"end": 13095,
											"name": "tag",
											"source": 17,
											"value": "702"
										},
										{
											"begin": 13048,
											"end": 13095,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13043,
											"end": 13045,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 13032,
											"end": 13046,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13032,
											"end": 13046,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13025,
											"end": 13096,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13036,
											"end": 13041,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 11120,
											"end": 13126,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11120,
											"end": 13126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13131,
											"end": 13258,
											"name": "tag",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 13131,
											"end": 13258,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13192,
											"end": 13202,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 13187,
											"end": 13190,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 13183,
											"end": 13203,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 13180,
											"end": 13181,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13173,
											"end": 13204,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13223,
											"end": 13227,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 13220,
											"end": 13221,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 13213,
											"end": 13228,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13247,
											"end": 13251,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13244,
											"end": 13245,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13237,
											"end": 13252,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13263,
											"end": 13431,
											"name": "tag",
											"source": 17,
											"value": "202"
										},
										{
											"begin": 13263,
											"end": 13431,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13336,
											"end": 13345,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13336,
											"end": 13345,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13336,
											"end": 13345,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 13367,
											"end": 13376,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13367,
											"end": 13376,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13384,
											"end": 13399,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13384,
											"end": 13399,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13384,
											"end": 13399,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 13378,
											"end": 13400,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13378,
											"end": 13400,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 13364,
											"end": 13401,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 13354,
											"end": 13425,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 13354,
											"end": 13425,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13405,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 13405,
											"end": 13423,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 13405,
											"end": 13423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13436,
											"end": 13653,
											"name": "tag",
											"source": 17,
											"value": "204"
										},
										{
											"begin": 13436,
											"end": 13653,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13476,
											"end": 13477,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13502,
											"end": 13503,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13492,
											"end": 13624,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 13492,
											"end": 13624,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13546,
											"end": 13556,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 13541,
											"end": 13544,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 13537,
											"end": 13557,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 13534,
											"end": 13535,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13527,
											"end": 13558,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13581,
											"end": 13585,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 13578,
											"end": 13579,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 13571,
											"end": 13586,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13609,
											"end": 13613,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 13606,
											"end": 13607,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13599,
											"end": 13614,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13492,
											"end": 13624,
											"name": "tag",
											"source": 17,
											"value": "708"
										},
										{
											"begin": 13492,
											"end": 13624,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13638,
											"end": 13647,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 13638,
											"end": 13647,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 13436,
											"end": 13653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13658,
											"end": 13909,
											"name": "tag",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 13658,
											"end": 13909,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13728,
											"end": 13734,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13781,
											"end": 13783,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13769,
											"end": 13778,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13760,
											"end": 13767,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13756,
											"end": 13779,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 13752,
											"end": 13784,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 13749,
											"end": 13801,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 13749,
											"end": 13801,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 13749,
											"end": 13801,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 13797,
											"end": 13798,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13794,
											"end": 13795,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13787,
											"end": 13799,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 13749,
											"end": 13801,
											"name": "tag",
											"source": 17,
											"value": "710"
										},
										{
											"begin": 13749,
											"end": 13801,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13829,
											"end": 13838,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13823,
											"end": 13839,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13848,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 13873,
											"end": 13878,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 13848,
											"end": 13879,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 13848,
											"end": 13879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13914,
											"end": 14041,
											"name": "tag",
											"source": 17,
											"value": "214"
										},
										{
											"begin": 13914,
											"end": 14041,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13975,
											"end": 13985,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 13970,
											"end": 13973,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 13966,
											"end": 13986,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 13963,
											"end": 13964,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13956,
											"end": 13987,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14006,
											"end": 14010,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 14003,
											"end": 14004,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 13996,
											"end": 14011,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14030,
											"end": 14034,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14027,
											"end": 14028,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14020,
											"end": 14035,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14046,
											"end": 14173,
											"name": "tag",
											"source": 17,
											"value": "353"
										},
										{
											"begin": 14046,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14107,
											"end": 14117,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 14102,
											"end": 14105,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 14098,
											"end": 14118,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 14095,
											"end": 14096,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14088,
											"end": 14119,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14138,
											"end": 14142,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 14135,
											"end": 14136,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 14128,
											"end": 14143,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14162,
											"end": 14166,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14159,
											"end": 14160,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14152,
											"end": 14167,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14178,
											"end": 14413,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 14178,
											"end": 14413,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14257,
											"end": 14258,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 14250,
											"end": 14255,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14247,
											"end": 14259,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 14237,
											"end": 14380,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 14237,
											"end": 14380,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 14302,
											"end": 14312,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 14297,
											"end": 14300,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 14293,
											"end": 14313,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 14290,
											"end": 14291,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14283,
											"end": 14314,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14337,
											"end": 14341,
											"name": "PUSH",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 14334,
											"end": 14335,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 14327,
											"end": 14342,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14365,
											"end": 14369,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 14362,
											"end": 14363,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14370,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 14237,
											"end": 14380,
											"name": "tag",
											"source": 17,
											"value": "715"
										},
										{
											"begin": 14237,
											"end": 14380,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14389,
											"end": 14407,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14389,
											"end": 14407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14178,
											"end": 14413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14418,
											"end": 15020,
											"name": "tag",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 14418,
											"end": 15020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14739,
											"end": 14754,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14739,
											"end": 14754,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 14739,
											"end": 14754,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14721,
											"end": 14755,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14721,
											"end": 14755,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14786,
											"end": 14788,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 14771,
											"end": 14789,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 14771,
											"end": 14789,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14764,
											"end": 14798,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 14764,
											"end": 14798,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14764,
											"end": 14798,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14664,
											"end": 14668,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 14664,
											"end": 14668,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 14807,
											"end": 14858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "717"
										},
										{
											"begin": 14854,
											"end": 14856,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 14839,
											"end": 14857,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14839,
											"end": 14857,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14831,
											"end": 14837,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 14807,
											"end": 14858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 14807,
											"end": 14858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14807,
											"end": 14858,
											"name": "tag",
											"source": 17,
											"value": "717"
										},
										{
											"begin": 14807,
											"end": 14858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14906,
											"end": 14908,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 14898,
											"end": 14904,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 14894,
											"end": 14909,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 14889,
											"end": 14891,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 14878,
											"end": 14887,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14874,
											"end": 14892,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14867,
											"end": 14910,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14867,
											"end": 14910,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 14947,
											"end": 14950,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 14941,
											"end": 14944,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 14930,
											"end": 14939,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14926,
											"end": 14945,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14919,
											"end": 14951,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 14968,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 15009,
											"end": 15012,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 14998,
											"end": 15007,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 14994,
											"end": 15013,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 14986,
											"end": 14992,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 14968,
											"end": 15014,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 14968,
											"end": 15014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 14968,
											"end": 15014,
											"name": "tag",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 14968,
											"end": 15014,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 14960,
											"end": 15014,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 14418,
											"end": 15020,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14418,
											"end": 15020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15025,
											"end": 15150,
											"name": "tag",
											"source": 17,
											"value": "234"
										},
										{
											"begin": 15025,
											"end": 15150,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15090,
											"end": 15099,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15090,
											"end": 15099,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15090,
											"end": 15099,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15111,
											"end": 15121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15111,
											"end": 15121,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15111,
											"end": 15121,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 15108,
											"end": 15144,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15108,
											"end": 15144,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 15108,
											"end": 15144,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15124,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 15124,
											"end": 15142,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 15124,
											"end": 15142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15155,
											"end": 15290,
											"name": "tag",
											"source": 17,
											"value": "236"
										},
										{
											"begin": 15155,
											"end": 15290,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15194,
											"end": 15197,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15215,
											"end": 15232,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 15215,
											"end": 15232,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15215,
											"end": 15232,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15212,
											"end": 15255,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 15212,
											"end": 15255,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15235,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 15235,
											"end": 15253,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 15235,
											"end": 15253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15235,
											"end": 15253,
											"name": "tag",
											"source": 17,
											"value": "724"
										},
										{
											"begin": 15235,
											"end": 15253,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15282,
											"end": 15283,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 15271,
											"end": 15284,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 15271,
											"end": 15284,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15155,
											"end": 15290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15295,
											"end": 15423,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 15295,
											"end": 15423,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15362,
											"end": 15371,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15362,
											"end": 15371,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15362,
											"end": 15371,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15383,
											"end": 15394,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15383,
											"end": 15394,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15383,
											"end": 15394,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 15380,
											"end": 15417,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15380,
											"end": 15417,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 15380,
											"end": 15417,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15397,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 15397,
											"end": 15415,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "585"
										},
										{
											"begin": 15397,
											"end": 15415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 15707,
											"end": 15984,
											"name": "tag",
											"source": 17,
											"value": "250"
										},
										{
											"begin": 15707,
											"end": 15984,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15774,
											"end": 15780,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15827,
											"end": 15829,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 15815,
											"end": 15824,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 15806,
											"end": 15813,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 15802,
											"end": 15825,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 15798,
											"end": 15830,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 15795,
											"end": 15847,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15795,
											"end": 15847,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 15795,
											"end": 15847,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15843,
											"end": 15844,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15840,
											"end": 15841,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15833,
											"end": 15845,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 15795,
											"end": 15847,
											"name": "tag",
											"source": 17,
											"value": "730"
										},
										{
											"begin": 15795,
											"end": 15847,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 15875,
											"end": 15884,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15869,
											"end": 15885,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 15928,
											"end": 15933,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15921,
											"end": 15934,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15914,
											"end": 15935,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 15907,
											"end": 15912,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 15904,
											"end": 15936,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 15894,
											"end": 15954,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 15894,
											"end": 15954,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 15950,
											"end": 15951,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 15947,
											"end": 15948,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 15940,
											"end": 15952,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 15989,
											"end": 16369,
											"name": "tag",
											"source": 17,
											"value": "253"
										},
										{
											"begin": 15989,
											"end": 16369,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16068,
											"end": 16069,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 16064,
											"end": 16076,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16064,
											"end": 16076,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16064,
											"end": 16076,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 16064,
											"end": 16076,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 16111,
											"end": 16123,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16111,
											"end": 16123,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 16111,
											"end": 16123,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 16132,
											"end": 16193,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 16132,
											"end": 16193,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16186,
											"end": 16190,
											"name": "PUSH",
											"source": 17,
											"value": "7F"
										},
										{
											"begin": 16178,
											"end": 16184,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16174,
											"end": 16191,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 16164,
											"end": 16191,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 16164,
											"end": 16191,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 16132,
											"end": 16193,
											"name": "tag",
											"source": 17,
											"value": "733"
										},
										{
											"begin": 16132,
											"end": 16193,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16239,
											"end": 16241,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 16231,
											"end": 16237,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 16228,
											"end": 16242,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 16208,
											"end": 16226,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 16205,
											"end": 16243,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 16202,
											"end": 16363,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 16202,
											"end": 16363,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 16285,
											"end": 16295,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 16280,
											"end": 16283,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 16276,
											"end": 16296,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 16273,
											"end": 16274,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16266,
											"end": 16297,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16320,
											"end": 16324,
											"name": "PUSH",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 16317,
											"end": 16318,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 16310,
											"end": 16325,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 16348,
											"end": 16352,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 16345,
											"end": 16346,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 16338,
											"end": 16353,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 16202,
											"end": 16363,
											"name": "tag",
											"source": 17,
											"value": "734"
										},
										{
											"begin": 16202,
											"end": 16363,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 16202,
											"end": 16363,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15989,
											"end": 16369,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 15989,
											"end": 16369,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 15989,
											"end": 16369,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 15989,
											"end": 16369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 18741,
											"end": 19800,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 18741,
											"end": 19800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19029,
											"end": 19031,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 19041,
											"end": 19062,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 19041,
											"end": 19062,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19041,
											"end": 19062,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19014,
											"end": 19032,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19014,
											"end": 19032,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19097,
											"end": 19119,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19097,
											"end": 19119,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19097,
											"end": 19119,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 18981,
											"end": 18985,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19176,
											"end": 19182,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19150,
											"end": 19152,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 19135,
											"end": 19153,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19135,
											"end": 19153,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 18981,
											"end": 18985,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "tag",
											"source": 17,
											"value": "743"
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19224,
											"end": 19230,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 19221,
											"end": 19222,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19218,
											"end": 19231,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19299,
											"end": 19305,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19286,
											"end": 19306,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 19319,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 19344,
											"end": 19349,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19319,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 19319,
											"end": 19350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19319,
											"end": 19350,
											"name": "tag",
											"source": 17,
											"value": "746"
										},
										{
											"begin": 19319,
											"end": 19350,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19375,
											"end": 19406,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 19363,
											"end": 19407,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 19363,
											"end": 19407,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19430,
											"end": 19434,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19489,
											"end": 19504,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19489,
											"end": 19504,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19489,
											"end": 19504,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19489,
											"end": 19504,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 19454,
											"end": 19466,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19454,
											"end": 19466,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19454,
											"end": 19466,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19454,
											"end": 19466,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 19403,
											"end": 19404,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 19239,
											"end": 19248,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "743"
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "tag",
											"source": 17,
											"value": "745"
										},
										{
											"begin": 19210,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19552,
											"end": 19571,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19552,
											"end": 19571,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19552,
											"end": 19571,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 19545,
											"end": 19549,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19530,
											"end": 19550,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19530,
											"end": 19550,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19523,
											"end": 19572,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 19581,
											"end": 19600,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19581,
											"end": 19600,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19581,
											"end": 19600,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19612,
											"end": 19643,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 19612,
											"end": 19643,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 19609,
											"end": 19660,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 19609,
											"end": 19660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 19609,
											"end": 19660,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 19656,
											"end": 19657,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 19653,
											"end": 19654,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 19646,
											"end": 19658,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 19609,
											"end": 19660,
											"name": "tag",
											"source": 17,
											"value": "747"
										},
										{
											"begin": 19609,
											"end": 19660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 19690,
											"end": 19696,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 19687,
											"end": 19688,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 19683,
											"end": 19697,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 19669,
											"end": 19697,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 19669,
											"end": 19697,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 19743,
											"end": 19749,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 19735,
											"end": 19741,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 19728,
											"end": 19732,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19723,
											"end": 19726,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 19719,
											"end": 19733,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19706,
											"end": 19750,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 19771,
											"end": 19787,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19789,
											"end": 19793,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 19767,
											"end": 19794,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 19767,
											"end": 19794,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 18741,
											"end": 19800,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18741,
											"end": 19800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 20817,
											"end": 21081,
											"name": "tag",
											"source": 17,
											"value": "406"
										},
										{
											"begin": 20817,
											"end": 21081,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20888,
											"end": 20894,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20941,
											"end": 20943,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 20929,
											"end": 20938,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 20920,
											"end": 20927,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 20916,
											"end": 20939,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 20912,
											"end": 20944,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 20909,
											"end": 20961,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 20909,
											"end": 20961,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 20909,
											"end": 20961,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 20957,
											"end": 20958,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 20954,
											"end": 20955,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 20947,
											"end": 20959,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 20909,
											"end": 20961,
											"name": "tag",
											"source": 17,
											"value": "752"
										},
										{
											"begin": 20909,
											"end": 20961,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 20996,
											"end": 21005,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 20983,
											"end": 21006,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 21015,
											"end": 21051,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "615"
										},
										{
											"begin": 21045,
											"end": 21050,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21015,
											"end": 21051,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "582"
										},
										{
											"begin": 21015,
											"end": 21051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 21086,
											"end": 21642,
											"name": "tag",
											"source": 17,
											"value": "408"
										},
										{
											"begin": 21086,
											"end": 21642,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21190,
											"end": 21194,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21196,
											"end": 21202,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21256,
											"end": 21267,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21243,
											"end": 21268,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 21350,
											"end": 21352,
											"name": "PUSH",
											"source": 17,
											"value": "1E"
										},
										{
											"begin": 21346,
											"end": 21353,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 21335,
											"end": 21343,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21319,
											"end": 21333,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 21315,
											"end": 21344,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21311,
											"end": 21354,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21291,
											"end": 21309,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21287,
											"end": 21355,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 21277,
											"end": 21373,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 21277,
											"end": 21373,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21369,
											"end": 21370,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21366,
											"end": 21367,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21359,
											"end": 21371,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 21277,
											"end": 21373,
											"name": "tag",
											"source": 17,
											"value": "755"
										},
										{
											"begin": 21277,
											"end": 21373,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21396,
											"end": 21429,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21396,
											"end": 21429,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21448,
											"end": 21468,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21448,
											"end": 21468,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 21448,
											"end": 21468,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21480,
											"end": 21510,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21480,
											"end": 21510,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 21477,
											"end": 21527,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 21477,
											"end": 21527,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 21477,
											"end": 21527,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21523,
											"end": 21524,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21520,
											"end": 21521,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21513,
											"end": 21525,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 21477,
											"end": 21527,
											"name": "tag",
											"source": 17,
											"value": "756"
										},
										{
											"begin": 21477,
											"end": 21527,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21556,
											"end": 21560,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 21544,
											"end": 21561,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21544,
											"end": 21561,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21607,
											"end": 21608,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 21603,
											"end": 21617,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21603,
											"end": 21617,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 21603,
											"end": 21617,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 21587,
											"end": 21601,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 21583,
											"end": 21618,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21573,
											"end": 21619,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 21573,
											"end": 21619,
											"name": "SGT",
											"source": 17
										},
										{
											"begin": 21570,
											"end": 21636,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 21570,
											"end": 21636,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 21570,
											"end": 21636,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21632,
											"end": 21633,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21629,
											"end": 21630,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21622,
											"end": 21634,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 21647,
											"end": 22168,
											"name": "tag",
											"source": 17,
											"value": "412"
										},
										{
											"begin": 21647,
											"end": 22168,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21724,
											"end": 21728,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21730,
											"end": 21736,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21790,
											"end": 21801,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21777,
											"end": 21802,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 21884,
											"end": 21886,
											"name": "PUSH",
											"source": 17,
											"value": "1E"
										},
										{
											"begin": 21880,
											"end": 21887,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 21869,
											"end": 21877,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 21853,
											"end": 21867,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 21849,
											"end": 21878,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 21845,
											"end": 21888,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21825,
											"end": 21843,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 21821,
											"end": 21889,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 21811,
											"end": 21907,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "759"
										},
										{
											"begin": 21811,
											"end": 21907,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 21903,
											"end": 21904,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 21900,
											"end": 21901,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21893,
											"end": 21905,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 21811,
											"end": 21907,
											"name": "tag",
											"source": 17,
											"value": "759"
										},
										{
											"begin": 21811,
											"end": 21907,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 21930,
											"end": 21963,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 21930,
											"end": 21963,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 21982,
											"end": 22002,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 21982,
											"end": 22002,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 21982,
											"end": 22002,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22014,
											"end": 22044,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22014,
											"end": 22044,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 22011,
											"end": 22061,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22011,
											"end": 22061,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "760"
										},
										{
											"begin": 22011,
											"end": 22061,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22057,
											"end": 22058,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22054,
											"end": 22055,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 22047,
											"end": 22059,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 22011,
											"end": 22061,
											"name": "tag",
											"source": 17,
											"value": "760"
										},
										{
											"begin": 22011,
											"end": 22061,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22090,
											"end": 22094,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22078,
											"end": 22095,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22078,
											"end": 22095,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22121,
											"end": 22135,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 22117,
											"end": 22144,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22117,
											"end": 22144,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22117,
											"end": 22144,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 22107,
											"end": 22145,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22107,
											"end": 22145,
											"name": "SGT",
											"source": 17
										},
										{
											"begin": 22104,
											"end": 22162,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 22104,
											"end": 22162,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "643"
										},
										{
											"begin": 22104,
											"end": 22162,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 22158,
											"end": 22159,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22155,
											"end": 22156,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 22148,
											"end": 22160,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "tag",
											"source": 17,
											"value": "414"
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 22504,
											"end": 22519,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 22486,
											"end": 22520,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22486,
											"end": 22520,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22551,
											"end": 22553,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 22536,
											"end": 22554,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22536,
											"end": 22554,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22529,
											"end": 22563,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 22529,
											"end": 22563,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22529,
											"end": 22563,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22429,
											"end": 22433,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22429,
											"end": 22433,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22572,
											"end": 22623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 22619,
											"end": 22621,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 22604,
											"end": 22622,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22604,
											"end": 22622,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22596,
											"end": 22602,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 22572,
											"end": 22623,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 22572,
											"end": 22623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 22572,
											"end": 22623,
											"name": "tag",
											"source": 17,
											"value": "763"
										},
										{
											"begin": 22572,
											"end": 22623,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 22671,
											"end": 22673,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 22663,
											"end": 22669,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 22659,
											"end": 22674,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 22654,
											"end": 22656,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 22643,
											"end": 22652,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22639,
											"end": 22657,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22632,
											"end": 22675,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22632,
											"end": 22675,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22712,
											"end": 22715,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 22706,
											"end": 22709,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 22695,
											"end": 22704,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22691,
											"end": 22710,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22684,
											"end": 22716,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22753,
											"end": 22759,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22747,
											"end": 22750,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 22736,
											"end": 22745,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22732,
											"end": 22751,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22725,
											"end": 22760,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22811,
											"end": 22817,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 22803,
											"end": 22809,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22797,
											"end": 22800,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 22786,
											"end": 22795,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22782,
											"end": 22801,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22769,
											"end": 22818,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 22868,
											"end": 22869,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 22862,
											"end": 22865,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 22853,
											"end": 22859,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22842,
											"end": 22851,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 22838,
											"end": 22860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22834,
											"end": 22866,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22827,
											"end": 22870,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 22938,
											"end": 22941,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 22931,
											"end": 22933,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 22927,
											"end": 22934,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 22922,
											"end": 22924,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 22914,
											"end": 22920,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 22910,
											"end": 22925,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22906,
											"end": 22935,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 22895,
											"end": 22904,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 22891,
											"end": 22936,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22887,
											"end": 22942,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 22879,
											"end": 22942,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 22879,
											"end": 22942,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "SWAP7",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 22173,
											"end": 22948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 23856,
											"end": 24810,
											"name": "tag",
											"source": 17,
											"value": "485"
										},
										{
											"begin": 23856,
											"end": 24810,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 23951,
											"end": 23957,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 23982,
											"end": 23984,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24025,
											"end": 24027,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24013,
											"end": 24022,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24004,
											"end": 24011,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 24000,
											"end": 24023,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 23996,
											"end": 24028,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 23993,
											"end": 24045,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 23993,
											"end": 24045,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "768"
										},
										{
											"begin": 23993,
											"end": 24045,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 24041,
											"end": 24042,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24038,
											"end": 24039,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24031,
											"end": 24043,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 23993,
											"end": 24045,
											"name": "tag",
											"source": 17,
											"value": "768"
										},
										{
											"begin": 23993,
											"end": 24045,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24074,
											"end": 24083,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24068,
											"end": 24084,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24099,
											"end": 24105,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24096,
											"end": 24126,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 24093,
											"end": 24143,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 24093,
											"end": 24143,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 24093,
											"end": 24143,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 24139,
											"end": 24140,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24136,
											"end": 24137,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24129,
											"end": 24141,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 24093,
											"end": 24143,
											"name": "tag",
											"source": 17,
											"value": "769"
										},
										{
											"begin": 24093,
											"end": 24143,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24162,
											"end": 24184,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24162,
											"end": 24184,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24215,
											"end": 24219,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 24207,
											"end": 24220,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24207,
											"end": 24220,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24203,
											"end": 24230,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 24193,
											"end": 24248,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 24193,
											"end": 24248,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 24244,
											"end": 24245,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24241,
											"end": 24242,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24234,
											"end": 24246,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 24193,
											"end": 24248,
											"name": "tag",
											"source": 17,
											"value": "770"
										},
										{
											"begin": 24193,
											"end": 24248,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24273,
											"end": 24275,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24267,
											"end": 24276,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 24296,
											"end": 24354,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "771"
										},
										{
											"begin": 24312,
											"end": 24353,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 24350,
											"end": 24352,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24312,
											"end": 24353,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 24312,
											"end": 24353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24296,
											"end": 24354,
											"name": "tag",
											"source": 17,
											"value": "771"
										},
										{
											"begin": 24296,
											"end": 24354,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24388,
											"end": 24403,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24388,
											"end": 24403,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24388,
											"end": 24403,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24470,
											"end": 24471,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 24466,
											"end": 24476,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24466,
											"end": 24476,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24466,
											"end": 24476,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 24466,
											"end": 24476,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 24458,
											"end": 24477,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24458,
											"end": 24477,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24454,
											"end": 24482,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24454,
											"end": 24482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24454,
											"end": 24482,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24419,
											"end": 24431,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24419,
											"end": 24431,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24419,
											"end": 24431,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24419,
											"end": 24431,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24494,
											"end": 24513,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 24494,
											"end": 24513,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24494,
											"end": 24513,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 24491,
											"end": 24530,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 24491,
											"end": 24530,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 24491,
											"end": 24530,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 24526,
											"end": 24527,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24523,
											"end": 24524,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24516,
											"end": 24528,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 24491,
											"end": 24530,
											"name": "tag",
											"source": 17,
											"value": "773"
										},
										{
											"begin": 24491,
											"end": 24530,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24550,
											"end": 24561,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24550,
											"end": 24561,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24550,
											"end": 24561,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24550,
											"end": 24561,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24570,
											"end": 24780,
											"name": "tag",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 24570,
											"end": 24780,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24586,
											"end": 24592,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24581,
											"end": 24584,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24578,
											"end": 24593,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 24570,
											"end": 24780,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 24570,
											"end": 24780,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 24570,
											"end": 24780,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 24659,
											"end": 24662,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 24653,
											"end": 24663,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 24676,
											"end": 24707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "777"
										},
										{
											"begin": 24701,
											"end": 24706,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24676,
											"end": 24707,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "579"
										},
										{
											"begin": 24676,
											"end": 24707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24676,
											"end": 24707,
											"name": "tag",
											"source": 17,
											"value": "777"
										},
										{
											"begin": 24676,
											"end": 24707,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24720,
											"end": 24738,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 24720,
											"end": 24738,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24603,
											"end": 24615,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24603,
											"end": 24615,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24603,
											"end": 24615,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24603,
											"end": 24615,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 24758,
											"end": 24770,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24758,
											"end": 24770,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24758,
											"end": 24770,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24758,
											"end": 24770,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 24570,
											"end": 24780,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "774"
										},
										{
											"begin": 24570,
											"end": 24780,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 24815,
											"end": 25276,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 24815,
											"end": 25276,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 24868,
											"end": 24871,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 24906,
											"end": 24911,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 24900,
											"end": 24912,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 24933,
											"end": 24939,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24928,
											"end": 24931,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 24921,
											"end": 24940,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 24959,
											"end": 24963,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 24988,
											"end": 24990,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 24983,
											"end": 24986,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 24979,
											"end": 24991,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 24972,
											"end": 24991,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 24972,
											"end": 24991,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 25025,
											"end": 25027,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 25018,
											"end": 25023,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 25014,
											"end": 25028,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25046,
											"end": 25047,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "tag",
											"source": 17,
											"value": "779"
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25070,
											"end": 25076,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25067,
											"end": 25068,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25064,
											"end": 25077,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "781"
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25135,
											"end": 25148,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25135,
											"end": 25148,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25131,
											"end": 25170,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 25119,
											"end": 25171,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 25119,
											"end": 25171,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25191,
											"end": 25203,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 25191,
											"end": 25203,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25191,
											"end": 25203,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25191,
											"end": 25203,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 25226,
											"end": 25241,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25226,
											"end": 25241,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25226,
											"end": 25241,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25226,
											"end": 25241,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 25167,
											"end": 25168,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 25085,
											"end": 25094,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "779"
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "tag",
											"source": 17,
											"value": "781"
										},
										{
											"begin": 25056,
											"end": 25251,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25267,
											"end": 25270,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 25267,
											"end": 25270,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 24815,
											"end": 25276,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24815,
											"end": 25276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25281,
											"end": 25613,
											"name": "tag",
											"source": 17,
											"value": "487"
										},
										{
											"begin": 25281,
											"end": 25613,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25488,
											"end": 25494,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25477,
											"end": 25486,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25470,
											"end": 25495,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25531,
											"end": 25533,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 25526,
											"end": 25528,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25515,
											"end": 25524,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25511,
											"end": 25529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25504,
											"end": 25534,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 25451,
											"end": 25455,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25551,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "783"
										},
										{
											"begin": 25603,
											"end": 25605,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 25592,
											"end": 25601,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25588,
											"end": 25606,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25580,
											"end": 25586,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 25551,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 25551,
											"end": 25607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25551,
											"end": 25607,
											"name": "tag",
											"source": 17,
											"value": "783"
										},
										{
											"begin": 25551,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25543,
											"end": 25607,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 25281,
											"end": 25613,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25281,
											"end": 25613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 25618,
											"end": 26497,
											"name": "tag",
											"source": 17,
											"value": "491"
										},
										{
											"begin": 25618,
											"end": 26497,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25713,
											"end": 25719,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25744,
											"end": 25746,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 25787,
											"end": 25789,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 25775,
											"end": 25784,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25766,
											"end": 25773,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 25762,
											"end": 25785,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 25758,
											"end": 25790,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 25755,
											"end": 25807,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 25755,
											"end": 25807,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "785"
										},
										{
											"begin": 25755,
											"end": 25807,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25803,
											"end": 25804,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25800,
											"end": 25801,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 25793,
											"end": 25805,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 25755,
											"end": 25807,
											"name": "tag",
											"source": 17,
											"value": "785"
										},
										{
											"begin": 25755,
											"end": 25807,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25836,
											"end": 25845,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 25830,
											"end": 25846,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25861,
											"end": 25867,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25858,
											"end": 25888,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 25855,
											"end": 25905,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 25855,
											"end": 25905,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "786"
										},
										{
											"begin": 25855,
											"end": 25905,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 25901,
											"end": 25902,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 25898,
											"end": 25899,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 25891,
											"end": 25903,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 25855,
											"end": 25905,
											"name": "tag",
											"source": 17,
											"value": "786"
										},
										{
											"begin": 25855,
											"end": 25905,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 25924,
											"end": 25946,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 25924,
											"end": 25946,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25977,
											"end": 25981,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 25969,
											"end": 25982,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 25969,
											"end": 25982,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 25965,
											"end": 25992,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 25955,
											"end": 26010,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "787"
										},
										{
											"begin": 25955,
											"end": 26010,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 26006,
											"end": 26007,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26003,
											"end": 26004,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 25996,
											"end": 26008,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 25955,
											"end": 26010,
											"name": "tag",
											"source": 17,
											"value": "787"
										},
										{
											"begin": 25955,
											"end": 26010,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26035,
											"end": 26037,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 26029,
											"end": 26038,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 26058,
											"end": 26116,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "788"
										},
										{
											"begin": 26074,
											"end": 26115,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "602"
										},
										{
											"begin": 26112,
											"end": 26114,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26074,
											"end": 26115,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "583"
										},
										{
											"begin": 26074,
											"end": 26115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26058,
											"end": 26116,
											"name": "tag",
											"source": 17,
											"value": "788"
										},
										{
											"begin": 26058,
											"end": 26116,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26150,
											"end": 26165,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26150,
											"end": 26165,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26150,
											"end": 26165,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26232,
											"end": 26233,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 26228,
											"end": 26238,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26228,
											"end": 26238,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26228,
											"end": 26238,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 26228,
											"end": 26238,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 26220,
											"end": 26239,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26220,
											"end": 26239,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26216,
											"end": 26244,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26216,
											"end": 26244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26216,
											"end": 26244,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26181,
											"end": 26193,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26181,
											"end": 26193,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26181,
											"end": 26193,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26181,
											"end": 26193,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26256,
											"end": 26275,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 26256,
											"end": 26275,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26256,
											"end": 26275,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 26253,
											"end": 26292,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 26253,
											"end": 26292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "790"
										},
										{
											"begin": 26253,
											"end": 26292,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 26288,
											"end": 26289,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26285,
											"end": 26286,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 26278,
											"end": 26290,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 26253,
											"end": 26292,
											"name": "tag",
											"source": 17,
											"value": "790"
										},
										{
											"begin": 26253,
											"end": 26292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26312,
											"end": 26323,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 26312,
											"end": 26323,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26312,
											"end": 26323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26312,
											"end": 26323,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 26332,
											"end": 26467,
											"name": "tag",
											"source": 17,
											"value": "791"
										},
										{
											"begin": 26332,
											"end": 26467,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26348,
											"end": 26354,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26343,
											"end": 26346,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26340,
											"end": 26355,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 26332,
											"end": 26467,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 26332,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "718"
										},
										{
											"begin": 26332,
											"end": 26467,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 26414,
											"end": 26424,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26414,
											"end": 26424,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 26402,
											"end": 26425,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26402,
											"end": 26425,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26365,
											"end": 26377,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 26365,
											"end": 26377,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26365,
											"end": 26377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26365,
											"end": 26377,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 26445,
											"end": 26457,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26445,
											"end": 26457,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26445,
											"end": 26457,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26445,
											"end": 26457,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26332,
											"end": 26467,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "791"
										},
										{
											"begin": 26332,
											"end": 26467,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26502,
											"end": 27076,
											"name": "tag",
											"source": 17,
											"value": "502"
										},
										{
											"begin": 26502,
											"end": 27076,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 26793,
											"end": 26799,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 26782,
											"end": 26791,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 26775,
											"end": 26800,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26836,
											"end": 26842,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 26831,
											"end": 26833,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 26820,
											"end": 26829,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26816,
											"end": 26834,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26809,
											"end": 26843,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26879,
											"end": 26882,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 26874,
											"end": 26876,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 26863,
											"end": 26872,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 26859,
											"end": 26877,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26852,
											"end": 26883,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26756,
											"end": 26760,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 26900,
											"end": 26957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "795"
										},
										{
											"begin": 26952,
											"end": 26955,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 26941,
											"end": 26950,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26937,
											"end": 26956,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26929,
											"end": 26935,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 26900,
											"end": 26957,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 26900,
											"end": 26957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 26900,
											"end": 26957,
											"name": "tag",
											"source": 17,
											"value": "795"
										},
										{
											"begin": 26900,
											"end": 26957,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26993,
											"end": 27025,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 26993,
											"end": 27025,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 26993,
											"end": 27025,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 26993,
											"end": 27025,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 26988,
											"end": 26990,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 26973,
											"end": 26991,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 26973,
											"end": 26991,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 26966,
											"end": 27026,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27057,
											"end": 27060,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 27042,
											"end": 27061,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27035,
											"end": 27070,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 26892,
											"end": 26957,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 26502,
											"end": 27076,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26502,
											"end": 27076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27081,
											"end": 27370,
											"name": "tag",
											"source": 17,
											"value": "510"
										},
										{
											"begin": 27081,
											"end": 27370,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27256,
											"end": 27258,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 27245,
											"end": 27254,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27238,
											"end": 27259,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27219,
											"end": 27223,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27276,
											"end": 27321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "797"
										},
										{
											"begin": 27317,
											"end": 27319,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 27306,
											"end": 27315,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27302,
											"end": 27320,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27294,
											"end": 27300,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 27276,
											"end": 27321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 27276,
											"end": 27321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27276,
											"end": 27321,
											"name": "tag",
											"source": 17,
											"value": "797"
										},
										{
											"begin": 27276,
											"end": 27321,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27268,
											"end": 27321,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27268,
											"end": 27321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27357,
											"end": 27363,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27352,
											"end": 27354,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27341,
											"end": 27350,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 27337,
											"end": 27355,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27330,
											"end": 27364,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27081,
											"end": 27370,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 27081,
											"end": 27370,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27081,
											"end": 27370,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27081,
											"end": 27370,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27081,
											"end": 27370,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27081,
											"end": 27370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27375,
											"end": 28026,
											"name": "tag",
											"source": 17,
											"value": "522"
										},
										{
											"begin": 27375,
											"end": 28026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27570,
											"end": 27572,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27559,
											"end": 27568,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 27552,
											"end": 27573,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27533,
											"end": 27537,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 27608,
											"end": 27614,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27602,
											"end": 27615,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 27651,
											"end": 27655,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 27646,
											"end": 27648,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27635,
											"end": 27644,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27631,
											"end": 27649,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27624,
											"end": 27656,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27679,
											"end": 27731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "799"
										},
										{
											"begin": 27726,
											"end": 27729,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 27715,
											"end": 27724,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27711,
											"end": 27730,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27697,
											"end": 27709,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 27679,
											"end": 27731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 27679,
											"end": 27731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 27679,
											"end": 27731,
											"name": "tag",
											"source": 17,
											"value": "799"
										},
										{
											"begin": 27679,
											"end": 27731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 27665,
											"end": 27731,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 27665,
											"end": 27731,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27812,
											"end": 27813,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 27808,
											"end": 27809,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 27803,
											"end": 27806,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 27799,
											"end": 27810,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 27795,
											"end": 27814,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 27789,
											"end": 27791,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 27781,
											"end": 27787,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 27777,
											"end": 27792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27771,
											"end": 27793,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 27767,
											"end": 27815,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 27762,
											"end": 27764,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 27751,
											"end": 27760,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27747,
											"end": 27765,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27740,
											"end": 27816,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27870,
											"end": 27872,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 27862,
											"end": 27868,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27858,
											"end": 27873,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27852,
											"end": 27874,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 27847,
											"end": 27849,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 27836,
											"end": 27845,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27832,
											"end": 27850,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27825,
											"end": 27875,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27930,
											"end": 27932,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 27922,
											"end": 27928,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27918,
											"end": 27933,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27912,
											"end": 27934,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 27906,
											"end": 27909,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 27895,
											"end": 27904,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27891,
											"end": 27910,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27884,
											"end": 27935,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 27991,
											"end": 27994,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 27983,
											"end": 27989,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27979,
											"end": 27995,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27973,
											"end": 27996,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 27966,
											"end": 27970,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 27955,
											"end": 27964,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 27951,
											"end": 27971,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 27944,
											"end": 27997,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 28014,
											"end": 28020,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 28006,
											"end": 28020,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28006,
											"end": 28020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 28006,
											"end": 28020,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27375,
											"end": 28026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 27375,
											"end": 28026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 27375,
											"end": 28026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27375,
											"end": 28026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 27375,
											"end": 28026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28411,
											"end": 28698,
											"name": "tag",
											"source": 17,
											"value": "530"
										},
										{
											"begin": 28411,
											"end": 28698,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28540,
											"end": 28543,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 28578,
											"end": 28584,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 28572,
											"end": 28585,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 28594,
											"end": 28660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "802"
										},
										{
											"begin": 28653,
											"end": 28659,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 28648,
											"end": 28651,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 28641,
											"end": 28645,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 28633,
											"end": 28639,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 28629,
											"end": 28646,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28594,
											"end": 28660,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "577"
										},
										{
											"begin": 28594,
											"end": 28660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 28594,
											"end": 28660,
											"name": "tag",
											"source": 17,
											"value": "802"
										},
										{
											"begin": 28594,
											"end": 28660,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 28676,
											"end": 28692,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28676,
											"end": 28692,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 28676,
											"end": 28692,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 28676,
											"end": 28692,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 28676,
											"end": 28692,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 28411,
											"end": 28698,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28411,
											"end": 28698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
								"contracts/PYGGportfolioManagement.sol",
								"contracts/Structs.sol",
								"contracts/SwapOperationManager.sol",
								"contracts/interface/IPortfolioFactory.sol",
								"contracts/interface/IUniswapV2Router01.sol",
								"contracts/interface/IUniswapV2Router02.sol",
								"contracts/interface/IUniswapV3Quoter.sol",
								"contracts/interface/IWETH.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit((bytes[],uint256,uint8))": "945098db",
							"depositFee()": "67a52793",
							"ethDepositedFailed(address)": "c38cd0b5",
							"failedSwaps(uint256)": "378a653c",
							"getAllTokens()": "2a5c792a",
							"initialedTokens()": "81a06b73",
							"initializeTokens(address[],uint256[],uint16,uint16)": "3f595e29",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setSlippageTolerance(uint256)": "117da1ee",
							"slippageTolerance()": "d03153aa",
							"swapTokenForToken(address,uint256,uint8,address,bytes)": "74a66061",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"uniswapV2Router()": "1694505e",
							"uniswapV3Quoter()": "4d20d0f8",
							"uniswapV3Router()": "2c76d7a6",
							"userFailedSwaps(address)": "36a43f2b",
							"withdrawFeesByOwner(address)": "a738c7df",
							"withdrawInKind(uint256)": "3043d4d9",
							"withdrawToETH(uint256,bytes)": "00d06ddd",
							"withdrawalFee()": "8bc7e8c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_uniswapV2Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV3Router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_uniswapV3Quoter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_targetPercentage\",\"type\":\"uint256[]\"}],\"name\":\"AddToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes[]\",\"name\":\"path\",\"type\":\"bytes[]\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"enum Version\",\"name\":\"version\",\"type\":\"uint8\"}],\"internalType\":\"struct SwapPath\",\"name\":\"_swapath\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"ethDepositedFailed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"failedSwaps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllTokens\",\"outputs\":[{\"components\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetPercentage\",\"type\":\"uint256\"}],\"internalType\":\"struct TokenInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_targetPercentages\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16\",\"name\":\"_withdrawalFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_depositFee\",\"type\":\"uint16\"}],\"name\":\"initializeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippageTolerance\",\"type\":\"uint256\"}],\"name\":\"setSlippageTolerance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"enum Version\",\"name\":\"_version\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"swapTokenForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Quoter\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Quoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Router\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFailedSwaps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiverFeeAddress\",\"type\":\"address\"}],\"name\":\"withdrawFeesByOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawInKind\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"withdrawToETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PYGGportfolioManagement.sol\":\"PYGGportfolioManagement\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/PYGGportfolioManagement.sol\":{\"keccak256\":\"0x5e9d9d6945967e716d85a00e6564f609b0eada34e2d826c86daeb16220003301\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82f6115dcaaf533a9fc6505a5b8247505e319fea15e786813819437e9524be73\",\"dweb:/ipfs/QmY7Uj3UDNs3YDRW4RixaVbb68Y7CsPsj9xFpErWdjtS4g\"]},\"contracts/Structs.sol\":{\"keccak256\":\"0xa772fc542e8ef69a33f19d3da8cbac7827b55e15fcb6b153f1341c89a259bd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9cf2016224bce452b51b36dda7e8e33c90cfdb18fd322f17c64cd50c8a5ae27\",\"dweb:/ipfs/Qmb2rp9CzGP23vpsGTSLYjjwPkNWRjnR5gcskDdz3Fy1Cj\"]},\"contracts/SwapOperationManager.sol\":{\"keccak256\":\"0xf6880bd3ed68e6af231056a257a7b76f2d88638af7872f0c8f92f2bad37336b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83e9dbd1353bbb225d30a3eb3c9f800410e0c961b9fba7686b0434a94d0d068d\",\"dweb:/ipfs/QmX8PYdjbmX15sZx4CvB47S5N1P1F2F4YmtPnhgCqJhZyd\"]},\"contracts/interface/IPortfolioFactory.sol\":{\"keccak256\":\"0x279e26d2b173b5f0af3c7ebde4743c9025d7d124f8ee8e909108d8d1129e30f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de5efc1ed3d3a57b08b84250daa8fd836fb021c8d924edf71c45ae0cb8c764fb\",\"dweb:/ipfs/QmbpJBwGxCic8Xvg6VA67uPRuqKBDLuYGT5nG7reGR4XYn\"]},\"contracts/interface/IUniswapV2Router01.sol\":{\"keccak256\":\"0x66eb4b8355b7d1fcb2e9e3ca8a0968663d9e0b194ff02c09ef0d1ae7981aa67d\",\"urls\":[\"bzz-raw://f8da3fe63fbfd6331ce2b7f90983734e062193a54c67ca36826f40b6ccd9c7de\",\"dweb:/ipfs/QmcifLPYeYj3phcEqtBdz3oN2gy7EXbj7N5WUHEQ4FANsD\"]},\"contracts/interface/IUniswapV2Router02.sol\":{\"keccak256\":\"0x9e465376a0ef4e8d80352e20d0736cf9ea2690048bca06258ee0695dedc45cff\",\"urls\":[\"bzz-raw://e6e101f6aa140efc6686722aecd03a497561dd850a3678a49094f75d201958d4\",\"dweb:/ipfs/QmdUZvwXQ92WsYNwhUNgdGCMWSh6J1B9n5hogf42CuxU2b\"]},\"contracts/interface/IUniswapV3Quoter.sol\":{\"keccak256\":\"0x3a4b1f927b8a151e82079db2e397b648a13eaaded333defb9506d9e30ef75d30\",\"urls\":[\"bzz-raw://063b421b33ff8c3da3efba744a3be6490b9659773b996205a6eee874a86c903a\",\"dweb:/ipfs/QmRUdtYX7EhHRcfobahCzxr5KVD64krDrvYcUwTd1UMTL1\"]},\"contracts/interface/IWETH.sol\":{\"keccak256\":\"0x0b72127ded09ba8fc86c43905ade49d6f04563e101e2c539a18f1bd463d96736\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://05849a5c1f8050e3fa1a21a93428a5f19dc0e4d899e84e997c0b4b36d6e03224\",\"dweb:/ipfs/QmejKrEVQQN3v749r9RYLmAoVs8UrBtMySb3uuKRXphjiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 307,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "_balances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "_allowances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "_name",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "_symbol",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 1916,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "failedSwaps",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(FailedSwap)1879_storage)dyn_storage"
							},
							{
								"astId": 1918,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "slippageTolerance",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1922,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "userFailedSwaps",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1925,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "9",
								"type": "t_contract(IUniswapV2Router02)2671"
							},
							{
								"astId": 1928,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "uniswapV3Router",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(ISwapRouter)1047"
							},
							{
								"astId": 1931,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "uniswapV3Quoter",
								"offset": 0,
								"slot": "11",
								"type": "t_contract(IUniswapV3Quoter)2692"
							},
							{
								"astId": 1240,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "tokens",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_struct(TokenInfo)1871_storage)dyn_storage"
							},
							{
								"astId": 1242,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "totalFeesWETH",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1244,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "withdrawalFee",
								"offset": 0,
								"slot": "14",
								"type": "t_uint16"
							},
							{
								"astId": 1246,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "depositFee",
								"offset": 2,
								"slot": "14",
								"type": "t_uint16"
							},
							{
								"astId": 1249,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "initialedTokens",
								"offset": 4,
								"slot": "14",
								"type": "t_bool"
							},
							{
								"astId": 1253,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "ethDepositedFailed",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1255,
								"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
								"label": "factory",
								"offset": 0,
								"slot": "16",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(FailedSwap)1879_storage)dyn_storage": {
								"base": "t_struct(FailedSwap)1879_storage",
								"encoding": "dynamic_array",
								"label": "struct FailedSwap[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(TokenInfo)1871_storage)dyn_storage": {
								"base": "t_struct(TokenInfo)1871_storage",
								"encoding": "dynamic_array",
								"label": "struct TokenInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ISwapRouter)1047": {
								"encoding": "inplace",
								"label": "contract ISwapRouter",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)2671": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV3Quoter)2692": {
								"encoding": "inplace",
								"label": "contract IUniswapV3Quoter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(FailedSwap)1879_storage": {
								"encoding": "inplace",
								"label": "struct FailedSwap",
								"members": [
									{
										"astId": 1873,
										"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1876,
										"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
										"label": "token",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)877"
									},
									{
										"astId": 1878,
										"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(TokenInfo)1871_storage": {
								"encoding": "inplace",
								"label": "struct TokenInfo",
								"members": [
									{
										"astId": 1868,
										"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)877"
									},
									{
										"astId": 1870,
										"contract": "contracts/PYGGportfolioManagement.sol:PYGGportfolioManagement",
										"label": "targetPercentage",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/SwapOperationManager.sol": {
				"SwapOperationManager": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "failedSwaps",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_slippageTolerance",
									"type": "uint256"
								}
							],
							"name": "setSlippageTolerance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slippageTolerance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amountIn",
									"type": "uint256"
								},
								{
									"internalType": "enum Version",
									"name": "_version",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "_receiver",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_path",
									"type": "bytes"
								}
							],
							"name": "swapTokenForToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV2Router",
							"outputs": [
								{
									"internalType": "contract IUniswapV2Router02",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV3Quoter",
							"outputs": [
								{
									"internalType": "contract IUniswapV3Quoter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uniswapV3Router",
							"outputs": [
								{
									"internalType": "contract ISwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userFailedSwaps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"failedSwaps(uint256)": "378a653c",
							"setSlippageTolerance(uint256)": "117da1ee",
							"slippageTolerance()": "d03153aa",
							"swapTokenForToken(address,uint256,uint8,address,bytes)": "74a66061",
							"uniswapV2Router()": "1694505e",
							"uniswapV3Quoter()": "4d20d0f8",
							"uniswapV3Router()": "2c76d7a6",
							"userFailedSwaps(address)": "36a43f2b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"failedSwaps\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slippageTolerance\",\"type\":\"uint256\"}],\"name\":\"setSlippageTolerance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slippageTolerance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountIn\",\"type\":\"uint256\"},{\"internalType\":\"enum Version\",\"name\":\"_version\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_path\",\"type\":\"bytes\"}],\"name\":\"swapTokenForToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Quoter\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Quoter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV3Router\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userFailedSwaps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SwapOperationManager.sol\":\"SwapOperationManager\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"contracts/Structs.sol\":{\"keccak256\":\"0xa772fc542e8ef69a33f19d3da8cbac7827b55e15fcb6b153f1341c89a259bd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9cf2016224bce452b51b36dda7e8e33c90cfdb18fd322f17c64cd50c8a5ae27\",\"dweb:/ipfs/Qmb2rp9CzGP23vpsGTSLYjjwPkNWRjnR5gcskDdz3Fy1Cj\"]},\"contracts/SwapOperationManager.sol\":{\"keccak256\":\"0xf6880bd3ed68e6af231056a257a7b76f2d88638af7872f0c8f92f2bad37336b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83e9dbd1353bbb225d30a3eb3c9f800410e0c961b9fba7686b0434a94d0d068d\",\"dweb:/ipfs/QmX8PYdjbmX15sZx4CvB47S5N1P1F2F4YmtPnhgCqJhZyd\"]},\"contracts/interface/IUniswapV2Router01.sol\":{\"keccak256\":\"0x66eb4b8355b7d1fcb2e9e3ca8a0968663d9e0b194ff02c09ef0d1ae7981aa67d\",\"urls\":[\"bzz-raw://f8da3fe63fbfd6331ce2b7f90983734e062193a54c67ca36826f40b6ccd9c7de\",\"dweb:/ipfs/QmcifLPYeYj3phcEqtBdz3oN2gy7EXbj7N5WUHEQ4FANsD\"]},\"contracts/interface/IUniswapV2Router02.sol\":{\"keccak256\":\"0x9e465376a0ef4e8d80352e20d0736cf9ea2690048bca06258ee0695dedc45cff\",\"urls\":[\"bzz-raw://e6e101f6aa140efc6686722aecd03a497561dd850a3678a49094f75d201958d4\",\"dweb:/ipfs/QmdUZvwXQ92WsYNwhUNgdGCMWSh6J1B9n5hogf42CuxU2b\"]},\"contracts/interface/IUniswapV3Quoter.sol\":{\"keccak256\":\"0x3a4b1f927b8a151e82079db2e397b648a13eaaded333defb9506d9e30ef75d30\",\"urls\":[\"bzz-raw://063b421b33ff8c3da3efba744a3be6490b9659773b996205a6eee874a86c903a\",\"dweb:/ipfs/QmRUdtYX7EhHRcfobahCzxr5KVD64krDrvYcUwTd1UMTL1\"]},\"contracts/interface/IWETH.sol\":{\"keccak256\":\"0x0b72127ded09ba8fc86c43905ade49d6f04563e101e2c539a18f1bd463d96736\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://05849a5c1f8050e3fa1a21a93428a5f19dc0e4d899e84e997c0b4b36d6e03224\",\"dweb:/ipfs/QmejKrEVQQN3v749r9RYLmAoVs8UrBtMySb3uuKRXphjiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1916,
								"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
								"label": "failedSwaps",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(FailedSwap)1879_storage)dyn_storage"
							},
							{
								"astId": 1918,
								"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
								"label": "slippageTolerance",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1922,
								"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
								"label": "userFailedSwaps",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1925,
								"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
								"label": "uniswapV2Router",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IUniswapV2Router02)2671"
							},
							{
								"astId": 1928,
								"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
								"label": "uniswapV3Router",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(ISwapRouter)1047"
							},
							{
								"astId": 1931,
								"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
								"label": "uniswapV3Quoter",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IUniswapV3Quoter)2692"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(FailedSwap)1879_storage)dyn_storage": {
								"base": "t_struct(FailedSwap)1879_storage",
								"encoding": "dynamic_array",
								"label": "struct FailedSwap[]",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)877": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(ISwapRouter)1047": {
								"encoding": "inplace",
								"label": "contract ISwapRouter",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV2Router02)2671": {
								"encoding": "inplace",
								"label": "contract IUniswapV2Router02",
								"numberOfBytes": "20"
							},
							"t_contract(IUniswapV3Quoter)2692": {
								"encoding": "inplace",
								"label": "contract IUniswapV3Quoter",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(FailedSwap)1879_storage": {
								"encoding": "inplace",
								"label": "struct FailedSwap",
								"members": [
									{
										"astId": 1873,
										"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1876,
										"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
										"label": "token",
										"offset": 0,
										"slot": "1",
										"type": "t_contract(IERC20)877"
									},
									{
										"astId": 1878,
										"contract": "contracts/SwapOperationManager.sol:SwapOperationManager",
										"label": "amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IPortfolioFactory.sol": {
				"IPortfolioFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "portfolioAddress",
									"type": "address"
								}
							],
							"name": "PortfolioCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "_symbol",
									"type": "string"
								},
								{
									"internalType": "uint16",
									"name": "_withdrawalFee",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "_depositFee",
									"type": "uint16"
								},
								{
									"internalType": "address[]",
									"name": "_tokens",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_targetPercentages",
									"type": "uint256[]"
								}
							],
							"name": "createPortfolio",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "getPortfolios",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "symbol",
											"type": "string"
										},
										{
											"internalType": "address[]",
											"name": "tokens",
											"type": "address[]"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "portfolioAddress",
											"type": "address"
										}
									],
									"internalType": "struct Portfolio[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPortfolio(string,string,uint16,uint16,address[],uint256[])": "f39614b8",
							"getPortfolios(address)": "5f37dea8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"portfolioAddress\",\"type\":\"address\"}],\"name\":\"PortfolioCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_withdrawalFee\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_depositFee\",\"type\":\"uint16\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_targetPercentages\",\"type\":\"uint256[]\"}],\"name\":\"createPortfolio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getPortfolios\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"portfolioAddress\",\"type\":\"address\"}],\"internalType\":\"struct Portfolio[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IPortfolioFactory.sol\":\"IPortfolioFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/Structs.sol\":{\"keccak256\":\"0xa772fc542e8ef69a33f19d3da8cbac7827b55e15fcb6b153f1341c89a259bd3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9cf2016224bce452b51b36dda7e8e33c90cfdb18fd322f17c64cd50c8a5ae27\",\"dweb:/ipfs/Qmb2rp9CzGP23vpsGTSLYjjwPkNWRjnR5gcskDdz3Fy1Cj\"]},\"contracts/interface/IPortfolioFactory.sol\":{\"keccak256\":\"0x279e26d2b173b5f0af3c7ebde4743c9025d7d124f8ee8e909108d8d1129e30f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://de5efc1ed3d3a57b08b84250daa8fd836fb021c8d924edf71c45ae0cb8c764fb\",\"dweb:/ipfs/QmbpJBwGxCic8Xvg6VA67uPRuqKBDLuYGT5nG7reGR4XYn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IUniswapV2Router01.sol\":{\"keccak256\":\"0x66eb4b8355b7d1fcb2e9e3ca8a0968663d9e0b194ff02c09ef0d1ae7981aa67d\",\"urls\":[\"bzz-raw://f8da3fe63fbfd6331ce2b7f90983734e062193a54c67ca36826f40b6ccd9c7de\",\"dweb:/ipfs/QmcifLPYeYj3phcEqtBdz3oN2gy7EXbj7N5WUHEQ4FANsD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IUniswapV2Router02.sol": {
				"IUniswapV2Router02": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": "af2979eb",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "5b0d5984",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": "b6f9de95",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "791ac947",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": "5c11d795",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETHSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermitSupportingFeeOnTransferTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETHSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokensSupportingFeeOnTransferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IUniswapV2Router02.sol\":\"IUniswapV2Router02\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IUniswapV2Router01.sol\":{\"keccak256\":\"0x66eb4b8355b7d1fcb2e9e3ca8a0968663d9e0b194ff02c09ef0d1ae7981aa67d\",\"urls\":[\"bzz-raw://f8da3fe63fbfd6331ce2b7f90983734e062193a54c67ca36826f40b6ccd9c7de\",\"dweb:/ipfs/QmcifLPYeYj3phcEqtBdz3oN2gy7EXbj7N5WUHEQ4FANsD\"]},\"contracts/interface/IUniswapV2Router02.sol\":{\"keccak256\":\"0x9e465376a0ef4e8d80352e20d0736cf9ea2690048bca06258ee0695dedc45cff\",\"urls\":[\"bzz-raw://e6e101f6aa140efc6686722aecd03a497561dd850a3678a49094f75d201958d4\",\"dweb:/ipfs/QmdUZvwXQ92WsYNwhUNgdGCMWSh6J1B9n5hogf42CuxU2b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IUniswapV3Quoter.sol": {
				"IUniswapV3Quoter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IUniswapV3Quoter.sol\":\"IUniswapV3Quoter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interface/IUniswapV3Quoter.sol\":{\"keccak256\":\"0x3a4b1f927b8a151e82079db2e397b648a13eaaded333defb9506d9e30ef75d30\",\"urls\":[\"bzz-raw://063b421b33ff8c3da3efba744a3be6490b9659773b996205a6eee874a86c903a\",\"dweb:/ipfs/QmRUdtYX7EhHRcfobahCzxr5KVD64krDrvYcUwTd1UMTL1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interface/IWETH.sol": {
				"IWETH": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "Interface for WETH9",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interface/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"contracts/interface/IWETH.sol\":{\"keccak256\":\"0x0b72127ded09ba8fc86c43905ade49d6f04563e101e2c539a18f1bd463d96736\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://05849a5c1f8050e3fa1a21a93428a5f19dc0e4d899e84e997c0b4b36d6e03224\",\"dweb:/ipfs/QmejKrEVQQN3v749r9RYLmAoVs8UrBtMySb3uuKRXphjiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "Deposit ether to get wrapped ether"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw wrapped ether to get ether"
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interface/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interface/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interface/IUniswapV2Router02.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interface/IUniswapV2Router02.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interface/IUniswapV3Quoter.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/interface/IUniswapV3Quoter.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							947
						]
					},
					"id": 948,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 936,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:6",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 947,
							"linearizedBaseContracts": [
								947
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:6",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1197:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 938,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1226:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 940,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1255:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 942,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:6"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:6"
									},
									"scope": 947,
									"src": "1157:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 948,
							"src": "215:1077:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:6"
				},
				"id": 6
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							1047
						],
						"IUniswapV3SwapCallback": [
							947
						]
					},
					"id": 1048,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 949,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"id": 950,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:7"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 951,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1048,
							"sourceUnit": 948,
							"src": "91:83:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 953,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 947,
										"src": "305:22:7"
									},
									"id": 954,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:7"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 952,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:7",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 1047,
							"linearizedBaseContracts": [
								1047,
								947
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 971,
									"members": [
										{
											"constant": false,
											"id": 956,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "374:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 955,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 958,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "399:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 957,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 960,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "425:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 959,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 962,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "445:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 961,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 964,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "472:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 963,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 966,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "498:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 965,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 968,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "524:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 967,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 970,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 971,
											"src": "558:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 969,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:7",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "334:256:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:7",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "877:38:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 974,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 973,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 971,
														"src": "877:22:7"
													},
													"referencedDeclaration": 971,
													"src": "877:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$971_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:7"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "943:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:7"
									},
									"scope": 1047,
									"src": "851:111:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 991,
									"members": [
										{
											"constant": false,
											"id": 982,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1002:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 981,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 984,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1022:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 983,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 986,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1049:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 985,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1075:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 987,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:7",
											"nodeType": "VariableDeclaration",
											"scope": 991,
											"src": "1101:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 989,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:7",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "968:164:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 992,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:7",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 1000,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1436:32:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$991_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 994,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 993,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 991,
														"src": "1436:16:7"
													},
													"referencedDeclaration": 991,
													"src": "1436:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$991_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:7"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1000,
												"src": "1496:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:7"
									},
									"scope": 1047,
									"src": "1416:99:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 1017,
									"members": [
										{
											"constant": false,
											"id": 1002,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1562:15:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1001,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1004,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1587:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1003,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1006,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1613:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1005,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1008,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1633:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1007,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1010,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1660:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1009,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1012,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1686:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1011,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1014,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1713:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1013,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1016,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 1017,
											"src": "1746:25:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 1015,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:7",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "1521:257:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:7",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2066:39:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1017_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 1020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1019,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1017,
														"src": "2066:23:7"
													},
													"referencedDeclaration": 1017,
													"src": "2066:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$1017_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:7"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2133:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:7"
									},
									"scope": 1047,
									"src": "2039:112:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 1037,
									"members": [
										{
											"constant": false,
											"id": 1028,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2192:10:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1027,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1030,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2212:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1029,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1032,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2239:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1031,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1034,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2265:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1033,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1036,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:7",
											"nodeType": "VariableDeclaration",
											"scope": 1037,
											"src": "2292:23:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1035,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:7",
									"nodeType": "StructDefinition",
									"scope": 1047,
									"src": "2157:165:7",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:7",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 1046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2638:33:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$1037_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 1040,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1039,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1037,
														"src": "2638:17:7"
													},
													"referencedDeclaration": 1037,
													"src": "2638:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$1037_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:7"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "2699:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:7"
									},
									"scope": 1047,
									"src": "2617:100:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1048,
							"src": "280:2439:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:7"
				},
				"id": 7
			},
			"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"TransferHelper": [
							1218
						]
					},
					"id": 1219,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1049,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1219,
							"sourceUnit": 878,
							"src": "71:56:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1218,
							"linearizedBaseContracts": [
								1218
							],
							"name": "TransferHelper",
							"nameLocation": "137:14:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "690:229:8",
										"statements": [
											{
												"assignments": [
													1063,
													1065
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "706:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "701:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1062,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "701:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1065,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "728:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1098,
														"src": "715:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1064,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "715:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1078,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1070,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "782:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "789:12:8",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 876,
																		"src": "782:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "802:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "782:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1073,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1055,
																	"src": "812:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1074,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "818:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1075,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "822:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1068,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "759:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "763:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "759:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "759:69:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1066,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "748:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "754:4:8",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "748:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "748:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "700:129:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1080,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "847:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1081,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1065,
																					"src": "859:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "864:6:8",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "859:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1083,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "874:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "859:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1087,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1065,
																					"src": "890:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1089,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "897:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1088,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "897:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1090,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "896:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1085,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "879:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "883:6:8",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "879:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "879:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "859:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1093,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "858:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "847:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "906:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 1079,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "839:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "839:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "839:73:8"
											}
										]
									},
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "158:398:8",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "570:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "604:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "596:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "627:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "619:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "649:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "641:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "669:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "661:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "586:94:8"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "690:0:8"
									},
									"scope": 1218,
									"src": "561:358:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "1314:206:8",
										"statements": [
											{
												"assignments": [
													1110,
													1112
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1330:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "1325:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1109,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1325:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1112,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1352:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "1339:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1111,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1339:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1124,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1117,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "1394:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1401:8:8",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 844,
																		"src": "1394:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1410:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1394:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1120,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "1420:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1121,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1106,
																	"src": "1424:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1115,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1371:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1375:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1371:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1371:59:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1113,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "1360:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1366:4:8",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1360:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1324:107:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1126,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1110,
																"src": "1449:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1138,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1127,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "1461:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1466:6:8",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1461:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1476:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1461:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1133,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1112,
																					"src": "1492:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1135,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1499:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1134,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1499:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1136,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1498:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1131,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1481:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1132,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1485:6:8",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1481:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1481:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1461:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1139,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1460:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1449:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1508:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 1125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1441:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1441:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "1441:72:8"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "925:281:8",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1220:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1250:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1242:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1242:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1273:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1265:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1293:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "1285:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1232:72:8"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1314:0:8"
									},
									"scope": 1218,
									"src": "1211:309:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1190,
										"nodeType": "Block",
										"src": "1975:205:8",
										"statements": [
											{
												"assignments": [
													1156,
													1158
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1991:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "1986:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1155,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1986:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1158,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "2013:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1190,
														"src": "2000:17:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1157,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2000:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1170,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1163,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 877,
																			"src": "2055:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2062:7:8",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 864,
																		"src": "2055:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2070:8:8",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2055:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1166,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1150,
																	"src": "2080:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1167,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1152,
																	"src": "2084:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1161,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2032:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2036:18:8",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2032:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:58:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1159,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1148,
															"src": "2021:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2027:4:8",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "2021:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2021:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1985:106:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1172,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "2109:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1173,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "2121:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1174,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2126:6:8",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2121:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2136:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2121:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1179,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "2152:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1181,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "2159:4:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1180,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "2159:4:8",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1182,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "2158:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1177,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "2141:3:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "2145:6:8",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "2141:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2141:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "2121:44:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1185,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:46:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2109:57:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 1187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2168:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 1171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2101:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2101:72:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "2101:72:8"
											}
										]
									},
									"documentation": {
										"id": 1146,
										"nodeType": "StructuredDocumentation",
										"src": "1526:342:8",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 1191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1882:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1911:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1903:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1903:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1934:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1926:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1926:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1954:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "1946:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1893:72:8"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1975:0:8"
									},
									"scope": 1218,
									"src": "1873:307:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1216,
										"nodeType": "Block",
										"src": "2431:104:8",
										"statements": [
											{
												"assignments": [
													1200,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2447:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1216,
														"src": "2442:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1199,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2442:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1210,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2492:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "2482:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1205,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "2486:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2482:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1201,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "2460:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2463:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2460:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1203,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "2475:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2460:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:54:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1212,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "2513:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2522:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 1211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2505:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2505:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "2505:23:8"
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "2186:179:8",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 1217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "2379:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2403:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2395:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2415:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "2407:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:27:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2431:0:8"
									},
									"scope": 1218,
									"src": "2370:165:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1219,
							"src": "129:2408:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2493:8"
				},
				"id": 8
			},
			"contracts/PYGGportfolioManagement.sol": {
				"ast": {
					"absolutePath": "contracts/PYGGportfolioManagement.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"FailedSwap": [
							1879
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IPortfolioFactory": [
							2275
						],
						"ISwapRouter": [
							1047
						],
						"IUniswapV2Router01": [
							2583
						],
						"IUniswapV2Router02": [
							2671
						],
						"IUniswapV3Quoter": [
							2692
						],
						"IUniswapV3SwapCallback": [
							947
						],
						"IWETH": [
							2709
						],
						"Ownable": [
							147
						],
						"PYGGportfolioManagement": [
							1859
						],
						"Portfolio": [
							1891
						],
						"SwapOperationManager": [
							2230
						],
						"SwapPath": [
							1900
						],
						"TokenInfo": [
							1871
						],
						"TransferHelper": [
							1218
						],
						"Version": [
							1865
						]
					},
					"id": 1860,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1220,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1221,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 878,
							"src": "57:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 800,
							"src": "114:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 148,
							"src": "170:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IWETH.sol",
							"file": "./interface/IWETH.sol",
							"id": 1224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 2710,
							"src": "223:31:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IPortfolioFactory.sol",
							"file": "./interface/IPortfolioFactory.sol",
							"id": 1225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 2276,
							"src": "255:43:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Structs.sol",
							"file": "./Structs.sol",
							"id": 1229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 1901,
							"src": "299:61:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1226,
										"name": "TokenInfo",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1871,
										"src": "308:9:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1227,
										"name": "Version",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1865,
										"src": "319:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1228,
										"name": "SwapPath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1900,
										"src": "328:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/SwapOperationManager.sol",
							"file": "./SwapOperationManager.sol",
							"id": 1230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1860,
							"sourceUnit": 2231,
							"src": "361:36:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1231,
										"name": "Ownable",
										"nameLocations": [
											"435:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "435:7:9"
									},
									"id": 1232,
									"nodeType": "InheritanceSpecifier",
									"src": "435:7:9"
								},
								{
									"baseName": {
										"id": 1233,
										"name": "ERC20",
										"nameLocations": [
											"444:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "444:5:9"
									},
									"id": 1234,
									"nodeType": "InheritanceSpecifier",
									"src": "444:5:9"
								},
								{
									"baseName": {
										"id": 1235,
										"name": "SwapOperationManager",
										"nameLocations": [
											"451:20:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2230,
										"src": "451:20:9"
									},
									"id": 1236,
									"nodeType": "InheritanceSpecifier",
									"src": "451:20:9"
								}
							],
							"canonicalName": "PYGGportfolioManagement",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1859,
							"linearizedBaseContracts": [
								1859,
								2230,
								799,
								189,
								903,
								877,
								147,
								933
							],
							"name": "PYGGportfolioManagement",
							"nameLocation": "408:23:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1240,
									"mutability": "mutable",
									"name": "tokens",
									"nameLocation": "503:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "483:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
										"typeString": "struct TokenInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1238,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1237,
												"name": "TokenInfo",
												"nameLocations": [
													"483:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1871,
												"src": "483:9:9"
											},
											"referencedDeclaration": 1871,
											"src": "483:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
												"typeString": "struct TokenInfo"
											}
										},
										"id": 1239,
										"nodeType": "ArrayTypeName",
										"src": "483:11:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage_ptr",
											"typeString": "struct TokenInfo[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1242,
									"mutability": "mutable",
									"name": "totalFeesWETH",
									"nameLocation": "532:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "516:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "516:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8bc7e8c4",
									"id": 1244,
									"mutability": "mutable",
									"name": "withdrawalFee",
									"nameLocation": "565:13:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "551:27:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1243,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "551:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "67a52793",
									"id": 1246,
									"mutability": "mutable",
									"name": "depositFee",
									"nameLocation": "598:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "584:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 1245,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "584:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "81a06b73",
									"id": 1249,
									"mutability": "mutable",
									"name": "initialedTokens",
									"nameLocation": "627:15:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "615:35:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1247,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "615:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1248,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "645:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c38cd0b5",
									"id": 1253,
									"mutability": "mutable",
									"name": "ethDepositedFailed",
									"nameLocation": "692:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "657:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1252,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1250,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "665:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "657:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1251,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "676:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1255,
									"mutability": "mutable",
									"name": "factory",
									"nameLocation": "733:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1859,
									"src": "717:23:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1254,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "717:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "a6413c453391b24b1553ee2908b9fdb9d8528511a0b9983f82d823531cea38b8",
									"id": 1263,
									"name": "AddToken",
									"nameLocation": "753:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "772:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "762:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1256,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "762:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1257,
													"nodeType": "ArrayTypeName",
													"src": "762:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1261,
												"indexed": false,
												"mutability": "mutable",
												"name": "_targetPercentage",
												"nameLocation": "791:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "781:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1259,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "781:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1260,
													"nodeType": "ArrayTypeName",
													"src": "781:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:48:9"
									},
									"src": "747:63:9"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "1141:37:9",
										"statements": [
											{
												"expression": {
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1289,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "1151:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1290,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1161:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1165:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1161:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1151:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "1151:20:9"
											}
										]
									},
									"id": 1295,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1276,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1012:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1016:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1012:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1278,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1275,
												"name": "Ownable",
												"nameLocations": [
													"1004:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1004:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1004:19:9"
										},
										{
											"arguments": [
												{
													"id": 1280,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1265,
													"src": "1038:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1281,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "1045:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1282,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1279,
												"name": "ERC20",
												"nameLocations": [
													"1032:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1032:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1032:21:9"
										},
										{
											"arguments": [
												{
													"id": 1284,
													"name": "_uniswapV2Router",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1269,
													"src": "1083:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1285,
													"name": "_uniswapV3Router",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1271,
													"src": "1101:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1286,
													"name": "_uniswapV3Quoter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1273,
													"src": "1119:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1287,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1283,
												"name": "SwapOperationManager",
												"nameLocations": [
													"1062:20:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2230,
												"src": "1062:20:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1062:74:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "851:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "837:19:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1264,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "837:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "880:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "866:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "866:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "_uniswapV2Router",
												"nameLocation": "905:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "897:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "_uniswapV3Router",
												"nameLocation": "939:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "931:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "_uniswapV3Quoter",
												"nameLocation": "973:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "965:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "965:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "827:168:9"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1141:0:9"
									},
									"scope": 1859,
									"src": "816:362:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "1377:736:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1395:16:9",
															"subExpression": {
																"id": 1311,
																"name": "initialedTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "1396:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e697469616c697a6564",
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1413:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93c0ba99f1a18bcdc81fcbcb6b4f15a9a6725f937075aed6fac107ffcb147068",
																"typeString": "literal_string \"initialized\""
															},
															"value": "initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93c0ba99f1a18bcdc81fcbcb6b4f15a9a6725f937075aed6fac107ffcb147068",
																"typeString": "literal_string \"initialized\""
															}
														],
														"id": 1310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1387:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1387:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1315,
												"nodeType": "ExpressionStatement",
												"src": "1387:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1317,
																	"name": "_tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "1445:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1453:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1445:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1319,
																	"name": "_targetPercentages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "1463:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1320,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1482:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1463:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1445:43:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d69736d617463686564206c656e67746873",
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d0cd31a152fc6340b4f40e732c591a32b341e7f9a91088685c16c2b9bdfaa7eb",
																"typeString": "literal_string \"Mismatched lengths\""
															},
															"value": "Mismatched lengths"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d0cd31a152fc6340b4f40e732c591a32b341e7f9a91088685c16c2b9bdfaa7eb",
																"typeString": "literal_string \"Mismatched lengths\""
															}
														],
														"id": 1316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1437:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1437:74:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "1437:74:9"
											},
											{
												"expression": {
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1325,
														"name": "withdrawalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "1521:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1326,
														"name": "_withdrawalFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1303,
														"src": "1537:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1521:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "1521:30:9"
											},
											{
												"expression": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1329,
														"name": "depositFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "1561:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1330,
														"name": "_depositFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "1574:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "1561:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "1561:24:9"
											},
											{
												"assignments": [
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "totalPercentage",
														"nameLocation": "1603:15:9",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "1595:23:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1333,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1595:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1336,
												"initialValue": {
													"hexValue": "30",
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1621:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:27:9"
											},
											{
												"body": {
													"id": 1378,
													"nodeType": "Block",
													"src": "1677:292:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1349,
																				"name": "_targetPercentages",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1301,
																				"src": "1699:18:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																					"typeString": "uint256[] calldata"
																				}
																			},
																			"id": 1351,
																			"indexExpression": {
																				"id": 1350,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1338,
																				"src": "1718:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1699:21:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "3130303030",
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1724:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"value": "10000"
																		},
																		"src": "1699:30:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696450657263656e74616765",
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1731:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e440fb5c535f127aabfe89bbeeeccc3cd56c363beddc60d926cbf5d8efc7e1c2",
																			"typeString": "literal_string \"InvalidPercentage\""
																		},
																		"value": "InvalidPercentage"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e440fb5c535f127aabfe89bbeeeccc3cd56c363beddc60d926cbf5d8efc7e1c2",
																			"typeString": "literal_string \"InvalidPercentage\""
																		}
																	],
																	"id": 1348,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1691:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1691:60:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1356,
															"nodeType": "ExpressionStatement",
															"src": "1691:60:9"
														},
														{
															"expression": {
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1357,
																	"name": "totalPercentage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "1765:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1358,
																		"name": "_targetPercentages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1301,
																		"src": "1784:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 1360,
																	"indexExpression": {
																		"id": 1359,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "1803:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1784:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1765:40:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1362,
															"nodeType": "ExpressionStatement",
															"src": "1765:40:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1368,
																							"name": "_tokens",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1298,
																							"src": "1874:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																								"typeString": "address[] calldata"
																							}
																						},
																						"id": 1370,
																						"indexExpression": {
																							"id": 1369,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1338,
																							"src": "1882:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1874:10:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1367,
																					"name": "IERC20",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 877,
																					"src": "1867:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC20_$877_$",
																						"typeString": "type(contract IERC20)"
																					}
																				},
																				"id": 1371,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1867:18:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 1372,
																					"name": "_targetPercentages",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1301,
																					"src": "1921:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																						"typeString": "uint256[] calldata"
																					}
																				},
																				"id": 1374,
																				"indexExpression": {
																					"id": 1373,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1338,
																					"src": "1940:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1921:21:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$877",
																					"typeString": "contract IERC20"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1366,
																			"name": "TokenInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1871,
																			"src": "1832:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_TokenInfo_$1871_storage_ptr_$",
																				"typeString": "type(struct TokenInfo storage pointer)"
																			}
																		},
																		"id": 1375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"1860:5:9",
																			"1903:16:9"
																		],
																		"names": [
																			"token",
																			"targetPercentage"
																		],
																		"nodeType": "FunctionCall",
																		"src": "1832:125:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenInfo_$1871_memory_ptr",
																			"typeString": "struct TokenInfo memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_TokenInfo_$1871_memory_ptr",
																			"typeString": "struct TokenInfo memory"
																		}
																	],
																	"expression": {
																		"id": 1363,
																		"name": "tokens",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "1820:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
																			"typeString": "struct TokenInfo storage ref[] storage ref"
																		}
																	},
																	"id": 1365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1827:4:9",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "1820:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage_ptr_$_t_struct$_TokenInfo_$1871_storage_$returns$__$attached_to$_t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct TokenInfo storage ref[] storage pointer,struct TokenInfo storage ref)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1820:138:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1377,
															"nodeType": "ExpressionStatement",
															"src": "1820:138:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1341,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1652:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1342,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "1656:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1664:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1656:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1652:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1379,
												"initializationExpression": {
													"assignments": [
														1338
													],
													"declarations": [
														{
															"constant": false,
															"id": 1338,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1645:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1379,
															"src": "1637:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1337,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1637:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1340,
													"initialValue": {
														"hexValue": "30",
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1649:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1637:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1672:3:9",
														"subExpression": {
															"id": 1345,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "1672:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1347,
													"nodeType": "ExpressionStatement",
													"src": "1672:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1632:337:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1381,
																"name": "totalPercentage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "1986:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2005:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "1986:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "743d3130303030",
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2012:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4a497c7de4c60310745be8aea0933bf35943d3cb64819d72af166af33d8182a",
																"typeString": "literal_string \"t=10000\""
															},
															"value": "t=10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4a497c7de4c60310745be8aea0933bf35943d3cb64819d72af166af33d8182a",
																"typeString": "literal_string \"t=10000\""
															}
														],
														"id": 1380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1978:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1978:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "1978:44:9"
											},
											{
												"expression": {
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1387,
														"name": "initialedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "2032:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2050:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2032:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "2032:22:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1392,
															"name": "_tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "2078:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 1393,
															"name": "_targetPercentages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "2087:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 1391,
														"name": "AddToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "2069:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,uint256[] memory)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2069:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "EmitStatement",
												"src": "2064:42:9"
											}
										]
									},
									"functionSelector": "3f595e29",
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1307,
												"name": "onlyOwner",
												"nameLocations": [
													"1367:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1367:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1367:9:9"
										}
									],
									"name": "initializeTokens",
									"nameLocation": "1193:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "1238:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1219:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1296,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1219:7:9",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1297,
													"nodeType": "ArrayTypeName",
													"src": "1219:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "_targetPercentages",
												"nameLocation": "1274:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1255:37:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1255:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ArrayTypeName",
													"src": "1255:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "_withdrawalFee",
												"nameLocation": "1309:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1302:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1302,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1302:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "_depositFee",
												"nameLocation": "1340:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "1333:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1304,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1333:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1209:148:9"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1377:0:9"
									},
									"scope": 1859,
									"src": "1184:929:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "2181:1230:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1404,
																	"name": "_swapath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "2199:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_SwapPath_$1900_calldata_ptr",
																		"typeString": "struct SwapPath calldata"
																	}
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2208:8:9",
																"memberName": "amountIn",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1896,
																"src": "2199:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2219:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2199:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "213e30",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2222:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45c812600051f1bbf52d9a900a60b3f44a3af7878f1b088ff787de8ce9ff1548",
																"typeString": "literal_string \"!>0\""
															},
															"value": "!>0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45c812600051f1bbf52d9a900a60b3f44a3af7878f1b088ff787de8ce9ff1548",
																"typeString": "literal_string \"!>0\""
															}
														],
														"id": 1403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2191:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2191:37:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "2191:37:9"
											},
											{
												"assignments": [
													1412
												],
												"declarations": [
													{
														"constant": false,
														"id": 1412,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2255:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "2247:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2247:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1420,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1413,
																		"name": "_swapath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "2262:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_SwapPath_$1900_calldata_ptr",
																			"typeString": "struct SwapPath calldata"
																		}
																	},
																	"id": 1414,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2271:8:9",
																	"memberName": "amountIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1896,
																	"src": "2262:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1415,
																	"name": "depositFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1246,
																	"src": "2282:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "2262:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1417,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2261:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2261:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2247:54:9"
											},
											{
												"assignments": [
													1422
												],
												"declarations": [
													{
														"constant": false,
														"id": 1422,
														"mutability": "mutable",
														"name": "amountAfterFee",
														"nameLocation": "2319:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1569,
														"src": "2311:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1421,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2311:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1427,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1423,
															"name": "_swapath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "2336:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapPath_$1900_calldata_ptr",
																"typeString": "struct SwapPath calldata"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2345:8:9",
														"memberName": "amountIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1896,
														"src": "2336:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1425,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "2356:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2336:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2311:48:9"
											},
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1428,
														"name": "totalFeesWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "2369:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1429,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1412,
														"src": "2386:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2369:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "2369:20:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1433,
																"name": "amountAfterFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "2408:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2425:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2408:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "213e30",
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2428:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45c812600051f1bbf52d9a900a60b3f44a3af7878f1b088ff787de8ce9ff1548",
																"typeString": "literal_string \"!>0\""
															},
															"value": "!>0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45c812600051f1bbf52d9a900a60b3f44a3af7878f1b088ff787de8ce9ff1548",
																"typeString": "literal_string \"!>0\""
															}
														],
														"id": 1432,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2400:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2400:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1438,
												"nodeType": "ExpressionStatement",
												"src": "2400:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1444,
																			"name": "uniswapV2Router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "2484:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
																				"typeString": "contract IUniswapV2Router02"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2500:4:9",
																		"memberName": "WETH",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2287,
																		"src": "2484:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																			"typeString": "function () pure external returns (address)"
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2484:22:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2476:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1442,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2476:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2476:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1448,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2509:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2513:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2509:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1452,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2529:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																		"typeString": "contract PYGGportfolioManagement"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																		"typeString": "contract PYGGportfolioManagement"
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2521:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2521:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2521:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1454,
																"name": "_swapath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "2536:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SwapPath_$1900_calldata_ptr",
																	"typeString": "struct SwapPath calldata"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2545:8:9",
															"memberName": "amountIn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1896,
															"src": "2536:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1439,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2444:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1218_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2459:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1099,
														"src": "2444:31:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2444:110:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "2444:110:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1463,
																			"name": "uniswapV2Router",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "2599:15:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
																				"typeString": "contract IUniswapV2Router02"
																			}
																		},
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2615:4:9",
																		"memberName": "WETH",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2287,
																		"src": "2599:20:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
																			"typeString": "function () pure external returns (address)"
																		}
																	},
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2599:22:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2591:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1461,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2591:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2591:31:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1469,
																	"name": "uniswapV3Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "2632:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 1468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2624:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2624:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2624:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1471,
																"name": "_swapath",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "2650:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_SwapPath_$1900_calldata_ptr",
																	"typeString": "struct SwapPath calldata"
																}
															},
															"id": 1472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2659:8:9",
															"memberName": "amountIn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1896,
															"src": "2650:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1458,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2564:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1218_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2579:11:9",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1191,
														"src": "2564:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:104:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1474,
												"nodeType": "ExpressionStatement",
												"src": "2564:104:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2693:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2697:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2693:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1478,
															"name": "amountAfterFee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "2705:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1475,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "2687:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2687:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "2687:33:9"
											},
											{
												"body": {
													"id": 1567,
													"nodeType": "Block",
													"src": "2775:630:9",
													"statements": [
														{
															"assignments": [
																1494
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1494,
																	"mutability": "mutable",
																	"name": "tokenInfo",
																	"nameLocation": "2807:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1567,
																	"src": "2789:27:9",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																		"typeString": "struct TokenInfo"
																	},
																	"typeName": {
																		"id": 1493,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1492,
																			"name": "TokenInfo",
																			"nameLocations": [
																				"2789:9:9"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1871,
																			"src": "2789:9:9"
																		},
																		"referencedDeclaration": 1871,
																		"src": "2789:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																			"typeString": "struct TokenInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1498,
															"initialValue": {
																"baseExpression": {
																	"id": 1495,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "2819:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
																		"typeString": "struct TokenInfo storage ref[] storage ref"
																	}
																},
																"id": 1497,
																"indexExpression": {
																	"id": 1496,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "2826:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2819:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenInfo_$1871_storage",
																	"typeString": "struct TokenInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2789:39:9"
														},
														{
															"assignments": [
																1500
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1500,
																	"mutability": "mutable",
																	"name": "ethAmount",
																	"nameLocation": "2850:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1567,
																	"src": "2842:17:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1499,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2842:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1508,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1501,
																				"name": "amountAfterFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1422,
																				"src": "2863:14:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 1502,
																					"name": "tokenInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1494,
																					"src": "2880:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																						"typeString": "struct TokenInfo storage pointer"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2890:16:9",
																				"memberName": "targetPercentage",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1870,
																				"src": "2880:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2863:43:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1505,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2862:45:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2910:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "2862:53:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2842:73:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1510,
																			"name": "ethAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1500,
																			"src": "2937:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"id": 1511,
																			"name": "amountAfterFee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "2950:14:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2937:27:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "21657468416d6f756e743c3d616d6f756e74666565",
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2966:23:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1b46fc9d5659517d54d1e91f95e643694e5a270c6fbbe576541c1244cf2a3773",
																			"typeString": "literal_string \"!ethAmount<=amountfee\""
																		},
																		"value": "!ethAmount<=amountfee"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1b46fc9d5659517d54d1e91f95e643694e5a270c6fbbe576541c1244cf2a3773",
																			"typeString": "literal_string \"!ethAmount<=amountfee\""
																		}
																	],
																	"id": 1509,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "2929:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2929:61:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1515,
															"nodeType": "ExpressionStatement",
															"src": "2929:61:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1516,
																	"name": "ethAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1500,
																	"src": "3008:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1517,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3020:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3008:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1566,
															"nodeType": "IfStatement",
															"src": "3004:391:9",
															"trueBody": {
																"id": 1565,
																"nodeType": "Block",
																"src": "3023:372:9",
																"statements": [
																	{
																		"clauses": [
																			{
																				"block": {
																					"id": 1535,
																					"nodeType": "Block",
																					"src": "3147:2:9",
																					"statements": []
																				},
																				"errorName": "",
																				"id": 1536,
																				"nodeType": "TryCatchClause",
																				"src": "3147:2:9"
																			},
																			{
																				"block": {
																					"id": 1562,
																					"nodeType": "Block",
																					"src": "3156:225:9",
																					"statements": [
																						{
																							"expression": {
																								"id": 1542,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1537,
																										"name": "ethDepositedFailed",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1253,
																										"src": "3178:18:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 1540,
																									"indexExpression": {
																										"expression": {
																											"id": 1538,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "3197:3:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 1539,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "3201:6:9",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "3197:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "3178:30:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "+=",
																								"rightHandSide": {
																									"id": 1541,
																									"name": "ethAmount",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1500,
																									"src": "3212:9:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "3178:43:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1543,
																							"nodeType": "ExpressionStatement",
																							"src": "3178:43:9"
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"expression": {
																													"id": 1548,
																													"name": "msg",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967281,
																													"src": "3271:3:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_magic_message",
																														"typeString": "msg"
																													}
																												},
																												"id": 1549,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "3275:6:9",
																												"memberName": "sender",
																												"nodeType": "MemberAccess",
																												"src": "3271:10:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"expression": {
																													"id": 1550,
																													"name": "tokenInfo",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1494,
																													"src": "3283:9:9",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																														"typeString": "struct TokenInfo storage pointer"
																													}
																												},
																												"id": 1551,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "3293:5:9",
																												"memberName": "token",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 1868,
																												"src": "3283:15:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_contract$_IERC20_$877",
																													"typeString": "contract IERC20"
																												}
																											},
																											{
																												"id": 1552,
																												"name": "ethAmount",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1500,
																												"src": "3300:9:9",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_contract$_IERC20_$877",
																													"typeString": "contract IERC20"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"id": 1547,
																											"name": "FailedSwap",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1879,
																											"src": "3260:10:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_struct$_FailedSwap_$1879_storage_ptr_$",
																												"typeString": "type(struct FailedSwap storage pointer)"
																											}
																										},
																										"id": 1553,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "structConstructorCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "3260:50:9",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_FailedSwap_$1879_memory_ptr",
																											"typeString": "struct FailedSwap memory"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_struct$_FailedSwap_$1879_memory_ptr",
																											"typeString": "struct FailedSwap memory"
																										}
																									],
																									"expression": {
																										"id": 1544,
																										"name": "failedSwaps",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1916,
																										"src": "3243:11:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_struct$_FailedSwap_$1879_storage_$dyn_storage",
																											"typeString": "struct FailedSwap storage ref[] storage ref"
																										}
																									},
																									"id": 1546,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "3255:4:9",
																									"memberName": "push",
																									"nodeType": "MemberAccess",
																									"src": "3243:16:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FailedSwap_$1879_storage_$dyn_storage_ptr_$_t_struct$_FailedSwap_$1879_storage_$returns$__$attached_to$_t_array$_t_struct$_FailedSwap_$1879_storage_$dyn_storage_ptr_$",
																										"typeString": "function (struct FailedSwap storage ref[] storage pointer,struct FailedSwap storage ref)"
																									}
																								},
																								"id": 1554,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "3243:68:9",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1555,
																							"nodeType": "ExpressionStatement",
																							"src": "3243:68:9"
																						},
																						{
																							"expression": {
																								"id": 1560,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "3333:29:9",
																								"subExpression": {
																									"baseExpression": {
																										"id": 1556,
																										"name": "userFailedSwaps",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1922,
																										"src": "3333:15:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																											"typeString": "mapping(address => uint256)"
																										}
																									},
																									"id": 1559,
																									"indexExpression": {
																										"expression": {
																											"id": 1557,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "3349:3:9",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 1558,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "3353:6:9",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "3349:10:9",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "3333:27:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1561,
																							"nodeType": "ExpressionStatement",
																							"src": "3333:29:9"
																						}
																					]
																				},
																				"errorName": "",
																				"id": 1563,
																				"nodeType": "TryCatchClause",
																				"src": "3150:231:9"
																			}
																		],
																		"externalCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1521,
																						"name": "tokenInfo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1494,
																						"src": "3068:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																							"typeString": "struct TokenInfo storage pointer"
																						}
																					},
																					"id": 1522,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3078:5:9",
																					"memberName": "token",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1868,
																					"src": "3068:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					}
																				},
																				{
																					"id": 1523,
																					"name": "ethAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1500,
																					"src": "3085:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1524,
																						"name": "_swapath",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1400,
																						"src": "3096:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_SwapPath_$1900_calldata_ptr",
																							"typeString": "struct SwapPath calldata"
																						}
																					},
																					"id": 1525,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3105:7:9",
																					"memberName": "version",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1899,
																					"src": "3096:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Version_$1865",
																						"typeString": "enum Version"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1528,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "3122:4:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																								"typeString": "contract PYGGportfolioManagement"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																								"typeString": "contract PYGGportfolioManagement"
																							}
																						],
																						"id": 1527,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3114:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1526,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "3114:7:9",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1529,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3114:13:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"expression": {
																							"id": 1530,
																							"name": "_swapath",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1400,
																							"src": "3129:8:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_SwapPath_$1900_calldata_ptr",
																								"typeString": "struct SwapPath calldata"
																							}
																						},
																						"id": 1531,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3138:4:9",
																						"memberName": "path",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1894,
																						"src": "3129:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																							"typeString": "bytes calldata[] calldata"
																						}
																					},
																					"id": 1533,
																					"indexExpression": {
																						"id": 1532,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1482,
																						"src": "3143:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3129:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_enum$_Version_$1865",
																						"typeString": "enum Version"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_bytes_calldata_ptr",
																						"typeString": "bytes calldata"
																					}
																				],
																				"expression": {
																					"id": 1519,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3045:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																						"typeString": "contract PYGGportfolioManagement"
																					}
																				},
																				"id": 1520,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3050:17:9",
																				"memberName": "swapTokenForToken",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2012,
																				"src": "3045:22:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$877_$_t_uint256_$_t_enum$_Version_$1865_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																					"typeString": "function (contract IERC20,uint256,enum Version,address,bytes memory) external returns (uint256)"
																				}
																			},
																			"id": 1534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3045:101:9",
																			"tryCall": true,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1564,
																		"nodeType": "TryStatement",
																		"src": "3041:340:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1485,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1482,
														"src": "2751:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1486,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "2755:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
																"typeString": "struct TokenInfo storage ref[] storage ref"
															}
														},
														"id": 1487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2762:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2755:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2751:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1568,
												"initializationExpression": {
													"assignments": [
														1482
													],
													"declarations": [
														{
															"constant": false,
															"id": 1482,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2744:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1568,
															"src": "2736:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1481,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2736:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1484,
													"initialValue": {
														"hexValue": "30",
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2748:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2736:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2770:3:9",
														"subExpression": {
															"id": 1489,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "2770:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1491,
													"nodeType": "ExpressionStatement",
													"src": "2770:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2731:674:9"
											}
										]
									},
									"functionSelector": "945098db",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "2128:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "_swapath",
												"nameLocation": "2154:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2136:26:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_SwapPath_$1900_calldata_ptr",
													"typeString": "struct SwapPath"
												},
												"typeName": {
													"id": 1399,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1398,
														"name": "SwapPath",
														"nameLocations": [
															"2136:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1900,
														"src": "2136:8:9"
													},
													"referencedDeclaration": 1900,
													"src": "2136:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapPath_$1900_storage_ptr",
														"typeString": "struct SwapPath"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2135:28:9"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2181:0:9"
									},
									"scope": 1859,
									"src": "2119:1292:9",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "3490:1178:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1578,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "3508:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3522:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3508:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "3e30",
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3525:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79e957a474f31b7d225f956dfbdfc2f074a8dc53d0329af3ba3119fb1da596ab",
																"typeString": "literal_string \">0\""
															},
															"value": ">0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79e957a474f31b7d225f956dfbdfc2f074a8dc53d0329af3ba3119fb1da596ab",
																"typeString": "literal_string \">0\""
															}
														],
														"id": 1577,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3500:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1583,
												"nodeType": "ExpressionStatement",
												"src": "3500:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1587,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3563:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3567:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3563:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1585,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "3548:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																			"typeString": "contract PYGGportfolioManagement"
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3553:9:9",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 385,
																	"src": "3548:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3548:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1590,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "3578:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3548:41:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "21496e73756666696369656e74",
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3591:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fba75e6924a64c3df8a8071c74ed6388accffd70fa19b24ac68c01b18965425e",
																"typeString": "literal_string \"!Insufficient\""
															},
															"value": "!Insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fba75e6924a64c3df8a8071c74ed6388accffd70fa19b24ac68c01b18965425e",
																"typeString": "literal_string \"!Insufficient\""
															}
														],
														"id": 1584,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3540:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3540:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "3540:67:9"
											},
											{
												"assignments": [
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "_swapath",
														"nameLocation": "3634:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "3618:24:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_SwapPath_$1900_memory_ptr",
															"typeString": "struct SwapPath"
														},
														"typeName": {
															"id": 1596,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1595,
																"name": "SwapPath",
																"nameLocations": [
																	"3618:8:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1900,
																"src": "3618:8:9"
															},
															"referencedDeclaration": 1900,
															"src": "3618:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_SwapPath_$1900_storage_ptr",
																"typeString": "struct SwapPath"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"arguments": [
														{
															"id": 1600,
															"name": "_path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "3657:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1601,
																	"name": "SwapPath",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1900,
																	"src": "3665:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_struct$_SwapPath_$1900_storage_ptr_$",
																		"typeString": "type(struct SwapPath storage pointer)"
																	}
																}
															],
															"id": 1602,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3664:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_SwapPath_$1900_storage_ptr_$",
																"typeString": "type(struct SwapPath storage pointer)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_struct$_SwapPath_$1900_storage_ptr_$",
																"typeString": "type(struct SwapPath storage pointer)"
															}
														],
														"expression": {
															"id": 1598,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3646:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3650:6:9",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "3646:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3646:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_SwapPath_$1900_memory_ptr",
														"typeString": "struct SwapPath memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3617:58:9"
											},
											{
												"assignments": [
													1606
												],
												"declarations": [
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "percentage",
														"nameLocation": "3694:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "3686:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3686:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1614,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1607,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "3708:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3722:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "3708:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1610,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3707:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1611,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "3731:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3731:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3707:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3686:58:9"
											},
											{
												"assignments": [
													1616
												],
												"declarations": [
													{
														"constant": false,
														"id": 1616,
														"mutability": "mutable",
														"name": "WETH9",
														"nameLocation": "3763:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "3755:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1615,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3755:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1620,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1617,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "3771:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 1618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3787:4:9",
														"memberName": "WETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2287,
														"src": "3771:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_pure$__$returns$_t_address_$",
															"typeString": "function () pure external returns (address)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3771:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3755:38:9"
											},
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "totalWETH",
														"nameLocation": "3811:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1726,
														"src": "3803:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3803:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"hexValue": "30",
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3823:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3803:21:9"
											},
											{
												"body": {
													"id": 1685,
													"nodeType": "Block",
													"src": "3878:410:9",
													"statements": [
														{
															"assignments": [
																1638
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1638,
																	"mutability": "mutable",
																	"name": "tokenInfo",
																	"nameLocation": "3910:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1685,
																	"src": "3892:27:9",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																		"typeString": "struct TokenInfo"
																	},
																	"typeName": {
																		"id": 1637,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1636,
																			"name": "TokenInfo",
																			"nameLocations": [
																				"3892:9:9"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1871,
																			"src": "3892:9:9"
																		},
																		"referencedDeclaration": 1871,
																		"src": "3892:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																			"typeString": "struct TokenInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1642,
															"initialValue": {
																"baseExpression": {
																	"id": 1639,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "3922:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
																		"typeString": "struct TokenInfo storage ref[] storage ref"
																	}
																},
																"id": 1641,
																"indexExpression": {
																	"id": 1640,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "3929:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3922:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenInfo_$1871_storage",
																	"typeString": "struct TokenInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3892:39:9"
														},
														{
															"assignments": [
																1644
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1644,
																	"mutability": "mutable",
																	"name": "tokenAmountToWithdraw",
																	"nameLocation": "3953:21:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1685,
																	"src": "3945:29:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1643,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3945:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1658,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1650,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "4012:4:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																									"typeString": "contract PYGGportfolioManagement"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																									"typeString": "contract PYGGportfolioManagement"
																								}
																							],
																							"id": 1649,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "4004:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1648,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "4004:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1651,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4004:13:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1645,
																							"name": "tokenInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1638,
																							"src": "3978:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																								"typeString": "struct TokenInfo storage pointer"
																							}
																						},
																						"id": 1646,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3988:5:9",
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1868,
																						"src": "3978:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$877",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 1647,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3994:9:9",
																					"memberName": "balanceOf",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 834,
																					"src": "3978:25:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 1652,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3978:40:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1653,
																				"name": "percentage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1606,
																				"src": "4021:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3978:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1655,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3977:55:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4035:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "3977:63:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3945:95:9"
														},
														{
															"clauses": [
																{
																	"block": {
																		"id": 1680,
																		"nodeType": "Block",
																		"src": "4204:65:9",
																		"statements": [
																			{
																				"expression": {
																					"id": 1678,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"id": 1676,
																						"name": "totalWETH",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1622,
																						"src": "4226:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "+=",
																					"rightHandSide": {
																						"id": 1677,
																						"name": "ethReceived",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1674,
																						"src": "4239:11:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4226:24:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1679,
																				"nodeType": "ExpressionStatement",
																				"src": "4226:24:9"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1681,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1675,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1674,
																				"mutability": "mutable",
																				"name": "ethReceived",
																				"nameLocation": "4190:11:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 1681,
																				"src": "4182:19:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1673,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4182:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "4181:22:9"
																	},
																	"src": "4173:96:9"
																},
																{
																	"block": {
																		"id": 1682,
																		"nodeType": "Block",
																		"src": "4276:2:9",
																		"statements": []
																	},
																	"errorName": "",
																	"id": 1683,
																	"nodeType": "TryCatchClause",
																	"src": "4270:8:9"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1661,
																			"name": "tokenInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1638,
																			"src": "4085:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																				"typeString": "struct TokenInfo storage pointer"
																			}
																		},
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4095:5:9",
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1868,
																		"src": "4085:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1663,
																		"name": "tokenAmountToWithdraw",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "4102:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1664,
																			"name": "_swapath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "4125:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_SwapPath_$1900_memory_ptr",
																				"typeString": "struct SwapPath memory"
																			}
																		},
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4134:7:9",
																		"memberName": "version",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1899,
																		"src": "4125:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_Version_$1865",
																			"typeString": "enum Version"
																		}
																	},
																	{
																		"expression": {
																			"id": 1666,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4143:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4147:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4143:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"expression": {
																				"id": 1668,
																				"name": "_swapath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1597,
																				"src": "4155:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_SwapPath_$1900_memory_ptr",
																					"typeString": "struct SwapPath memory"
																				}
																			},
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4164:4:9",
																			"memberName": "path",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1894,
																			"src": "4155:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																				"typeString": "bytes memory[] memory"
																			}
																		},
																		"id": 1671,
																		"indexExpression": {
																			"id": 1670,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "4169:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4155:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_enum$_Version_$1865",
																			"typeString": "enum Version"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1659,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4062:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																			"typeString": "contract PYGGportfolioManagement"
																		}
																	},
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4067:17:9",
																	"memberName": "swapTokenForToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2012,
																	"src": "4062:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$877_$_t_uint256_$_t_enum$_Version_$1865_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (contract IERC20,uint256,enum Version,address,bytes memory) external returns (uint256)"
																	}
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4062:110:9",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1684,
															"nodeType": "TryStatement",
															"src": "4058:220:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1629,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "3854:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1630,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "3858:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
																"typeString": "struct TokenInfo storage ref[] storage ref"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3865:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3858:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3854:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1686,
												"initializationExpression": {
													"assignments": [
														1626
													],
													"declarations": [
														{
															"constant": false,
															"id": 1626,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3847:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1686,
															"src": "3839:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1625,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3839:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1628,
													"initialValue": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3851:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3839:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3873:3:9",
														"subExpression": {
															"id": 1633,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1626,
															"src": "3873:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1635,
													"nodeType": "ExpressionStatement",
													"src": "3873:3:9"
												},
												"nodeType": "ForStatement",
												"src": "3834:454:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1688,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4304:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4308:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4304:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1690,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "4316:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1687,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "4298:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4298:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1692,
												"nodeType": "ExpressionStatement",
												"src": "4298:30:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1693,
														"name": "totalWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "4342:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4354:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4342:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "4339:262:9",
												"trueBody": {
													"id": 1724,
													"nodeType": "Block",
													"src": "4356:245:9",
													"statements": [
														{
															"assignments": [
																1697
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1697,
																	"mutability": "mutable",
																	"name": "feeWETH",
																	"nameLocation": "4378:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1724,
																	"src": "4370:15:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1696,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4370:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1704,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1698,
																				"name": "totalWETH",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1622,
																				"src": "4389:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1699,
																				"name": "withdrawalFee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1244,
																				"src": "4401:13:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "4389:25:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1701,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4388:27:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4418:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "4388:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4370:53:9"
														},
														{
															"assignments": [
																1706
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1706,
																	"mutability": "mutable",
																	"name": "amountAfterFeeWETH",
																	"nameLocation": "4445:18:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1724,
																	"src": "4437:26:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1705,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4437:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1710,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1707,
																	"name": "totalWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "4466:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1708,
																	"name": "feeWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "4478:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4466:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4437:48:9"
														},
														{
															"expression": {
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1711,
																	"name": "totalFeesWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "4499:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1712,
																	"name": "feeWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "4516:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4499:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1714,
															"nodeType": "ExpressionStatement",
															"src": "4499:24:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1719,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4559:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4563:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4559:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1721,
																		"name": "amountAfterFeeWETH",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1706,
																		"src": "4571:18:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1716,
																				"name": "WETH9",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1616,
																				"src": "4543:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1715,
																			"name": "IWETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2709,
																			"src": "4537:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IWETH_$2709_$",
																				"typeString": "type(contract IWETH)"
																			}
																		},
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4537:12:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IWETH_$2709",
																			"typeString": "contract IWETH"
																		}
																	},
																	"id": 1718,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4550:8:9",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 844,
																	"src": "4537:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4537:53:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "4537:53:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "00d06ddd",
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawToETH",
									"nameLocation": "3426:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "3448:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "3440:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3440:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "_path",
												"nameLocation": "3474:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "3461:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3461:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3439:41:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3490:0:9"
									},
									"scope": 1859,
									"src": "3417:1251:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "4728:585:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1733,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "4746:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4760:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4746:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "573e30",
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4763:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c3ba50bb259e05ba80912d6b9c2a543dbf8edeb465a7af7526c9fd468e77eb9",
																"typeString": "literal_string \"W>0\""
															},
															"value": "W>0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c3ba50bb259e05ba80912d6b9c2a543dbf8edeb465a7af7526c9fd468e77eb9",
																"typeString": "literal_string \"W>0\""
															}
														],
														"id": 1732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4738:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4738:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "4738:31:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1741,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4797:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4801:6:9",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4797:10:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1740,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 385,
																	"src": "4787:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4787:21:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1744,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1729,
																"src": "4812:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4787:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "2162616c616e6365",
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4825:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2d049238120a0ead2f12b121417834a966421a889b7828d4d078494dc558b5db",
																"typeString": "literal_string \"!balance\""
															},
															"value": "!balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2d049238120a0ead2f12b121417834a966421a889b7828d4d078494dc558b5db",
																"typeString": "literal_string \"!balance\""
															}
														],
														"id": 1739,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4779:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4779:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "4779:57:9"
											},
											{
												"assignments": [
													1750
												],
												"declarations": [
													{
														"constant": false,
														"id": 1750,
														"mutability": "mutable",
														"name": "userShare",
														"nameLocation": "4855:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "4847:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1749,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4847:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1758,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1751,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "4868:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4882:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "4868:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1754,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4867:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1755,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "4891:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4891:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4867:37:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4847:57:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4920:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4924:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4920:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1762,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1729,
															"src": "4932:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1759,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "4914:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:30:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "4914:30:9"
											},
											{
												"body": {
													"id": 1814,
													"nodeType": "Block",
													"src": "4999:308:9",
													"statements": [
														{
															"assignments": [
																1778
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1778,
																	"mutability": "mutable",
																	"name": "tokenInfo",
																	"nameLocation": "5031:9:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1814,
																	"src": "5013:27:9",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																		"typeString": "struct TokenInfo"
																	},
																	"typeName": {
																		"id": 1777,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1776,
																			"name": "TokenInfo",
																			"nameLocations": [
																				"5013:9:9"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1871,
																			"src": "5013:9:9"
																		},
																		"referencedDeclaration": 1871,
																		"src": "5013:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																			"typeString": "struct TokenInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1782,
															"initialValue": {
																"baseExpression": {
																	"id": 1779,
																	"name": "tokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "5043:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
																		"typeString": "struct TokenInfo storage ref[] storage ref"
																	}
																},
																"id": 1781,
																"indexExpression": {
																	"id": 1780,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "5050:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5043:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenInfo_$1871_storage",
																	"typeString": "struct TokenInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5013:39:9"
														},
														{
															"assignments": [
																1784
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1784,
																	"mutability": "mutable",
																	"name": "tokenAmountToWithdraw",
																	"nameLocation": "5074:21:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1814,
																	"src": "5066:29:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1783,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5066:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1798,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1790,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967268,
																								"src": "5133:4:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																									"typeString": "contract PYGGportfolioManagement"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_PYGGportfolioManagement_$1859",
																									"typeString": "contract PYGGportfolioManagement"
																								}
																							],
																							"id": 1789,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "5125:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_address_$",
																								"typeString": "type(address)"
																							},
																							"typeName": {
																								"id": 1788,
																								"name": "address",
																								"nodeType": "ElementaryTypeName",
																								"src": "5125:7:9",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5125:13:9",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1785,
																							"name": "tokenInfo",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1778,
																							"src": "5099:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																								"typeString": "struct TokenInfo storage pointer"
																							}
																						},
																						"id": 1786,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "5109:5:9",
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1868,
																						"src": "5099:15:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$877",
																							"typeString": "contract IERC20"
																						}
																					},
																					"id": 1787,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5115:9:9",
																					"memberName": "balanceOf",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 834,
																					"src": "5099:25:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address) view external returns (uint256)"
																					}
																				},
																				"id": 1792,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5099:40:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1793,
																				"name": "userShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1750,
																				"src": "5142:9:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5099:52:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1795,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5098:54:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5155:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "5098:62:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5066:94:9"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1799,
																	"name": "tokenAmountToWithdraw",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "5178:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5202:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5178:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1813,
															"nodeType": "IfStatement",
															"src": "5174:123:9",
															"trueBody": {
																"id": 1812,
																"nodeType": "Block",
																"src": "5205:92:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1807,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "5248:3:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1808,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5252:6:9",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "5248:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1809,
																					"name": "tokenAmountToWithdraw",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1784,
																					"src": "5260:21:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1802,
																						"name": "tokenInfo",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1778,
																						"src": "5223:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
																							"typeString": "struct TokenInfo storage pointer"
																						}
																					},
																					"id": 1805,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5233:5:9",
																					"memberName": "token",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1868,
																					"src": "5223:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$877",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5239:8:9",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 844,
																				"src": "5223:24:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5223:59:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1811,
																		"nodeType": "ExpressionStatement",
																		"src": "5223:59:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1769,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "4975:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1770,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "4979:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
																"typeString": "struct TokenInfo storage ref[] storage ref"
															}
														},
														"id": 1771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4986:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4979:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4975:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1815,
												"initializationExpression": {
													"assignments": [
														1766
													],
													"declarations": [
														{
															"constant": false,
															"id": 1766,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4968:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1815,
															"src": "4960:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1765,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4960:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1768,
													"initialValue": {
														"hexValue": "30",
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4972:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4960:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4994:3:9",
														"subExpression": {
															"id": 1773,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "4994:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1775,
													"nodeType": "ExpressionStatement",
													"src": "4994:3:9"
												},
												"nodeType": "ForStatement",
												"src": "4955:352:9"
											}
										]
									},
									"functionSelector": "3043d4d9",
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawInKind",
									"nameLocation": "4683:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "4706:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "4698:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4697:21:9"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4728:0:9"
									},
									"scope": 1859,
									"src": "4674:639:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1847,
										"nodeType": "Block",
										"src": "5396:212:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1824,
														"name": "totalFeesWETH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "5410:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5426:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5410:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1846,
												"nodeType": "IfStatement",
												"src": "5406:196:9",
												"trueBody": {
													"id": 1845,
													"nodeType": "Block",
													"src": "5429:173:9",
													"statements": [
														{
															"assignments": [
																1828,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1828,
																	"mutability": "mutable",
																	"name": "success",
																	"nameLocation": "5449:7:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1845,
																	"src": "5444:12:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1827,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5444:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																null
															],
															"id": 1835,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "",
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5509:2:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"id": 1829,
																			"name": "_receiverFeeAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "5462:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5482:4:9",
																		"memberName": "call",
																		"nodeType": "MemberAccess",
																		"src": "5462:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																		}
																	},
																	"id": 1832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"names": [
																		"value"
																	],
																	"nodeType": "FunctionCallOptions",
																	"options": [
																		{
																			"id": 1831,
																			"name": "totalFeesWETH",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1242,
																			"src": "5494:13:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"src": "5462:46:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
																		"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5462:50:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5443:69:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1837,
																		"name": "success",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1828,
																		"src": "5534:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "7472616e736665724661696c6564",
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5543:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_63019b35170fc46b0653deddaf6c6d426aea885c2c4cc93a67343c32f6af17a8",
																			"typeString": "literal_string \"transferFailed\""
																		},
																		"value": "transferFailed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_63019b35170fc46b0653deddaf6c6d426aea885c2c4cc93a67343c32f6af17a8",
																			"typeString": "literal_string \"transferFailed\""
																		}
																	],
																	"id": 1836,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5526:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5526:34:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1840,
															"nodeType": "ExpressionStatement",
															"src": "5526:34:9"
														},
														{
															"expression": {
																"id": 1843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1841,
																	"name": "totalFeesWETH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "5574:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5590:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5574:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1844,
															"nodeType": "ExpressionStatement",
															"src": "5574:17:9"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a738c7df",
									"id": 1848,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1822,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1821,
												"name": "onlyOwner",
												"nameLocations": [
													"5386:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5386:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5386:9:9"
										}
									],
									"name": "withdrawFeesByOwner",
									"nameLocation": "5328:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "_receiverFeeAddress",
												"nameLocation": "5356:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1848,
												"src": "5348:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5348:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5347:29:9"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5396:0:9"
									},
									"scope": 1859,
									"src": "5319:289:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "5681:30:9",
										"statements": [
											{
												"expression": {
													"id": 1855,
													"name": "tokens",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1240,
													"src": "5698:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage",
														"typeString": "struct TokenInfo storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1854,
												"id": 1856,
												"nodeType": "Return",
												"src": "5691:13:9"
											}
										]
									},
									"functionSelector": "2a5c792a",
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllTokens",
									"nameLocation": "5623:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5635:2:9"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "5661:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct TokenInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1851,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1850,
															"name": "TokenInfo",
															"nameLocations": [
																"5661:9:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1871,
															"src": "5661:9:9"
														},
														"referencedDeclaration": 1871,
														"src": "5661:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenInfo_$1871_storage_ptr",
															"typeString": "struct TokenInfo"
														}
													},
													"id": 1852,
													"nodeType": "ArrayTypeName",
													"src": "5661:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_TokenInfo_$1871_storage_$dyn_storage_ptr",
														"typeString": "struct TokenInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5660:20:9"
									},
									"scope": 1859,
									"src": "5614:97:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1860,
							"src": "399:5314:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								1263
							]
						}
					],
					"src": "32:5682:9"
				},
				"id": 9
			},
			"contracts/Structs.sol": {
				"ast": {
					"absolutePath": "contracts/Structs.sol",
					"exportedSymbols": {
						"FailedSwap": [
							1879
						],
						"IERC20": [
							877
						],
						"Portfolio": [
							1891
						],
						"SwapPath": [
							1900
						],
						"TokenInfo": [
							1871
						],
						"Version": [
							1865
						]
					},
					"id": 1901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1861,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1901,
							"sourceUnit": 878,
							"src": "57:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"canonicalName": "Version",
							"id": 1865,
							"members": [
								{
									"id": 1863,
									"name": "V2",
									"nameLocation": "134:2:10",
									"nodeType": "EnumValue",
									"src": "134:2:10"
								},
								{
									"id": 1864,
									"name": "V3",
									"nameLocation": "142:2:10",
									"nodeType": "EnumValue",
									"src": "142:2:10"
								}
							],
							"name": "Version",
							"nameLocation": "120:7:10",
							"nodeType": "EnumDefinition",
							"src": "115:31:10"
						},
						{
							"canonicalName": "TokenInfo",
							"id": 1871,
							"members": [
								{
									"constant": false,
									"id": 1868,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "178:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1871,
									"src": "171:12:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1867,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1866,
											"name": "IERC20",
											"nameLocations": [
												"171:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "171:6:10"
										},
										"referencedDeclaration": 877,
										"src": "171:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1870,
									"mutability": "mutable",
									"name": "targetPercentage",
									"nameLocation": "197:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1871,
									"src": "189:24:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1869,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "189:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "TokenInfo",
							"nameLocation": "155:9:10",
							"nodeType": "StructDefinition",
							"scope": 1901,
							"src": "148:68:10",
							"visibility": "public"
						},
						{
							"canonicalName": "FailedSwap",
							"id": 1879,
							"members": [
								{
									"constant": false,
									"id": 1873,
									"mutability": "mutable",
									"name": "user",
									"nameLocation": "250:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1879,
									"src": "242:12:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1872,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1876,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "267:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1879,
									"src": "260:12:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$877",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1875,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1874,
											"name": "IERC20",
											"nameLocations": [
												"260:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 877,
											"src": "260:6:10"
										},
										"referencedDeclaration": 877,
										"src": "260:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$877",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1878,
									"mutability": "mutable",
									"name": "amount",
									"nameLocation": "286:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1879,
									"src": "278:14:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1877,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "278:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "FailedSwap",
							"nameLocation": "225:10:10",
							"nodeType": "StructDefinition",
							"scope": 1901,
							"src": "218:77:10",
							"visibility": "public"
						},
						{
							"canonicalName": "Portfolio",
							"id": 1891,
							"members": [
								{
									"constant": false,
									"id": 1881,
									"mutability": "mutable",
									"name": "name",
									"nameLocation": "327:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "320:11:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1880,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "320:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1883,
									"mutability": "mutable",
									"name": "symbol",
									"nameLocation": "344:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "337:13:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1882,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "337:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1886,
									"mutability": "mutable",
									"name": "tokens",
									"nameLocation": "366:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "356:16:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1884,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "356:7:10",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1885,
										"nodeType": "ArrayTypeName",
										"src": "356:9:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1888,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "386:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "378:13:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1887,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1890,
									"mutability": "mutable",
									"name": "portfolioAddress",
									"nameLocation": "405:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1891,
									"src": "397:24:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1889,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "397:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "Portfolio",
							"nameLocation": "304:9:10",
							"nodeType": "StructDefinition",
							"scope": 1901,
							"src": "297:127:10",
							"visibility": "public"
						},
						{
							"canonicalName": "SwapPath",
							"id": 1900,
							"members": [
								{
									"constant": false,
									"id": 1894,
									"mutability": "mutable",
									"name": "path",
									"nameLocation": "456:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1900,
									"src": "448:12:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
										"typeString": "bytes[]"
									},
									"typeName": {
										"baseType": {
											"id": 1892,
											"name": "bytes",
											"nodeType": "ElementaryTypeName",
											"src": "448:5:10",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											}
										},
										"id": 1893,
										"nodeType": "ArrayTypeName",
										"src": "448:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
											"typeString": "bytes[]"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1896,
									"mutability": "mutable",
									"name": "amountIn",
									"nameLocation": "474:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1900,
									"src": "466:16:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1895,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "466:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1899,
									"mutability": "mutable",
									"name": "version",
									"nameLocation": "496:7:10",
									"nodeType": "VariableDeclaration",
									"scope": 1900,
									"src": "488:15:10",
									"stateVariable": false,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Version_$1865",
										"typeString": "enum Version"
									},
									"typeName": {
										"id": 1898,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1897,
											"name": "Version",
											"nameLocations": [
												"488:7:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1865,
											"src": "488:7:10"
										},
										"referencedDeclaration": 1865,
										"src": "488:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Version_$1865",
											"typeString": "enum Version"
										}
									},
									"visibility": "internal"
								}
							],
							"name": "SwapPath",
							"nameLocation": "433:8:10",
							"nodeType": "StructDefinition",
							"scope": 1901,
							"src": "426:80:10",
							"visibility": "public"
						}
					],
					"src": "32:474:10"
				},
				"id": 10
			},
			"contracts/SwapOperationManager.sol": {
				"ast": {
					"absolutePath": "contracts/SwapOperationManager.sol",
					"exportedSymbols": {
						"FailedSwap": [
							1879
						],
						"IERC20": [
							877
						],
						"ISwapRouter": [
							1047
						],
						"IUniswapV2Router01": [
							2583
						],
						"IUniswapV2Router02": [
							2671
						],
						"IUniswapV3Quoter": [
							2692
						],
						"IUniswapV3SwapCallback": [
							947
						],
						"IWETH": [
							2709
						],
						"SwapOperationManager": [
							2230
						],
						"SwapPath": [
							1900
						],
						"TransferHelper": [
							1218
						],
						"Version": [
							1865
						]
					},
					"id": 2231,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1903,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 878,
							"src": "57:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IUniswapV2Router02.sol",
							"file": "./interface/IUniswapV2Router02.sol",
							"id": 1904,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 2672,
							"src": "114:44:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 1905,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 1048,
							"src": "159:68:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IUniswapV3Quoter.sol",
							"file": "./interface/IUniswapV3Quoter.sol",
							"id": 1906,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 2693,
							"src": "228:42:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Structs.sol",
							"file": "./Structs.sol",
							"id": 1910,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 1901,
							"src": "271:62:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1907,
										"name": "FailedSwap",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1879,
										"src": "280:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1908,
										"name": "Version",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1865,
										"src": "292:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 1909,
										"name": "SwapPath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1900,
										"src": "301:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interface/IWETH.sol",
							"file": "./interface/IWETH.sol",
							"id": 1911,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 2710,
							"src": "334:31:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
							"id": 1912,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2231,
							"sourceUnit": 1219,
							"src": "366:70:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "SwapOperationManager",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2230,
							"linearizedBaseContracts": [
								2230
							],
							"name": "SwapOperationManager",
							"nameLocation": "456:20:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "378a653c",
									"id": 1916,
									"mutability": "mutable",
									"name": "failedSwaps",
									"nameLocation": "504:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "484:31:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_FailedSwap_$1879_storage_$dyn_storage",
										"typeString": "struct FailedSwap[]"
									},
									"typeName": {
										"baseType": {
											"id": 1914,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1913,
												"name": "FailedSwap",
												"nameLocations": [
													"484:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1879,
												"src": "484:10:11"
											},
											"referencedDeclaration": 1879,
											"src": "484:10:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FailedSwap_$1879_storage_ptr",
												"typeString": "struct FailedSwap"
											}
										},
										"id": 1915,
										"nodeType": "ArrayTypeName",
										"src": "484:12:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_FailedSwap_$1879_storage_$dyn_storage_ptr",
											"typeString": "struct FailedSwap[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d03153aa",
									"id": 1918,
									"mutability": "mutable",
									"name": "slippageTolerance",
									"nameLocation": "537:17:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "522:32:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1917,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "522:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "36a43f2b",
									"id": 1922,
									"mutability": "mutable",
									"name": "userFailedSwaps",
									"nameLocation": "600:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "565:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1921,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1919,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "573:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "565:27:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1920,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "584:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1694505e",
									"id": 1925,
									"mutability": "mutable",
									"name": "uniswapV2Router",
									"nameLocation": "648:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "622:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
										"typeString": "contract IUniswapV2Router02"
									},
									"typeName": {
										"id": 1924,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1923,
											"name": "IUniswapV2Router02",
											"nameLocations": [
												"622:18:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2671,
											"src": "622:18:11"
										},
										"referencedDeclaration": 2671,
										"src": "622:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
											"typeString": "contract IUniswapV2Router02"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2c76d7a6",
									"id": 1928,
									"mutability": "mutable",
									"name": "uniswapV3Router",
									"nameLocation": "688:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "669:34:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ISwapRouter_$1047",
										"typeString": "contract ISwapRouter"
									},
									"typeName": {
										"id": 1927,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1926,
											"name": "ISwapRouter",
											"nameLocations": [
												"669:11:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1047,
											"src": "669:11:11"
										},
										"referencedDeclaration": 1047,
										"src": "669:11:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISwapRouter_$1047",
											"typeString": "contract ISwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4d20d0f8",
									"id": 1931,
									"mutability": "mutable",
									"name": "uniswapV3Quoter",
									"nameLocation": "733:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2230,
									"src": "709:39:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IUniswapV3Quoter_$2692",
										"typeString": "contract IUniswapV3Quoter"
									},
									"typeName": {
										"id": 1930,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1929,
											"name": "IUniswapV3Quoter",
											"nameLocations": [
												"709:16:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2692,
											"src": "709:16:11"
										},
										"referencedDeclaration": 2692,
										"src": "709:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Quoter_$2692",
											"typeString": "contract IUniswapV3Quoter"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "845:224:11",
										"statements": [
											{
												"expression": {
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1940,
														"name": "uniswapV2Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1925,
														"src": "855:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1942,
																"name": "_uniswapV2Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "892:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1941,
															"name": "IUniswapV2Router02",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2671,
															"src": "873:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$2671_$",
																"typeString": "type(contract IUniswapV2Router02)"
															}
														},
														"id": 1943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "873:36:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
															"typeString": "contract IUniswapV2Router02"
														}
													},
													"src": "855:54:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
														"typeString": "contract IUniswapV2Router02"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "855:54:11"
											},
											{
												"expression": {
													"id": 1950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1946,
														"name": "uniswapV3Router",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1928,
														"src": "919:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1047",
															"typeString": "contract ISwapRouter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1948,
																"name": "_uniswapV3Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1935,
																"src": "949:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1947,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "937:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1047_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 1949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "937:29:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ISwapRouter_$1047",
															"typeString": "contract ISwapRouter"
														}
													},
													"src": "919:47:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ISwapRouter_$1047",
														"typeString": "contract ISwapRouter"
													}
												},
												"id": 1951,
												"nodeType": "ExpressionStatement",
												"src": "919:47:11"
											},
											{
												"expression": {
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1952,
														"name": "uniswapV3Quoter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1931,
														"src": "976:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Quoter_$2692",
															"typeString": "contract IUniswapV3Quoter"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1954,
																"name": "_uniswapV3Quoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1937,
																"src": "1011:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1953,
															"name": "IUniswapV3Quoter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "994:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Quoter_$2692_$",
																"typeString": "type(contract IUniswapV3Quoter)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "994:34:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Quoter_$2692",
															"typeString": "contract IUniswapV3Quoter"
														}
													},
													"src": "976:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Quoter_$2692",
														"typeString": "contract IUniswapV3Quoter"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "976:52:11"
											},
											{
												"expression": {
													"id": 1960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1958,
														"name": "slippageTolerance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "1038:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1058:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "1038:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1961,
												"nodeType": "ExpressionStatement",
												"src": "1038:24:11"
											}
										]
									},
									"id": 1963,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "_uniswapV2Router",
												"nameLocation": "775:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "767:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "_uniswapV3Router",
												"nameLocation": "801:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "793:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"mutability": "mutable",
												"name": "_uniswapV3Quoter",
												"nameLocation": "827:16:11",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "819:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "766:78:11"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "845:0:11"
									},
									"scope": 2230,
									"src": "755:314:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "3699:298:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Version_$1865",
														"typeString": "enum Version"
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1980,
														"name": "_version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "3713:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Version_$1865",
															"typeString": "enum Version"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1981,
															"name": "Version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "3725:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Version_$1865_$",
																"typeString": "type(enum Version)"
															}
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3733:2:11",
														"memberName": "V2",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1863,
														"src": "3725:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Version_$1865",
															"typeString": "enum Version"
														}
													},
													"src": "3713:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_Version_$1865",
															"typeString": "enum Version"
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1992,
															"name": "_version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "3835:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Version_$1865",
																"typeString": "enum Version"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1993,
																"name": "Version",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "3847:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Version_$1865_$",
																	"typeString": "type(enum Version)"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3855:2:11",
															"memberName": "V3",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1864,
															"src": "3847:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Version_$1865",
																"typeString": "enum Version"
															}
														},
														"src": "3835:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 2008,
														"nodeType": "Block",
														"src": "3953:38:11",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "215556",
																			"id": 2005,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3974:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_03cd8ddb0f56ae8e724df2ee9750f66f180ef94d04bf0718d8903fc8c8f5f1ec",
																				"typeString": "literal_string \"!UV\""
																			},
																			"value": "!UV"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_03cd8ddb0f56ae8e724df2ee9750f66f180ef94d04bf0718d8903fc8c8f5f1ec",
																				"typeString": "literal_string \"!UV\""
																			}
																		],
																		"id": 2004,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "3967:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3967:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2007,
																"nodeType": "ExpressionStatement",
																"src": "3967:13:11"
															}
														]
													},
													"id": 2009,
													"nodeType": "IfStatement",
													"src": "3831:160:11",
													"trueBody": {
														"id": 2003,
														"nodeType": "Block",
														"src": "3859:88:11",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 1997,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1966,
																			"src": "3900:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			}
																		},
																		{
																			"id": 1998,
																			"name": "_amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1968,
																			"src": "3908:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1999,
																			"name": "_receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "3919:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2000,
																			"name": "_path",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1975,
																			"src": "3930:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$877",
																				"typeString": "contract IERC20"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 1996,
																		"name": "swapTokenForTokenV3",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2160,
																		"src": "3880:19:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																			"typeString": "function (contract IERC20,uint256,address,bytes memory) returns (uint256)"
																		}
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3880:56:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1979,
																"id": 2002,
																"nodeType": "Return",
																"src": "3873:63:11"
															}
														]
													}
												},
												"id": 2010,
												"nodeType": "IfStatement",
												"src": "3709:282:11",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "3737:88:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1985,
																		"name": "_token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "3778:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1986,
																		"name": "_amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1968,
																		"src": "3786:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1987,
																		"name": "_receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "3797:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1988,
																		"name": "_path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1975,
																		"src": "3808:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$877",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1984,
																	"name": "swapTokenForTokenV2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2095,
																	"src": "3758:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$877_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (contract IERC20,uint256,address,bytes memory) returns (uint256)"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3758:56:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1979,
															"id": 1990,
															"nodeType": "Return",
															"src": "3751:63:11"
														}
													]
												}
											}
										]
									},
									"functionSelector": "74a66061",
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForToken",
									"nameLocation": "3563:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3588:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3581:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1965,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1964,
														"name": "IERC20",
														"nameLocations": [
															"3581:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "3581:6:11"
													},
													"referencedDeclaration": 877,
													"src": "3581:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "3604:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3596:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "_version",
												"nameLocation": "3623:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3615:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Version_$1865",
													"typeString": "enum Version"
												},
												"typeName": {
													"id": 1970,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1969,
														"name": "Version",
														"nameLocations": [
															"3615:7:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1865,
														"src": "3615:7:11"
													},
													"referencedDeclaration": 1865,
													"src": "3615:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Version_$1865",
														"typeString": "enum Version"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "3641:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3633:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "_path",
												"nameLocation": "3665:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3652:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1974,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3652:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:91:11"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1978,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3690:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1977,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3690:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3689:9:11"
									},
									"scope": 2230,
									"src": "3554:443:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2094,
										"nodeType": "Block",
										"src": "4634:603:11",
										"statements": [
											{
												"assignments": [
													2030
												],
												"declarations": [
													{
														"constant": false,
														"id": 2030,
														"mutability": "mutable",
														"name": "pathArray",
														"nameLocation": "4661:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "4644:26:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2028,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4644:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2029,
															"nodeType": "ArrayTypeName",
															"src": "4644:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2039,
												"initialValue": {
													"arguments": [
														{
															"id": 2033,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2021,
															"src": "4684:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"baseExpression": {
																		"id": 2035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4691:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2034,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4691:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4691:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "type(address[] memory)"
																	}
																}
															],
															"id": 2037,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4690:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "type(address[] memory)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "type(address[] memory)"
															}
														],
														"expression": {
															"id": 2031,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4673:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4677:6:11",
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "4673:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4673:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4644:58:11"
											},
											{
												"assignments": [
													2044
												],
												"declarations": [
													{
														"constant": false,
														"id": 2044,
														"mutability": "mutable",
														"name": "expectedAmounts",
														"nameLocation": "4729:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "4712:32:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2042,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4712:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2043,
															"nodeType": "ArrayTypeName",
															"src": "4712:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2050,
												"initialValue": {
													"arguments": [
														{
															"id": 2047,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "4777:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2048,
															"name": "pathArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "4788:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"id": 2045,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "4747:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4763:13:11",
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2571,
														"src": "4747:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4712:86:11"
											},
											{
												"assignments": [
													2052
												],
												"declarations": [
													{
														"constant": false,
														"id": 2052,
														"mutability": "mutable",
														"name": "amountOutMinimum",
														"nameLocation": "4816:16:11",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "4808:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2051,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4808:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2064,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2053,
																		"name": "expectedAmounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2044,
																		"src": "4836:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2055,
																	"indexExpression": {
																		"hexValue": "31",
																		"id": 2054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4852:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4836:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130303030",
																				"id": 2056,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4858:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2057,
																				"name": "slippageTolerance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1918,
																				"src": "4866:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4858:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2059,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4857:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4836:48:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2061,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4835:50:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 2062,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4888:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "4835:58:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4808:85:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2070,
																	"name": "uniswapV2Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1925,
																	"src": "4927:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
																		"typeString": "contract IUniswapV2Router02"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
																		"typeString": "contract IUniswapV2Router02"
																	}
																],
																"id": 2069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4919:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2068,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4919:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4919:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2072,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "4945:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2065,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "4904:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4911:7:11",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "4904:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4904:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2074,
												"nodeType": "ExpressionStatement",
												"src": "4904:51:11"
											},
											{
												"assignments": [
													2079
												],
												"declarations": [
													{
														"constant": false,
														"id": 2079,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "4982:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2094,
														"src": "4965:24:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2077,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4965:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2078,
															"nodeType": "ArrayTypeName",
															"src": "4965:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2089,
												"initialValue": {
													"arguments": [
														{
															"id": 2082,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "5043:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2083,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "5066:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2084,
															"name": "pathArray",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "5132:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 2085,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "5155:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2086,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5177:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5183:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5177:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2080,
															"name": "uniswapV2Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "4992:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router02_$2671",
																"typeString": "contract IUniswapV2Router02"
															}
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5008:21:11",
														"memberName": "swapExactTokensForETH",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2512,
														"src": "4992:37:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256,address[] memory,address,uint256) external returns (uint256[] memory)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4992:210:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4965:237:11"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2090,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "5220:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2092,
													"indexExpression": {
														"hexValue": "31",
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5228:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5220:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2025,
												"id": 2093,
												"nodeType": "Return",
												"src": "5213:17:11"
											}
										]
									},
									"id": 2095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForTokenV2",
									"nameLocation": "4516:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "4543:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "4536:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2013,
														"name": "IERC20",
														"nameLocations": [
															"4536:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "4536:6:11"
													},
													"referencedDeclaration": 877,
													"src": "4536:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "4559:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "4551:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4551:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4578:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "4570:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2018,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4570:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "4601:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "4588:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2020,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4588:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:71:11"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2095,
												"src": "4625:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4625:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4624:9:11"
									},
									"scope": 2230,
									"src": "4507:730:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2159,
										"nodeType": "Block",
										"src": "5984:675:11",
										"statements": [
											{
												"assignments": [
													2110
												],
												"declarations": [
													{
														"constant": false,
														"id": 2110,
														"mutability": "mutable",
														"name": "expectedAmountOut",
														"nameLocation": "6011:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 2159,
														"src": "6003:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2109,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6003:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2116,
												"initialValue": {
													"arguments": [
														{
															"id": 2113,
															"name": "_path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "6063:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2114,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "6070:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2111,
															"name": "uniswapV3Quoter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "6031:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Quoter_$2692",
																"typeString": "contract IUniswapV3Quoter"
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6047:15:11",
														"memberName": "quoteExactInput",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2682,
														"src": "6031:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes memory,uint256) external returns (uint256)"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6031:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6003:77:11"
											},
											{
												"assignments": [
													2118
												],
												"declarations": [
													{
														"constant": false,
														"id": 2118,
														"mutability": "mutable",
														"name": "amountOutMinimum",
														"nameLocation": "6189:16:11",
														"nodeType": "VariableDeclaration",
														"scope": 2159,
														"src": "6181:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6181:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2128,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2119,
																	"name": "expectedAmountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "6209:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130303030",
																				"id": 2120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6230:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2121,
																				"name": "slippageTolerance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1918,
																				"src": "6238:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6230:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2123,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6229:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6209:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2125,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6208:49:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6260:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "6208:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6181:84:11"
											},
											{
												"assignments": [
													2133
												],
												"declarations": [
													{
														"constant": false,
														"id": 2133,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "6311:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2159,
														"src": "6275:42:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputParams"
														},
														"typeName": {
															"id": 2132,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2131,
																"name": "ISwapRouter.ExactInputParams",
																"nameLocations": [
																	"6275:11:11",
																	"6287:16:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 991,
																"src": "6275:28:11"
															},
															"referencedDeclaration": 991,
															"src": "6275:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputParams_$991_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2143,
												"initialValue": {
													"arguments": [
														{
															"id": 2136,
															"name": "_path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "6369:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2137,
															"name": "_receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2102,
															"src": "6399:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2138,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6432:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6438:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6432:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2140,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "6471:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2141,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "6512:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2134,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "6320:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1047_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 2135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6332:16:11",
														"memberName": "ExactInputParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "6320:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputParams_$991_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputParams storage pointer)"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"6363:4:11",
														"6388:9:11",
														"6422:8:11",
														"6461:8:11",
														"6494:16:11"
													],
													"names": [
														"path",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum"
													],
													"nodeType": "FunctionCall",
													"src": "6320:219:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6275:264:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2149,
																	"name": "uniswapV3Router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "6573:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																		"typeString": "contract ISwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																		"typeString": "contract ISwapRouter"
																	}
																],
																"id": 2148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6565:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2147,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6565:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6565:24:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2151,
															"name": "_amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "6591:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2144,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "6550:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$877",
																"typeString": "contract IERC20"
															}
														},
														"id": 2146,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6557:7:11",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 864,
														"src": "6550:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6550:51:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2153,
												"nodeType": "ExpressionStatement",
												"src": "6550:51:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2156,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "6645:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams memory"
															}
														],
														"expression": {
															"id": 2154,
															"name": "uniswapV3Router",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1928,
															"src": "6618:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																"typeString": "contract ISwapRouter"
															}
														},
														"id": 2155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6634:10:11",
														"memberName": "exactInput",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1000,
														"src": "6618:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$991_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"
														}
													},
													"id": 2157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6618:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2108,
												"id": 2158,
												"nodeType": "Return",
												"src": "6611:41:11"
											}
										]
									},
									"id": 2160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokenForTokenV3",
									"nameLocation": "5864:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "5891:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "5884:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$877",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2096,
														"name": "IERC20",
														"nameLocations": [
															"5884:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 877,
														"src": "5884:6:11"
													},
													"referencedDeclaration": 877,
													"src": "5884:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$877",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "_amountIn",
												"nameLocation": "5907:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "5899:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5899:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "_receiver",
												"nameLocation": "5926:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "5918:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5918:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "_path",
												"nameLocation": "5950:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "5937:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2103,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5937:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5883:73:11"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2160,
												"src": "5975:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5974:9:11"
									},
									"scope": 2230,
									"src": "5855:804:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "6740:528:11",
										"statements": [
											{
												"assignments": [
													2168
												],
												"declarations": [
													{
														"constant": false,
														"id": 2168,
														"mutability": "mutable",
														"name": "expectedAmountOut",
														"nameLocation": "6758:17:11",
														"nodeType": "VariableDeclaration",
														"scope": 2211,
														"src": "6750:25:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2167,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6750:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2174,
												"initialValue": {
													"arguments": [
														{
															"id": 2171,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "6810:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 2172,
															"name": "_ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "6816:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2169,
															"name": "uniswapV3Quoter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1931,
															"src": "6778:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Quoter_$2692",
																"typeString": "contract IUniswapV3Quoter"
															}
														},
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6794:15:11",
														"memberName": "quoteExactInput",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2682,
														"src": "6778:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (bytes memory,uint256) external returns (uint256)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6778:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6750:77:11"
											},
											{
												"assignments": [
													2176
												],
												"declarations": [
													{
														"constant": false,
														"id": 2176,
														"mutability": "mutable",
														"name": "amountOutMinimum",
														"nameLocation": "6845:16:11",
														"nodeType": "VariableDeclaration",
														"scope": 2211,
														"src": "6837:24:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2175,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6837:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2186,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2177,
																	"name": "expectedAmountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "6865:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2180,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130303030",
																				"id": 2178,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6886:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2179,
																				"name": "slippageTolerance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1918,
																				"src": "6894:17:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6886:25:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2181,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6885:27:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6865:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2183,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6864:49:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 2184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6916:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "6864:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6837:84:11"
											},
											{
												"assignments": [
													2191
												],
												"declarations": [
													{
														"constant": false,
														"id": 2191,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "6968:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2211,
														"src": "6932:42:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
															"typeString": "struct ISwapRouter.ExactInputParams"
														},
														"typeName": {
															"id": 2190,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2189,
																"name": "ISwapRouter.ExactInputParams",
																"nameLocations": [
																	"6932:11:11",
																	"6944:16:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 991,
																"src": "6932:28:11"
															},
															"referencedDeclaration": 991,
															"src": "6932:28:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputParams_$991_storage_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2202,
												"initialValue": {
													"arguments": [
														{
															"id": 2194,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "7026:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"expression": {
																"id": 2195,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7055:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7059:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7055:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2197,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7089:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7095:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7089:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2199,
															"name": "_ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "7128:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2200,
															"name": "amountOutMinimum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "7170:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2192,
															"name": "ISwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "6977:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ISwapRouter_$1047_$",
																"typeString": "type(contract ISwapRouter)"
															}
														},
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6989:16:11",
														"memberName": "ExactInputParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "6977:28:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputParams_$991_storage_ptr_$",
															"typeString": "type(struct ISwapRouter.ExactInputParams storage pointer)"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"7020:4:11",
														"7044:9:11",
														"7079:8:11",
														"7118:8:11",
														"7152:16:11"
													],
													"names": [
														"path",
														"recipient",
														"deadline",
														"amountIn",
														"amountOutMinimum"
													],
													"nodeType": "FunctionCall",
													"src": "6977:220:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6932:265:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2208,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2191,
															"src": "7254:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
																"typeString": "struct ISwapRouter.ExactInputParams memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputParams_$991_memory_ptr",
																	"typeString": "struct ISwapRouter.ExactInputParams memory"
																}
															],
															"expression": {
																"id": 2203,
																"name": "uniswapV3Router",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "7208:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ISwapRouter_$1047",
																	"typeString": "contract ISwapRouter"
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7224:10:11",
															"memberName": "exactInput",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1000,
															"src": "7208:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$991_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"
															}
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2206,
																"name": "_ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2162,
																"src": "7242:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "7208:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputParams_$991_memory_ptr_$returns$_t_uint256_$value",
															"typeString": "function (struct ISwapRouter.ExactInputParams memory) payable external returns (uint256)"
														}
													},
													"id": 2209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7208:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2210,
												"nodeType": "ExpressionStatement",
												"src": "7208:53:11"
											}
										]
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForTokenV3",
									"nameLocation": "6674:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "_ethAmount",
												"nameLocation": "6700:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "6692:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6692:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "6725:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "6712:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6712:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6691:39:11"
									},
									"returnParameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6740:0:11"
									},
									"scope": 2230,
									"src": "6665:603:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "7345:109:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2218,
																"name": "_slippageTolerance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2214,
																"src": "7363:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7385:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "7363:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "21534c50",
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7392:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79e50942b282b0c50e592a4c6bb3d553d7b124a11f03f0e3e532c259348c5ee0",
																"typeString": "literal_string \"!SLP\""
															},
															"value": "!SLP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79e50942b282b0c50e592a4c6bb3d553d7b124a11f03f0e3e532c259348c5ee0",
																"typeString": "literal_string \"!SLP\""
															}
														],
														"id": 2217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7355:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7355:44:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "7355:44:11"
											},
											{
												"expression": {
													"id": 2226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2224,
														"name": "slippageTolerance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "7409:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2225,
														"name": "_slippageTolerance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "7429:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7409:38:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2227,
												"nodeType": "ExpressionStatement",
												"src": "7409:38:11"
											}
										]
									},
									"functionSelector": "117da1ee",
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setSlippageTolerance",
									"nameLocation": "7287:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "_slippageTolerance",
												"nameLocation": "7316:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "7308:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7308:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7307:28:11"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7345:0:11"
									},
									"scope": 2230,
									"src": "7278:176:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2231,
							"src": "438:7018:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:7424:11"
				},
				"id": 11
			},
			"contracts/interface/IPortfolioFactory.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IPortfolioFactory.sol",
					"exportedSymbols": {
						"IPortfolioFactory": [
							2275
						],
						"Portfolio": [
							1891
						],
						"Version": [
							1865
						]
					},
					"id": 2276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2232,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "contracts/Structs.sol",
							"file": "../Structs.sol",
							"id": 2235,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2276,
							"sourceUnit": 1901,
							"src": "56:52:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2233,
										"name": "Version",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1865,
										"src": "65:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 2234,
										"name": "Portfolio",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1891,
										"src": "74:9:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IPortfolioFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2275,
							"linearizedBaseContracts": [
								2275
							],
							"name": "IPortfolioFactory",
							"nameLocation": "120:17:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "6ae5c6248fd79f23a2f2584639c16e66ec08d47b209d9c39d22ee3518a44c2f0",
									"id": 2248,
									"name": "PortfolioCreated",
									"nameLocation": "151:16:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "184:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "168:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "198:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "191:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "191:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"indexed": false,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "211:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "204:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "204:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "229:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "219:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2242,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "219:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2243,
													"nodeType": "ArrayTypeName",
													"src": "219:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2246,
												"indexed": false,
												"mutability": "mutable",
												"name": "portfolioAddress",
												"nameLocation": "245:16:12",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "237:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "167:95:12"
									},
									"src": "145:118:12"
								},
								{
									"functionSelector": "f39614b8",
									"id": 2265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPortfolio",
									"nameLocation": "278:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "317:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "303:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "303:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "_symbol",
												"nameLocation": "346:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "332:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2251,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "332:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2254,
												"mutability": "mutable",
												"name": "_withdrawalFee",
												"nameLocation": "370:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "363:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2253,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "363:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "_depositFee",
												"nameLocation": "401:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "394:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2255,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "394:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "439:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "422:24:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2257,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "422:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2258,
													"nodeType": "ArrayTypeName",
													"src": "422:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "_targetPercentages",
												"nameLocation": "473:18:12",
												"nodeType": "VariableDeclaration",
												"scope": 2265,
												"src": "456:35:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2260,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "456:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2261,
													"nodeType": "ArrayTypeName",
													"src": "456:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:204:12"
									},
									"returnParameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "506:0:12"
									},
									"scope": 2275,
									"src": "269:238:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5f37dea8",
									"id": 2274,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPortfolios",
									"nameLocation": "522:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "544:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "536:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "536:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "535:16:12"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "575:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Portfolio_$1891_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Portfolio[]"
												},
												"typeName": {
													"baseType": {
														"id": 2270,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 2269,
															"name": "Portfolio",
															"nameLocations": [
																"575:9:12"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1891,
															"src": "575:9:12"
														},
														"referencedDeclaration": 1891,
														"src": "575:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Portfolio_$1891_storage_ptr",
															"typeString": "struct Portfolio"
														}
													},
													"id": 2271,
													"nodeType": "ArrayTypeName",
													"src": "575:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Portfolio_$1891_storage_$dyn_storage_ptr",
														"typeString": "struct Portfolio[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "574:20:12"
									},
									"scope": 2275,
									"src": "513:82:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2276,
							"src": "110:487:12",
							"usedErrors": [],
							"usedEvents": [
								2248
							]
						}
					],
					"src": "32:565:12"
				},
				"id": 12
			},
			"contracts/interface/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2583
						]
					},
					"id": 2584,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2277,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2583,
							"linearizedBaseContracts": [
								2583
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 2282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:13"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "103:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:13"
									},
									"scope": 2583,
									"src": "61:51:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 2287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:13"
									},
									"returnParameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2287,
												"src": "156:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:13"
									},
									"scope": 2583,
									"src": "117:48:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 2312,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "202:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "226:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2290,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2293,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "250:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2292,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "279:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "308:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2299,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "333:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2298,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "358:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "378:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2302,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:13"
									},
									"returnParameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2306,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "416:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2305,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2308,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "430:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2307,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2312,
												"src": "444:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:13"
									},
									"scope": 2583,
									"src": "171:289:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 2333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "499:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2316,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "522:23:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2315,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "555:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "584:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "611:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "631:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:13"
									},
									"returnParameters": {
										"id": 2332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "677:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "695:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2328,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2331,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2333,
												"src": "711:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2330,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:13"
									},
									"scope": 2583,
									"src": "465:262:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 2354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "766:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2337,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "790:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "814:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "838:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2343,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "863:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2342,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2345,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "888:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2347,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "908:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2346,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:13"
									},
									"returnParameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2350,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "946:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2354,
												"src": "960:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:13"
									},
									"scope": 2583,
									"src": "732:242:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 2373,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1016:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2358,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1039:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2357,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2360,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1063:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2359,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2362,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1092:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2364,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1119:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1139:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2365,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:13"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1177:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2368,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "1195:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:13"
									},
									"scope": 2583,
									"src": "979:232:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 2402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1260:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2377,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1284:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1308:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2378,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1332:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1357:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2382,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1382:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1402:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1425:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2388,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1442:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2390,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1451:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1462:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:13"
									},
									"returnParameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1496:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2400,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2402,
												"src": "1510:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:13"
									},
									"scope": 2583,
									"src": "1216:308:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 2429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2404,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1576:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2406,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1599:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2405,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2408,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1623:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1652:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2412,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1679:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2414,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1699:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2413,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2416,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1722:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2415,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1739:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2417,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1748:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2419,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2422,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1759:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2421,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:13"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2425,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1793:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2424,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2429,
												"src": "1811:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:13"
									},
									"scope": 2583,
									"src": "1529:298:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 2446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2431,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "1875:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2430,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2433,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "1898:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2432,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2436,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "1925:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2434,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2435,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "1958:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "1978:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:13"
									},
									"returnParameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2444,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "2016:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2442,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2443,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:13"
									},
									"scope": 2583,
									"src": "1832:207:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 2463,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2448,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2087:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2447,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2111:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2449,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2137:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2451,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2452,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2170:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2190:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:13"
									},
									"returnParameters": {
										"id": 2462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2461,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "2228:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2459,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2460,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:13"
									},
									"scope": 2583,
									"src": "2044:207:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 2478,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2465,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "2287:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2468,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "2306:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2466,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2467,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "2331:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "2343:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2471,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:13"
									},
									"returnParameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2478,
												"src": "2408:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2474,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2475,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:13"
									},
									"scope": 2583,
									"src": "2256:175:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 2495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "2467:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "2483:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "2501:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2483,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2484,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "2526:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "2538:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2488,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:13"
									},
									"returnParameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "2587:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2491,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2492,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:13"
									},
									"scope": 2583,
									"src": "2436:174:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 2512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "2646:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2499,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "2661:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2498,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "2680:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2500,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2501,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "2705:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "2717:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:13"
									},
									"returnParameters": {
										"id": 2511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2510,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "2766:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2508,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2509,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:13"
									},
									"scope": 2583,
									"src": "2615:174:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 2527,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2514,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2825:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2513,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2841:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2515,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2516,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2866:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2878:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:13"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "2943:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2523,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2524,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:13"
									},
									"scope": 2583,
									"src": "2794:172:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 2538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2529,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "2987:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "3001:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "3016:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2532,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:13"
									},
									"returnParameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2538,
												"src": "3054:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:13"
									},
									"scope": 2583,
									"src": "2972:96:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 2549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2540,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "3095:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2542,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "3110:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2541,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2544,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "3126:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2543,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:13"
									},
									"returnParameters": {
										"id": 2548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2547,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2549,
												"src": "3166:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:13"
									},
									"scope": 2583,
									"src": "3073:109:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 2560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2551,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "3208:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "3224:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2555,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "3240:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2554,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:13"
									},
									"returnParameters": {
										"id": 2559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2558,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2560,
												"src": "3280:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:13"
									},
									"scope": 2583,
									"src": "3187:108:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 2571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "3323:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "3338:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2563,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2564,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:13"
									},
									"returnParameters": {
										"id": 2570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2571,
												"src": "3386:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2567,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2568,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:13"
									},
									"scope": 2583,
									"src": "3300:109:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 2582,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "3436:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2572,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2576,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "3452:23:13",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2574,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:13",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2575,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:13"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2582,
												"src": "3500:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2578,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2579,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:13"
									},
									"scope": 2583,
									"src": "3414:109:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2584,
							"src": "26:3499:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:3525:13"
				},
				"id": 13
			},
			"contracts/interface/IUniswapV2Router02.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IUniswapV2Router02.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							2583
						],
						"IUniswapV2Router02": [
							2671
						]
					},
					"id": 2672,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2585,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "1:24:14"
						},
						{
							"absolutePath": "contracts/interface/IUniswapV2Router01.sol",
							"file": "./IUniswapV2Router01.sol",
							"id": 2586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2672,
							"sourceUnit": 2584,
							"src": "27:34:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2587,
										"name": "IUniswapV2Router01",
										"nameLocations": [
											"95:18:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2583,
										"src": "95:18:14"
									},
									"id": 2588,
									"nodeType": "InheritanceSpecifier",
									"src": "95:18:14"
								}
							],
							"canonicalName": "IUniswapV2Router02",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2671,
							"linearizedBaseContracts": [
								2671,
								2583
							],
							"name": "IUniswapV2Router02",
							"nameLocation": "73:18:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "af2979eb",
									"id": 2605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHSupportingFeeOnTransferTokens",
									"nameLocation": "129:47:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2590,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "194:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "186:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2592,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "214:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "209:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2591,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "209:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "238:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "233:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "233:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2596,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "267:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "262:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2595,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "262:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2598,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "297:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "289:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "289:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2600,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "314:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "309:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2599,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "176:152:14"
									},
									"returnParameters": {
										"id": 2604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2603,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "352:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "347:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2602,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "347:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:16:14"
									},
									"scope": 2671,
									"src": "120:243:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5b0d5984",
									"id": 2630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens",
									"nameLocation": "377:57:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "452:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "444:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "472:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "467:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2608,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "467:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "496:14:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "491:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2610,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "491:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "525:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "520:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "520:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "555:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "547:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2617,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "572:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "567:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2616,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "567:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "595:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "590:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2618,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "590:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "613:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "607:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2620,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "607:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "624:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "616:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2622,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2625,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "635:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "627:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2624,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "627:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "434:208:14"
									},
									"returnParameters": {
										"id": 2629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "666:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "661:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "661:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:16:14"
									},
									"scope": 2671,
									"src": "368:309:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5c11d795",
									"id": 2644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "692:53:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2632,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "760:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "755:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2631,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "755:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "783:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "778:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "824:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "805:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2635,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "805:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2636,
													"nodeType": "ArrayTypeName",
													"src": "805:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "846:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "838:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2641,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "863:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2644,
												"src": "858:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2640,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "858:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:132:14"
									},
									"returnParameters": {
										"id": 2643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "886:0:14"
									},
									"scope": 2671,
									"src": "683:204:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "b6f9de95",
									"id": 2656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokensSupportingFeeOnTransferTokens",
									"nameLocation": "901:50:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2646,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "966:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "961:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2645,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "961:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1007:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "988:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2647,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "988:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2648,
													"nodeType": "ArrayTypeName",
													"src": "988:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2651,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1029:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "1021:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1046:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "1041:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2652,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1041:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "951:109:14"
									},
									"returnParameters": {
										"id": 2655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1077:0:14"
									},
									"scope": 2671,
									"src": "892:186:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "791ac947",
									"id": 2670,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETHSupportingFeeOnTransferTokens",
									"nameLocation": "1092:50:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1157:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "1152:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2657,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1152:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2660,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1180:12:14",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "1175:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2659,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1175:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1221:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "1202:23:14",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2661,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1202:7:14",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2662,
													"nodeType": "ArrayTypeName",
													"src": "1202:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1243:2:14",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "1235:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1260:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2670,
												"src": "1255:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1255:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1142:132:14"
									},
									"returnParameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:14"
									},
									"scope": 2671,
									"src": "1083:201:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2672,
							"src": "63:1223:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1:1286:14"
				},
				"id": 14
			},
			"contracts/interface/IUniswapV3Quoter.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IUniswapV3Quoter.sol",
					"exportedSymbols": {
						"IUniswapV3Quoter": [
							2692
						]
					},
					"id": 2693,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2673,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Quoter",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2692,
							"linearizedBaseContracts": [
								2692
							],
							"name": "IUniswapV3Quoter",
							"nameLocation": "35:16:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "cdca1753",
									"id": 2682,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nameLocation": "67:15:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2675,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "96:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "83:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "83:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2677,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "110:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "102:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "82:37:15"
									},
									"returnParameters": {
										"id": 2681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2680,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "146:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2682,
												"src": "138:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "138:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "137:19:15"
									},
									"scope": 2692,
									"src": "58:99:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f80bb1d",
									"id": 2691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nameLocation": "171:16:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "201:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "188:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2683,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "188:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "215:9:15",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "207:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "187:38:15"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "252:8:15",
												"nodeType": "VariableDeclaration",
												"scope": 2691,
												"src": "244:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "244:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "243:18:15"
									},
									"scope": 2692,
									"src": "162:100:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2693,
							"src": "25:239:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:265:15"
				},
				"id": 15
			},
			"contracts/interface/IWETH.sol": {
				"ast": {
					"absolutePath": "contracts/interface/IWETH.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IWETH": [
							2709
						]
					},
					"id": 2710,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:23:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2695,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2710,
							"sourceUnit": 878,
							"src": "70:56:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2697,
										"name": "IERC20",
										"nameLocations": [
											"178:6:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "178:6:16"
									},
									"id": 2698,
									"nodeType": "InheritanceSpecifier",
									"src": "178:6:16"
								}
							],
							"canonicalName": "IWETH",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2696,
								"nodeType": "StructuredDocumentation",
								"src": "128:31:16",
								"text": "@title Interface for WETH9"
							},
							"fullyImplemented": false,
							"id": 2709,
							"linearizedBaseContracts": [
								2709,
								877
							],
							"name": "IWETH",
							"nameLocation": "169:5:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2699,
										"nodeType": "StructuredDocumentation",
										"src": "191:46:16",
										"text": "@notice Deposit ether to get wrapped ether"
									},
									"functionSelector": "d0e30db0",
									"id": 2702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "251:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "258:2:16"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:0:16"
									},
									"scope": 2709,
									"src": "242:36:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2703,
										"nodeType": "StructuredDocumentation",
										"src": "284:47:16",
										"text": "@notice Withdraw wrapped ether to get ether"
									},
									"functionSelector": "2e1a7d4d",
									"id": 2708,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "345:8:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2708,
												"src": "354:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "354:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "353:9:16"
									},
									"returnParameters": {
										"id": 2707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "371:0:16"
									},
									"scope": 2709,
									"src": "336:36:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2710,
							"src": "159:215:16",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "45:329:16"
				},
				"id": 16
			}
		}
	}
}